def eq_match_nat_type_S :
  sttfa.eps (sttfa.forallP (return_type:sttfa.type => sttfa.forall return_type (case_O:(sttfa.etap (sttfa.p return_type)) => sttfa.forall (sttfa.arrow nat.nat return_type) (case_S:(sttfa.etap (sttfa.p (sttfa.arrow nat.nat return_type))) => sttfa.forall nat.nat (n:(sttfa.etap (sttfa.p nat.nat)) => leibniz.leibniz return_type (match_nat_type.match_nat_type return_type case_O case_S (S.S n)) (case_S n))))))
  :=
  return_type:sttfa.type => case_O:(sttfa.etap (sttfa.p return_type)) => case_S:(sttfa.etap (sttfa.p (sttfa.arrow nat.nat return_type))) => n:(sttfa.etap (sttfa.p nat.nat)) => equal_leibniz.equal_leibniz return_type (match_nat_type.match_nat_type return_type case_O case_S (S.S n)) (case_S n) (axiom_match_nat_type_S.axiom_match_nat_type_S return_type case_O case_S n).

