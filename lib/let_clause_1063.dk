def let_clause_1063 :
  sttfa.eps (sttfa.forall (sttfa.arrow nat.nat nat.nat) (f:(sttfa.etap (sttfa.p (sttfa.arrow nat.nat nat.nat))) => sttfa.forall nat.nat (n:(sttfa.etap (sttfa.p nat.nat)) => sttfa.impl (permut.permut f n) (sttfa.forall nat.nat (i:(sttfa.etap (sttfa.p nat.nat)) => sttfa.forall nat.nat (j:(sttfa.etap (sttfa.p nat.nat)) => sttfa.impl (le.le i n) (sttfa.impl (le.le j n) (sttfa.forall nat.nat (a:(sttfa.etap (sttfa.p nat.nat)) => sttfa.impl (And.And (le.le a n) (eq.eq nat.nat (f a) i)) (sttfa.impl (le.le a n) (sttfa.impl (eq.eq nat.nat (f a) i) (sttfa.forall nat.nat (b:(sttfa.etap (sttfa.p nat.nat)) => sttfa.impl (And.And (le.le b n) (eq.eq nat.nat (f b) j)) (sttfa.impl (le.le b n) (sttfa.impl (eq.eq nat.nat (f b) j) (sttfa.impl (sttfa.forall nat.nat (i0:(sttfa.etap (sttfa.p nat.nat)) => sttfa.impl (le.le i0 n) (le.le (f i0) n))) (sttfa.impl (injn.injn f n) (sttfa.impl (eq.eq nat.nat a b) (eq.eq nat.nat (f a) j)))))))))))))))))))
  :=
  f:(sttfa.etap (sttfa.p (sttfa.arrow nat.nat nat.nat))) => n:(sttfa.etap (sttfa.p nat.nat)) => permf:(sttfa.eps (permut.permut f n)) => i:(sttfa.etap (sttfa.p nat.nat)) => j:(sttfa.etap (sttfa.p nat.nat)) => lein:(sttfa.eps (le.le i n)) => lejn:(sttfa.eps (le.le j n)) => a:(sttfa.etap (sttfa.p nat.nat)) => _clearme:(sttfa.eps (And.And (le.le a n) (eq.eq nat.nat (f a) i))) => lean:(sttfa.eps (le.le a n)) => fa:(sttfa.eps (eq.eq nat.nat (f a) i)) => b:(sttfa.etap (sttfa.p nat.nat)) => _clearme0:(sttfa.eps (And.And (le.le b n) (eq.eq nat.nat (f b) j))) => lebn:(sttfa.eps (le.le b n)) => fb:(sttfa.eps (eq.eq nat.nat (f b) j)) => __:(sttfa.eps (sttfa.forall nat.nat (i0:(sttfa.etap (sttfa.p nat.nat)) => sttfa.impl (le.le i0 n) (le.le (f i0) n)))) => injf:(sttfa.eps (injn.injn f n)) => auto:(sttfa.eps (eq.eq nat.nat a b)) => rewrite_r.rewrite_r nat.nat b (__1:(sttfa.etap (sttfa.p nat.nat)) => eq.eq nat.nat (f __1) j) fb a auto.

