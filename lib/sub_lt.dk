def sub_lt :
  sttfa.eps (sttfa.forall (sttfa.arrow nat.nat nat.nat) (e:(sttfa.etap (sttfa.p (sttfa.arrow nat.nat nat.nat))) => sttfa.forall (sttfa.arrow nat.nat bool.bool) (p:(sttfa.etap (sttfa.p (sttfa.arrow nat.nat bool.bool))) => sttfa.forall nat.nat (n:(sttfa.etap (sttfa.p nat.nat)) => sttfa.forall nat.nat (m:(sttfa.etap (sttfa.p nat.nat)) => sttfa.impl (le.le n m) (sub_hk.sub_hk (x:(sttfa.etap (sttfa.p nat.nat)) => x) (x:(sttfa.etap (sttfa.p nat.nat)) => x) n m p p e e))))))
  :=
  e:(sttfa.etap (sttfa.p (sttfa.arrow nat.nat nat.nat))) => f:(sttfa.etap (sttfa.p (sttfa.arrow nat.nat bool.bool))) => n:(sttfa.etap (sttfa.p nat.nat)) => m:(sttfa.etap (sttfa.p nat.nat)) => lenm:(sttfa.eps (le.le n m)) => i:(sttfa.etap (sttfa.p nat.nat)) => lti:(sttfa.eps (lt.lt i n)) => fi:(sttfa.eps (eq.eq bool.bool (f i) true.true)) => conj.conj (And.And (lt.lt i m) (eq.eq bool.bool (f i) true.true)) (eq.eq nat.nat i i) (conj.conj (lt.lt i m) (eq.eq bool.bool (f i) true.true) (lt_to_le_to_lt.lt_to_le_to_lt i n m lti lenm) (rewrite_r.rewrite_r bool.bool true.true (__:(sttfa.etap (sttfa.p bool.bool)) => eq.eq bool.bool __ true.true) (refl.refl bool.bool true.true) (f i) fi)) (refl.refl nat.nat i).

