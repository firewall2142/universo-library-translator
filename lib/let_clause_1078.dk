def let_clause_1078 :
  sttfa.eps (sttfa.forall nat.nat (a:(sttfa.etap (sttfa.p nat.nat)) => sttfa.forall nat.nat (b:(sttfa.etap (sttfa.p nat.nat)) => sttfa.forall nat.nat (q:(sttfa.etap (sttfa.p nat.nat)) => sttfa.forall nat.nat (r:(sttfa.etap (sttfa.p nat.nat)) => sttfa.forall nat.nat (q1:(sttfa.etap (sttfa.p nat.nat)) => sttfa.forall nat.nat (r1:(sttfa.etap (sttfa.p nat.nat)) => sttfa.impl (div_mod_spec.div_mod_spec a b q r) (sttfa.impl (lt.lt r b) (sttfa.impl (eq.eq nat.nat a (plus.plus (times.times q b) r)) (sttfa.impl (div_mod_spec.div_mod_spec a b q1 r1) (sttfa.impl (lt.lt r1 b) (sttfa.impl (eq.eq nat.nat a (plus.plus (times.times q1 b) r1)) (sttfa.impl (le.le q q1) (sttfa.impl (lt.lt q q1) (eq.eq nat.nat a (plus.plus r (times.times b q)))))))))))))))))
  :=
  a:(sttfa.etap (sttfa.p nat.nat)) => b:(sttfa.etap (sttfa.p nat.nat)) => q:(sttfa.etap (sttfa.p nat.nat)) => r:(sttfa.etap (sttfa.p nat.nat)) => q1:(sttfa.etap (sttfa.p nat.nat)) => r1:(sttfa.etap (sttfa.p nat.nat)) => _clearme:(sttfa.eps (div_mod_spec.div_mod_spec a b q r)) => ltrb:(sttfa.eps (lt.lt r b)) => spec:(sttfa.eps (eq.eq nat.nat a (plus.plus (times.times q b) r))) => _clearme0:(sttfa.eps (div_mod_spec.div_mod_spec a b q1 r1)) => ltr1b:(sttfa.eps (lt.lt r1 b)) => spec1:(sttfa.eps (eq.eq nat.nat a (plus.plus (times.times q1 b) r1))) => leqq1:(sttfa.eps (le.le q q1)) => ltqq1:(sttfa.eps (lt.lt q q1)) => rewrite_l.rewrite_l nat.nat (plus.plus (times.times b q) r) (__:(sttfa.etap (sttfa.p nat.nat)) => eq.eq nat.nat a __) (rewrite_l.rewrite_l nat.nat (times.times q b) (__:(sttfa.etap (sttfa.p nat.nat)) => eq.eq nat.nat a (plus.plus __ r)) spec (times.times b q) (commutative_times.commutative_times q b)) (plus.plus r (times.times b q)) (commutative_plus.commutative_plus (times.times b q) r).

