def bigop_Sfalse :
  sttfa.eps (sttfa.forallP (B:sttfa.type => sttfa.forall nat.nat (k:(sttfa.etap (sttfa.p nat.nat)) => sttfa.forall (sttfa.arrow nat.nat bool.bool) (p:(sttfa.etap (sttfa.p (sttfa.arrow nat.nat bool.bool))) => sttfa.forall B (nil:(sttfa.etap (sttfa.p B)) => sttfa.forall (sttfa.arrow B (sttfa.arrow B B)) (op:(sttfa.etap (sttfa.p (sttfa.arrow B (sttfa.arrow B B)))) => sttfa.forall (sttfa.arrow nat.nat B) (f:(sttfa.etap (sttfa.p (sttfa.arrow nat.nat B))) => sttfa.impl (eq.eq bool.bool (p k) false.false) (eq.eq B (bigop.bigop B (S.S k) (i:(sttfa.etap (sttfa.p nat.nat)) => p i) nil op (i:(sttfa.etap (sttfa.p nat.nat)) => f i)) (bigop.bigop B k (i:(sttfa.etap (sttfa.p nat.nat)) => p i) nil op (i:(sttfa.etap (sttfa.p nat.nat)) => f i))))))))))
  :=
  B:sttfa.type => k:(sttfa.etap (sttfa.p nat.nat)) => p:(sttfa.etap (sttfa.p (sttfa.arrow nat.nat bool.bool))) => nil:(sttfa.etap (sttfa.p B)) => op:(sttfa.etap (sttfa.p (sttfa.arrow B (sttfa.arrow B B)))) => f:(sttfa.etap (sttfa.p (sttfa.arrow nat.nat B))) => sym_eq_bigop_S.sym_eq_bigop_S B k (y:(sttfa.etap (sttfa.p (sttfa.arrow (sttfa.arrow nat.nat bool.bool) (sttfa.arrow B (sttfa.arrow (sttfa.arrow B (sttfa.arrow B B)) (sttfa.arrow (sttfa.arrow nat.nat B) B)))))) => sttfa.impl (eq.eq bool.bool (p k) false.false) (eq.eq B (y (i:(sttfa.etap (sttfa.p nat.nat)) => p i) nil op (i:(sttfa.etap (sttfa.p nat.nat)) => f i)) (bigop.bigop B k (i:(sttfa.etap (sttfa.p nat.nat)) => p i) nil op (i:(sttfa.etap (sttfa.p nat.nat)) => f i)))) (sym_eq_bigop_body_S.sym_eq_bigop_body_S B k (y:(sttfa.etap (sttfa.p (sttfa.arrow (sttfa.arrow nat.nat bool.bool) (sttfa.arrow B (sttfa.arrow (sttfa.arrow B (sttfa.arrow B B)) (sttfa.arrow (sttfa.arrow nat.nat B) B)))))) => sttfa.impl (eq.eq bool.bool (p k) false.false) (eq.eq B (y (i:(sttfa.etap (sttfa.p nat.nat)) => p i) nil op (i:(sttfa.etap (sttfa.p nat.nat)) => f i)) (bigop.bigop B k (i:(sttfa.etap (sttfa.p nat.nat)) => p i) nil op (i:(sttfa.etap (sttfa.p nat.nat)) => f i)))) (H:(sttfa.eps (eq.eq bool.bool (p k) false.false)) => eq_ind_r.eq_ind_r bool.bool false.false (x:(sttfa.etap (sttfa.p bool.bool)) => eq.eq B (match_bool_type.match_bool_type B (op (f k) (bigop.bigop B k (i:(sttfa.etap (sttfa.p nat.nat)) => p i) nil op (i:(sttfa.etap (sttfa.p nat.nat)) => f i))) (bigop.bigop B k (i:(sttfa.etap (sttfa.p nat.nat)) => p i) nil op (i:(sttfa.etap (sttfa.p nat.nat)) => f i)) x) (bigop.bigop B k (i:(sttfa.etap (sttfa.p nat.nat)) => p i) nil op (i:(sttfa.etap (sttfa.p nat.nat)) => f i))) (eq_match_bool_type_false.eq_match_bool_type_false B (op (f k) (bigop.bigop B k (i:(sttfa.etap (sttfa.p nat.nat)) => p i) nil op (i:(sttfa.etap (sttfa.p nat.nat)) => f i))) (bigop.bigop B k (i:(sttfa.etap (sttfa.p nat.nat)) => p i) nil op (i:(sttfa.etap (sttfa.p nat.nat)) => f i)) (y:(sttfa.etap (sttfa.p B)) => eq.eq B (match_bool_type.match_bool_type B (op (f k) (bigop.bigop B k (i:(sttfa.etap (sttfa.p nat.nat)) => p i) nil op (i:(sttfa.etap (sttfa.p nat.nat)) => f i))) (bigop.bigop B k (i:(sttfa.etap (sttfa.p nat.nat)) => p i) nil op (i:(sttfa.etap (sttfa.p nat.nat)) => f i)) false.false) y) (refl.refl B (match_bool_type.match_bool_type B (op (f k) (bigop.bigop B k (i:(sttfa.etap (sttfa.p nat.nat)) => p i) nil op (i:(sttfa.etap (sttfa.p nat.nat)) => f i))) (bigop.bigop B k (i:(sttfa.etap (sttfa.p nat.nat)) => p i) nil op (i:(sttfa.etap (sttfa.p nat.nat)) => f i)) false.false))) (p k) H)).

