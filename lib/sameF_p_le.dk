def sameF_p_le :
  sttfa.eps (sttfa.forallP (A:sttfa.type => sttfa.forall (sttfa.arrow nat.nat bool.bool) (p:(sttfa.etap (sttfa.p (sttfa.arrow nat.nat bool.bool))) => sttfa.forall (sttfa.arrow nat.nat A) (f:(sttfa.etap (sttfa.p (sttfa.arrow nat.nat A))) => sttfa.forall (sttfa.arrow nat.nat A) (g:(sttfa.etap (sttfa.p (sttfa.arrow nat.nat A))) => sttfa.forall nat.nat (n:(sttfa.etap (sttfa.p nat.nat)) => sttfa.forall nat.nat (m:(sttfa.etap (sttfa.p nat.nat)) => sttfa.impl (le.le n m) (sttfa.impl (sameF_p.sameF_p A m p f g) (sameF_p.sameF_p A n p f g)))))))))
  :=
  A:sttfa.type => p:(sttfa.etap (sttfa.p (sttfa.arrow nat.nat bool.bool))) => f:(sttfa.etap (sttfa.p (sttfa.arrow nat.nat A))) => g:(sttfa.etap (sttfa.p (sttfa.arrow nat.nat A))) => n:(sttfa.etap (sttfa.p nat.nat)) => m:(sttfa.etap (sttfa.p nat.nat)) => lenm:(sttfa.eps (le.le n m)) => samef:(sttfa.eps (sameF_p.sameF_p A m p f g)) => i:(sttfa.etap (sttfa.p nat.nat)) => ltin:(sttfa.eps (lt.lt i n)) => pi:(sttfa.eps (eq.eq bool.bool (p i) true.true)) => samef i (lt_to_le_to_lt.lt_to_le_to_lt i n m ltin lenm) (rewrite_r.rewrite_r bool.bool true.true (__:(sttfa.etap (sttfa.p bool.bool)) => eq.eq bool.bool __ true.true) (refl.refl bool.bool true.true) (p i) pi).

