def le_to_or_lt_eq :
  sttfa.eps (sttfa.forall nat.nat (n:(sttfa.etap (sttfa.p nat.nat)) => sttfa.forall nat.nat (m:(sttfa.etap (sttfa.p nat.nat)) => sttfa.impl (le.le n m) (Or.Or (lt.lt n m) (eq.eq nat.nat n m)))))
  :=
  n:(sttfa.etap (sttfa.p nat.nat)) => m:(sttfa.etap (sttfa.p nat.nat)) => lenm:(sttfa.eps (le.le n m)) => le_ind.le_ind n (x_417:(sttfa.etap (sttfa.p nat.nat)) => Or.Or (lt.lt n x_417) (eq.eq nat.nat n x_417)) (RC_reflexive.RC_reflexive nat.nat lt.lt n) (m0:(sttfa.etap (sttfa.p nat.nat)) => _x_419:(sttfa.eps (le.le n m0)) => _x_421:(sttfa.eps (Or.Or (lt.lt n m0) (eq.eq nat.nat n m0))) => or_introl.or_introl (lt.lt n (S.S m0)) (eq.eq nat.nat n (S.S m0)) (le_to_lt_to_lt.le_to_lt_to_lt n m0 (S.S m0) _x_419 (eq_coerc.eq_coerc (le.le (S.S m0) (plus.plus O.O (S.S m0))) (le.le (S.S m0) (S.S m0)) (le_plus_n.le_plus_n O.O (S.S m0)) (rewrite_l.rewrite_l nat.nat (S.S m0) (__:(sttfa.etap (sttfa.p nat.nat)) => eq.eq sttfa.bool (le.le (S.S m0) __) (le.le (S.S m0) (S.S m0))) (refl.refl sttfa.bool (le.le (S.S m0) (S.S m0))) (plus.plus O.O (S.S m0)) (plus_O_n.plus_O_n (S.S m0)))))) m lenm.

