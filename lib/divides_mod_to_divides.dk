def divides_mod_to_divides :
  sttfa.eps (sttfa.forall nat.nat (p:(sttfa.etap (sttfa.p nat.nat)) => sttfa.forall nat.nat (m:(sttfa.etap (sttfa.p nat.nat)) => sttfa.forall nat.nat (n:(sttfa.etap (sttfa.p nat.nat)) => sttfa.impl (lt.lt O.O n) (sttfa.impl (divides.divides p (mod.mod m n)) (sttfa.impl (divides.divides p n) (divides.divides p m)))))))
  :=
  p:(sttfa.etap (sttfa.p nat.nat)) => m:(sttfa.etap (sttfa.p nat.nat)) => n:(sttfa.etap (sttfa.p nat.nat)) => posn:(sttfa.eps (lt.lt O.O n)) => _clearme:(sttfa.eps (divides.divides p (mod.mod m n))) => match_divides_prop.match_divides_prop p (mod.mod m n) (sttfa.impl (divides.divides p n) (divides.divides p m)) (q1:(sttfa.etap (sttfa.p nat.nat)) => eq1:(sttfa.eps (eq.eq nat.nat (mod.mod m n) (times.times p q1))) => _clearme0:(sttfa.eps (divides.divides p n)) => match_divides_prop.match_divides_prop p n (divides.divides p m) (q2:(sttfa.etap (sttfa.p nat.nat)) => eq2:(sttfa.eps (eq.eq nat.nat n (times.times p q2))) => quotient.quotient p m (plus.plus (times.times q2 (div.div m n)) q1) (eq_ind_r.eq_ind_r nat.nat (plus.plus (times.times p (times.times q2 (div.div m n))) (times.times p q1)) (x:(sttfa.etap (sttfa.p nat.nat)) => eq.eq nat.nat m x) (eq_ind.eq_ind nat.nat (mod.mod m n) (x_1:(sttfa.etap (sttfa.p nat.nat)) => eq.eq nat.nat m (plus.plus (times.times p (times.times q2 (div.div m n))) x_1)) (eq_ind.eq_ind nat.nat (times.times (times.times p q2) (div.div m n)) (x_1:(sttfa.etap (sttfa.p nat.nat)) => eq.eq nat.nat m (plus.plus x_1 (mod.mod m n))) (eq_ind.eq_ind nat.nat n (x_1:(sttfa.etap (sttfa.p nat.nat)) => eq.eq nat.nat m (plus.plus (times.times x_1 (div.div m n)) (mod.mod m n))) (rewrite_r.rewrite_r nat.nat (plus.plus (mod.mod m n) (times.times n (div.div m n))) (__:(sttfa.etap (sttfa.p nat.nat)) => eq.eq nat.nat m __) (rewrite_l.rewrite_l nat.nat m (__:(sttfa.etap (sttfa.p nat.nat)) => eq.eq nat.nat m __) (refl.refl nat.nat m) (plus.plus (mod.mod m n) (times.times n (div.div m n))) (rewrite_l.rewrite_l nat.nat (plus.plus (times.times n (div.div m n)) (mod.mod m n)) (__:(sttfa.etap (sttfa.p nat.nat)) => eq.eq nat.nat m __) (rewrite_l.rewrite_l nat.nat (times.times (div.div m n) n) (__:(sttfa.etap (sttfa.p nat.nat)) => eq.eq nat.nat m (plus.plus __ (mod.mod m n))) (div_mod.div_mod m n) (times.times n (div.div m n)) (commutative_times.commutative_times (div.div m n) n)) (plus.plus (mod.mod m n) (times.times n (div.div m n))) (commutative_plus.commutative_plus (times.times n (div.div m n)) (mod.mod m n)))) (plus.plus (times.times n (div.div m n)) (mod.mod m n)) (commutative_plus.commutative_plus (times.times n (div.div m n)) (mod.mod m n))) (times.times p q2) eq2) (times.times p (times.times q2 (div.div m n))) (associative_times.associative_times p q2 (div.div m n))) (times.times p q1) eq1) (times.times p (plus.plus (times.times q2 (div.div m n)) q1)) (distributive_times_plus.distributive_times_plus p (times.times q2 (div.div m n)) q1))) _clearme0) _clearme.

