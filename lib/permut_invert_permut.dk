def permut_invert_permut :
  sttfa.eps (sttfa.forall (sttfa.arrow nat.nat nat.nat) (f:(sttfa.etap (sttfa.p (sttfa.arrow nat.nat nat.nat))) => sttfa.forall nat.nat (n:(sttfa.etap (sttfa.p nat.nat)) => sttfa.impl (permut.permut f n) (permut.permut (invert_permut.invert_permut n f) n))))
  :=
  f:(sttfa.etap (sttfa.p (sttfa.arrow nat.nat nat.nat))) => n:(sttfa.etap (sttfa.p nat.nat)) => permf:(sttfa.eps (permut.permut f n)) => conj.conj (sttfa.forall nat.nat (x:(sttfa.etap (sttfa.p nat.nat)) => sttfa.impl (le.le x n) (le.le (invert_permut.invert_permut n f x) n))) (injn.injn (invert_permut.invert_permut n f) n) (i:(sttfa.etap (sttfa.p nat.nat)) => lein:(sttfa.eps (le.le i n)) => nat_ind.nat_ind (_x_365:(sttfa.etap (sttfa.p nat.nat)) => le.le (invert_permut.invert_permut _x_365 f i) _x_365) (sym_eq_invert_permut.sym_eq_invert_permut O.O (y:(sttfa.etap (sttfa.p (sttfa.arrow (sttfa.arrow nat.nat nat.nat) (sttfa.arrow nat.nat nat.nat)))) => le.le (y f i) O.O) (sym_eq_filter_nat_type_O.sym_eq_filter_nat_type_O (sttfa.arrow (sttfa.arrow nat.nat nat.nat) (sttfa.arrow nat.nat nat.nat)) invert_permut_body.invert_permut_body (y:(sttfa.etap (sttfa.p (sttfa.arrow (sttfa.arrow nat.nat nat.nat) (sttfa.arrow nat.nat nat.nat)))) => le.le (y f i) O.O) (sym_eq_invert_permut_body_O.sym_eq_invert_permut_body_O (y:(sttfa.etap (sttfa.p (sttfa.arrow (sttfa.arrow nat.nat nat.nat) (sttfa.arrow nat.nat nat.nat)))) => le.le (y f i) O.O) (match_bool_prop.match_bool_prop (__:(sttfa.etap (sttfa.p bool.bool)) => le.le (match_bool_type.match_bool_type nat.nat O.O O.O __) O.O) (eq_match_bool_type_true.eq_match_bool_type_true nat.nat O.O O.O (y:(sttfa.etap (sttfa.p nat.nat)) => le.le (match_bool_type.match_bool_type nat.nat O.O O.O true.true) y) (le_n.le_n (match_bool_type.match_bool_type nat.nat O.O O.O true.true))) (eq_match_bool_type_false.eq_match_bool_type_false nat.nat O.O O.O (y:(sttfa.etap (sttfa.p nat.nat)) => le.le (match_bool_type.match_bool_type nat.nat O.O O.O false.false) y) (le_n.le_n (match_bool_type.match_bool_type nat.nat O.O O.O false.false))) (eqb.eqb i (f O.O)))))) (n1:(sttfa.etap (sttfa.p nat.nat)) => sym_eq_invert_permut.sym_eq_invert_permut (S.S n1) (y:(sttfa.etap (sttfa.p (sttfa.arrow (sttfa.arrow nat.nat nat.nat) (sttfa.arrow nat.nat nat.nat)))) => sttfa.impl (le.le (invert_permut.invert_permut n1 f i) n1) (le.le (y f i) (S.S n1))) (sym_eq_filter_nat_type_S.sym_eq_filter_nat_type_S (sttfa.arrow (sttfa.arrow nat.nat nat.nat) (sttfa.arrow nat.nat nat.nat)) invert_permut_body.invert_permut_body n1 (y:(sttfa.etap (sttfa.p (sttfa.arrow (sttfa.arrow nat.nat nat.nat) (sttfa.arrow nat.nat nat.nat)))) => sttfa.impl (le.le (invert_permut.invert_permut n1 f i) n1) (le.le (y f i) (S.S n1))) (sym_eq_invert_permut_body_S.sym_eq_invert_permut_body_S n1 (y:(sttfa.etap (sttfa.p (sttfa.arrow (sttfa.arrow nat.nat nat.nat) (sttfa.arrow nat.nat nat.nat)))) => sttfa.impl (le.le (invert_permut.invert_permut n1 f i) n1) (le.le (y f i) (S.S n1))) (Hind:(sttfa.eps (le.le (invert_permut.invert_permut n1 f i) n1)) => match_bool_prop.match_bool_prop (__:(sttfa.etap (sttfa.p bool.bool)) => le.le (match_bool_type.match_bool_type nat.nat (S.S n1) (invert_permut.invert_permut n1 f i) __) (S.S n1)) (eq_match_bool_type_true.eq_match_bool_type_true nat.nat (S.S n1) (invert_permut.invert_permut n1 f i) (y:(sttfa.etap (sttfa.p nat.nat)) => le.le (match_bool_type.match_bool_type nat.nat (S.S n1) (invert_permut.invert_permut n1 f i) true.true) y) (le_n.le_n (match_bool_type.match_bool_type nat.nat (S.S n1) (invert_permut.invert_permut n1 f i) true.true))) (sym_eq_match_bool_type_false.sym_eq_match_bool_type_false nat.nat (S.S n1) (invert_permut.invert_permut n1 f i) (y:(sttfa.etap (sttfa.p nat.nat)) => le.le y (S.S n1)) (le_S.le_S (invert_permut.invert_permut n1 f i) n1 Hind)) (eqb.eqb i (f (S.S n1))))))) n) (injective_invert_permut.injective_invert_permut f n permf).

