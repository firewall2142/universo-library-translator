def sym_eq_bigop_body_S :
  sttfa.eps (sttfa.forallP (H:sttfa.type => sttfa.forall nat.nat (n:(sttfa.etap (sttfa.p nat.nat)) => leibniz.leibniz (sttfa.arrow (sttfa.arrow nat.nat bool.bool) (sttfa.arrow H (sttfa.arrow (sttfa.arrow H (sttfa.arrow H H)) (sttfa.arrow (sttfa.arrow nat.nat H) H)))) (p:(sttfa.etap (sttfa.p (sttfa.arrow nat.nat bool.bool))) => nil:(sttfa.etap (sttfa.p H)) => op:(sttfa.etap (sttfa.p (sttfa.arrow H (sttfa.arrow H H)))) => f:(sttfa.etap (sttfa.p (sttfa.arrow nat.nat H))) => match_bool_type.match_bool_type H (op (f n) (bigop.bigop H n p nil op f)) (bigop.bigop H n p nil op f) (p n)) (bigop_body.bigop_body H (S.S n)))))
  :=
  H:sttfa.type => n:(sttfa.etap (sttfa.p nat.nat)) => sym_leibniz.sym_leibniz (sttfa.arrow (sttfa.arrow nat.nat bool.bool) (sttfa.arrow H (sttfa.arrow (sttfa.arrow H (sttfa.arrow H H)) (sttfa.arrow (sttfa.arrow nat.nat H) H)))) (bigop_body.bigop_body H (S.S n)) (p:(sttfa.etap (sttfa.p (sttfa.arrow nat.nat bool.bool))) => nil:(sttfa.etap (sttfa.p H)) => op:(sttfa.etap (sttfa.p (sttfa.arrow H (sttfa.arrow H H)))) => f:(sttfa.etap (sttfa.p (sttfa.arrow nat.nat H))) => match_bool_type.match_bool_type H (op (f n) (bigop.bigop H n p nil op f)) (bigop.bigop H n p nil op f) (p n)) (eq_bigop_body_S.eq_bigop_body_S H n).

