def lt_O_exp :
  sttfa.eps (sttfa.forall nat.nat (n:(sttfa.etap (sttfa.p nat.nat)) => sttfa.forall nat.nat (m:(sttfa.etap (sttfa.p nat.nat)) => sttfa.impl (lt.lt O.O n) (lt.lt O.O (exp.exp n m)))))
  :=
  n:(sttfa.etap (sttfa.p nat.nat)) => m:(sttfa.etap (sttfa.p nat.nat)) => nat_ind.nat_ind (_x_365:(sttfa.etap (sttfa.p nat.nat)) => sttfa.impl (lt.lt O.O n) (lt.lt O.O (exp.exp n _x_365))) (sym_eq_exp.sym_eq_exp n O.O (y:(sttfa.etap (sttfa.p nat.nat)) => sttfa.impl (lt.lt O.O n) (lt.lt O.O y)) (sym_eq_filter_nat_type_O.sym_eq_filter_nat_type_O nat.nat (exp_body.exp_body n) (y:(sttfa.etap (sttfa.p nat.nat)) => sttfa.impl (lt.lt O.O n) (lt.lt O.O y)) (sym_eq_exp_body_O.sym_eq_exp_body_O n (y:(sttfa.etap (sttfa.p nat.nat)) => sttfa.impl (lt.lt O.O n) (lt.lt O.O y)) (auto:(sttfa.eps (le.le (S.S O.O) n)) => lt_O_S.lt_O_S O.O)))) (a:(sttfa.etap (sttfa.p nat.nat)) => sym_eq_exp.sym_eq_exp n (S.S a) (y:(sttfa.etap (sttfa.p nat.nat)) => sttfa.impl (sttfa.impl (lt.lt O.O n) (lt.lt O.O (exp.exp n a))) (sttfa.impl (lt.lt O.O n) (lt.lt O.O y))) (sym_eq_filter_nat_type_S.sym_eq_filter_nat_type_S nat.nat (exp_body.exp_body n) a (y:(sttfa.etap (sttfa.p nat.nat)) => sttfa.impl (sttfa.impl (lt.lt O.O n) (lt.lt O.O (exp.exp n a))) (sttfa.impl (lt.lt O.O n) (lt.lt O.O y))) (sym_eq_exp_body_S.sym_eq_exp_body_S n a (y:(sttfa.etap (sttfa.p nat.nat)) => sttfa.impl (sttfa.impl (lt.lt O.O n) (lt.lt O.O (exp.exp n a))) (sttfa.impl (lt.lt O.O n) (lt.lt O.O y))) (Hind:(sttfa.eps (sttfa.impl (le.le (S.S O.O) n) (le.le (S.S O.O) (exp.exp n a)))) => posn:(sttfa.eps (le.le (S.S O.O) n)) => eq_times_body_O.eq_times_body_O (y:(sttfa.etap (sttfa.p (sttfa.arrow nat.nat nat.nat))) => le.le (S.S (y (S.S O.O))) (times.times (exp.exp n a) n)) (eq_filter_nat_type_O.eq_filter_nat_type_O (sttfa.arrow nat.nat nat.nat) times_body.times_body (y:(sttfa.etap (sttfa.p (sttfa.arrow nat.nat nat.nat))) => le.le (S.S (y (S.S O.O))) (times.times (exp.exp n a) n)) (eq_times.eq_times O.O (y:(sttfa.etap (sttfa.p (sttfa.arrow nat.nat nat.nat))) => le.le (S.S (y (S.S O.O))) (times.times (exp.exp n a) n)) (eq_plus_body_O.eq_plus_body_O (y:(sttfa.etap (sttfa.p (sttfa.arrow nat.nat nat.nat))) => le.le (S.S (y (times.times O.O (S.S O.O)))) (times.times (exp.exp n a) n)) (eq_filter_nat_type_O.eq_filter_nat_type_O (sttfa.arrow nat.nat nat.nat) plus_body.plus_body (y:(sttfa.etap (sttfa.p (sttfa.arrow nat.nat nat.nat))) => le.le (S.S (y (times.times O.O (S.S O.O)))) (times.times (exp.exp n a) n)) (eq_plus.eq_plus O.O (y:(sttfa.etap (sttfa.p (sttfa.arrow nat.nat nat.nat))) => le.le (S.S (y (times.times O.O (S.S O.O)))) (times.times (exp.exp n a) n)) (eq_plus_body_S.eq_plus_body_S O.O (y:(sttfa.etap (sttfa.p (sttfa.arrow nat.nat nat.nat))) => le.le (y (times.times O.O (S.S O.O))) (times.times (exp.exp n a) n)) (eq_filter_nat_type_S.eq_filter_nat_type_S (sttfa.arrow nat.nat nat.nat) plus_body.plus_body O.O (y:(sttfa.etap (sttfa.p (sttfa.arrow nat.nat nat.nat))) => le.le (y (times.times O.O (S.S O.O))) (times.times (exp.exp n a) n)) (eq_plus.eq_plus (S.S O.O) (y:(sttfa.etap (sttfa.p (sttfa.arrow nat.nat nat.nat))) => le.le (y (times.times O.O (S.S O.O))) (times.times (exp.exp n a) n)) (eq_times_body_S.eq_times_body_S O.O (y:(sttfa.etap (sttfa.p (sttfa.arrow nat.nat nat.nat))) => le.le (y (S.S O.O)) (times.times (exp.exp n a) n)) (eq_filter_nat_type_S.eq_filter_nat_type_S (sttfa.arrow nat.nat nat.nat) times_body.times_body O.O (y:(sttfa.etap (sttfa.p (sttfa.arrow nat.nat nat.nat))) => le.le (y (S.S O.O)) (times.times (exp.exp n a) n)) (eq_times.eq_times (S.S O.O) (y:(sttfa.etap (sttfa.p (sttfa.arrow nat.nat nat.nat))) => le.le (y (S.S O.O)) (times.times (exp.exp n a) n)) (le_times.le_times (S.S O.O) (exp.exp n a) (S.S O.O) n (Hind posn) posn)))))))))))))))) m.

