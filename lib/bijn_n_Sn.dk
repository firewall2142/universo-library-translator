def bijn_n_Sn :
  sttfa.eps (sttfa.forall (sttfa.arrow nat.nat nat.nat) (f:(sttfa.etap (sttfa.p (sttfa.arrow nat.nat nat.nat))) => sttfa.forall nat.nat (n:(sttfa.etap (sttfa.p nat.nat)) => sttfa.impl (bijn.bijn f n) (sttfa.impl (eq.eq nat.nat (f (S.S n)) (S.S n)) (bijn.bijn f (S.S n))))))
  :=
  f:(sttfa.etap (sttfa.p (sttfa.arrow nat.nat nat.nat))) => n:(sttfa.etap (sttfa.p nat.nat)) => bijf:(sttfa.eps (bijn.bijn f n)) => fS:(sttfa.eps (eq.eq nat.nat (f (S.S n)) (S.S n))) => i:(sttfa.etap (sttfa.p nat.nat)) => lein:(sttfa.eps (le.le i (S.S n))) => match_Or_prop.match_Or_prop (lt.lt i (S.S n)) (eq.eq nat.nat i (S.S n)) (ex.ex nat.nat (p:(sttfa.etap (sttfa.p nat.nat)) => And.And (le.le p (S.S n)) (eq.eq nat.nat (f p) i))) (Hi:(sttfa.eps (lt.lt i (S.S n))) => match_ex_prop.match_ex_prop nat.nat (p:(sttfa.etap (sttfa.p nat.nat)) => And.And (le.le p n) (eq.eq nat.nat (f p) i)) (ex.ex nat.nat (p:(sttfa.etap (sttfa.p nat.nat)) => And.And (le.le p (S.S n)) (eq.eq nat.nat (f p) i))) (a:(sttfa.etap (sttfa.p nat.nat)) => _clearme:(sttfa.eps (And.And (le.le a n) (eq.eq nat.nat (f a) i))) => match_And_prop.match_And_prop (le.le a n) (eq.eq nat.nat (f a) i) (ex.ex nat.nat (p:(sttfa.etap (sttfa.p nat.nat)) => And.And (le.le p (S.S n)) (eq.eq nat.nat (f p) i))) (lean:(sttfa.eps (le.le a n)) => fa:(sttfa.eps (eq.eq nat.nat (f a) i)) => ex_intro.ex_intro nat.nat (x:(sttfa.etap (sttfa.p nat.nat)) => And.And (le.le x (S.S n)) (eq.eq nat.nat (f x) i)) a (conj.conj (le.le a (S.S n)) (eq.eq nat.nat (f a) i) (le_S.le_S a n lean) (rewrite_r.rewrite_r nat.nat i (__:(sttfa.etap (sttfa.p nat.nat)) => eq.eq nat.nat __ i) (refl.refl nat.nat i) (f a) fa))) _clearme) (bijf i (le_S_S_to_le.le_S_S_to_le i n Hi))) (Hi:(sttfa.eps (eq.eq nat.nat i (S.S n))) => ex_intro.ex_intro nat.nat (x:(sttfa.etap (sttfa.p nat.nat)) => And.And (le.le x (S.S n)) (eq.eq nat.nat (f x) i)) i (conj.conj (le.le i (S.S n)) (eq.eq nat.nat (f i) i) (eq_coerc.eq_coerc (le.le i i) (le.le i (S.S n)) (le_n.le_n i) (rewrite_l.rewrite_l nat.nat i (__:(sttfa.etap (sttfa.p nat.nat)) => eq.eq sttfa.bool (le.le i i) (le.le i __)) (refl.refl sttfa.bool (le.le i i)) (S.S n) Hi)) (rewrite_r.rewrite_r nat.nat i (__:(sttfa.etap (sttfa.p nat.nat)) => eq.eq nat.nat __ i) (refl.refl nat.nat i) (f i) (rewrite_r.rewrite_r nat.nat (S.S n) (__:(sttfa.etap (sttfa.p nat.nat)) => eq.eq nat.nat (f i) __) (rewrite_r.rewrite_r nat.nat (S.S n) (__:(sttfa.etap (sttfa.p nat.nat)) => eq.eq nat.nat (f __) (S.S n)) fS i Hi) i Hi)))) (le_to_or_lt_eq.le_to_or_lt_eq i (S.S n) lein).

