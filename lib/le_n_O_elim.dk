def le_n_O_elim :
  sttfa.eps (sttfa.forall nat.nat (n:(sttfa.etap (sttfa.p nat.nat)) => sttfa.impl (le.le n O.O) (sttfa.forall (sttfa.arrow nat.nat sttfa.bool) (P:(sttfa.etap (sttfa.p (sttfa.arrow nat.nat sttfa.bool))) => sttfa.impl (P O.O) (P n)))))
  :=
  n:(sttfa.etap (sttfa.p nat.nat)) => match_nat_prop.match_nat_prop (__:(sttfa.etap (sttfa.p nat.nat)) => sttfa.impl (le.le __ O.O) (sttfa.forall (sttfa.arrow nat.nat sttfa.bool) (P:(sttfa.etap (sttfa.p (sttfa.arrow nat.nat sttfa.bool))) => sttfa.impl (P O.O) (P __)))) (auto:(sttfa.eps (le.le O.O O.O)) => P:(sttfa.etap (sttfa.p (sttfa.arrow nat.nat sttfa.bool))) => auto':(sttfa.eps (P O.O)) => auto') (a:(sttfa.etap (sttfa.p nat.nat)) => abs:(sttfa.eps (le.le (S.S a) O.O)) => falsity.falsity (sttfa.forall (sttfa.arrow nat.nat sttfa.bool) (P:(sttfa.etap (sttfa.p (sttfa.arrow nat.nat sttfa.bool))) => sttfa.impl (P O.O) (P (S.S a)))) (absurd.absurd (le.le (S.S a) O.O) abs (not_le_Sn_O.not_le_Sn_O a))) n.

