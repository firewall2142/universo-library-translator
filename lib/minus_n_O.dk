def minus_n_O :
  sttfa.eps (sttfa.forall nat.nat (n:(sttfa.etap (sttfa.p nat.nat)) => eq.eq nat.nat n (minus.minus n O.O)))
  :=
  n:(sttfa.etap (sttfa.p nat.nat)) => match_nat_prop.match_nat_prop (__:(sttfa.etap (sttfa.p nat.nat)) => eq.eq nat.nat __ (minus.minus __ O.O)) (rewrite_l.rewrite_l nat.nat O.O (__:(sttfa.etap (sttfa.p nat.nat)) => eq.eq nat.nat O.O __) (refl.refl nat.nat O.O) (minus.minus O.O O.O) (minus_O_n.minus_O_n O.O)) (auto:(sttfa.etap (sttfa.p nat.nat)) => sym_eq_minus.sym_eq_minus (S.S auto) (y:(sttfa.etap (sttfa.p (sttfa.arrow nat.nat nat.nat))) => eq.eq nat.nat (S.S auto) (y O.O)) (sym_eq_filter_nat_type_S.sym_eq_filter_nat_type_S (sttfa.arrow nat.nat nat.nat) minus_body.minus_body auto (y:(sttfa.etap (sttfa.p (sttfa.arrow nat.nat nat.nat))) => eq.eq nat.nat (S.S auto) (y O.O)) (sym_eq_minus_body_S.sym_eq_minus_body_S auto (y:(sttfa.etap (sttfa.p (sttfa.arrow nat.nat nat.nat))) => eq.eq nat.nat (S.S auto) (y O.O)) (sym_eq_match_nat_type_O.sym_eq_match_nat_type_O nat.nat (S.S auto) (q:(sttfa.etap (sttfa.p nat.nat)) => minus.minus auto q) (y:(sttfa.etap (sttfa.p nat.nat)) => eq.eq nat.nat (S.S auto) y) (refl.refl nat.nat (S.S auto)))))) n.

