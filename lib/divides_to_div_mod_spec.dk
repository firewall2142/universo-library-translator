def divides_to_div_mod_spec :
  sttfa.eps (sttfa.forall nat.nat (n:(sttfa.etap (sttfa.p nat.nat)) => sttfa.forall nat.nat (m:(sttfa.etap (sttfa.p nat.nat)) => sttfa.impl (lt.lt O.O n) (sttfa.impl (divides.divides n m) (div_mod_spec.div_mod_spec m n (div.div m n) O.O)))))
  :=
  n:(sttfa.etap (sttfa.p nat.nat)) => m:(sttfa.etap (sttfa.p nat.nat)) => posn:(sttfa.eps (lt.lt O.O n)) => _clearme:(sttfa.eps (divides.divides n m)) => match_divides_prop.match_divides_prop n m (div_mod_spec.div_mod_spec m n (div.div m n) O.O) (q:(sttfa.etap (sttfa.p nat.nat)) => eqm:(sttfa.eps (eq.eq nat.nat m (times.times n q))) => div_mod_spec_intro.div_mod_spec_intro m n (div.div m n) O.O posn (eq_ind_r.eq_ind_r nat.nat (times.times n q) (x:(sttfa.etap (sttfa.p nat.nat)) => eq.eq nat.nat x (plus.plus (times.times (div.div x n) n) O.O)) (eq_ind_r.eq_ind_r nat.nat (times.times q n) (x:(sttfa.etap (sttfa.p nat.nat)) => eq.eq nat.nat x (plus.plus (times.times (div.div x n) n) O.O)) (eq_ind_r.eq_ind_r nat.nat q (x:(sttfa.etap (sttfa.p nat.nat)) => eq.eq nat.nat (times.times q n) (plus.plus (times.times x n) O.O)) (rewrite_r.rewrite_r nat.nat (times.times n q) (__:(sttfa.etap (sttfa.p nat.nat)) => eq.eq nat.nat __ (plus.plus (times.times q n) O.O)) (rewrite_l.rewrite_l nat.nat m (__:(sttfa.etap (sttfa.p nat.nat)) => eq.eq nat.nat __ (plus.plus (times.times q n) O.O)) (rewrite_r.rewrite_r nat.nat (times.times n q) (__:(sttfa.etap (sttfa.p nat.nat)) => eq.eq nat.nat m (plus.plus __ O.O)) (rewrite_l.rewrite_l nat.nat m (__:(sttfa.etap (sttfa.p nat.nat)) => eq.eq nat.nat m (plus.plus __ O.O)) (rewrite_l.rewrite_l nat.nat m (__:(sttfa.etap (sttfa.p nat.nat)) => eq.eq nat.nat m __) (refl.refl nat.nat m) (plus.plus m O.O) (plus_n_O.plus_n_O m)) (times.times n q) eqm) (times.times q n) (commutative_times.commutative_times q n)) (times.times n q) eqm) (times.times q n) (commutative_times.commutative_times q n)) (div.div (times.times q n) n) (div_times.div_times q n posn)) (times.times n q) (commutative_times.commutative_times n q)) m eqm)) _clearme.

