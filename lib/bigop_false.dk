def bigop_false :
  sttfa.eps (sttfa.forallP (B:sttfa.type => sttfa.forall nat.nat (n:(sttfa.etap (sttfa.p nat.nat)) => sttfa.forall B (nil:(sttfa.etap (sttfa.p B)) => sttfa.forall (sttfa.arrow B (sttfa.arrow B B)) (op:(sttfa.etap (sttfa.p (sttfa.arrow B (sttfa.arrow B B)))) => sttfa.forall (sttfa.arrow nat.nat B) (f:(sttfa.etap (sttfa.p (sttfa.arrow nat.nat B))) => eq.eq B (bigop.bigop B n (i:(sttfa.etap (sttfa.p nat.nat)) => false.false) nil op (i:(sttfa.etap (sttfa.p nat.nat)) => f i)) nil))))))
  :=
  B:sttfa.type => n:(sttfa.etap (sttfa.p nat.nat)) => nil:(sttfa.etap (sttfa.p B)) => op:(sttfa.etap (sttfa.p (sttfa.arrow B (sttfa.arrow B B)))) => f:(sttfa.etap (sttfa.p (sttfa.arrow nat.nat B))) => nat_ind.nat_ind (_x_365:(sttfa.etap (sttfa.p nat.nat)) => eq.eq B (bigop.bigop B _x_365 (i:(sttfa.etap (sttfa.p nat.nat)) => false.false) nil op (i:(sttfa.etap (sttfa.p nat.nat)) => f i)) nil) (eq_bigop_body_O.eq_bigop_body_O B (y:(sttfa.etap (sttfa.p (sttfa.arrow (sttfa.arrow nat.nat bool.bool) (sttfa.arrow B (sttfa.arrow (sttfa.arrow B (sttfa.arrow B B)) (sttfa.arrow (sttfa.arrow nat.nat B) B)))))) => eq.eq B (bigop.bigop B O.O (i:(sttfa.etap (sttfa.p nat.nat)) => false.false) nil op (i:(sttfa.etap (sttfa.p nat.nat)) => f i)) (y (i:(sttfa.etap (sttfa.p nat.nat)) => false.false) nil op (i:(sttfa.etap (sttfa.p nat.nat)) => f i))) (eq_bigop_O.eq_bigop_O B (y:(sttfa.etap (sttfa.p (sttfa.arrow (sttfa.arrow nat.nat bool.bool) (sttfa.arrow B (sttfa.arrow (sttfa.arrow B (sttfa.arrow B B)) (sttfa.arrow (sttfa.arrow nat.nat B) B)))))) => eq.eq B (bigop.bigop B O.O (i:(sttfa.etap (sttfa.p nat.nat)) => false.false) nil op (i:(sttfa.etap (sttfa.p nat.nat)) => f i)) (y (i:(sttfa.etap (sttfa.p nat.nat)) => false.false) nil op (i:(sttfa.etap (sttfa.p nat.nat)) => f i))) (refl.refl B (bigop.bigop B O.O (i:(sttfa.etap (sttfa.p nat.nat)) => false.false) nil op (i:(sttfa.etap (sttfa.p nat.nat)) => f i))))) (n1:(sttfa.etap (sttfa.p nat.nat)) => Hind:(sttfa.eps (eq.eq B (bigop.bigop B n1 (i:(sttfa.etap (sttfa.p nat.nat)) => false.false) nil op (i:(sttfa.etap (sttfa.p nat.nat)) => f i)) nil)) => eq_ind_r.eq_ind_r B (bigop.bigop B n1 (i:(sttfa.etap (sttfa.p nat.nat)) => false.false) nil op (i:(sttfa.etap (sttfa.p nat.nat)) => f i)) (x:(sttfa.etap (sttfa.p B)) => eq.eq B x nil) (rewrite_r.rewrite_r B nil (__:(sttfa.etap (sttfa.p B)) => eq.eq B __ nil) (refl.refl B nil) (bigop.bigop B n1 (i:(sttfa.etap (sttfa.p nat.nat)) => false.false) nil op (i:(sttfa.etap (sttfa.p nat.nat)) => f i)) Hind) (bigop.bigop B (S.S n1) (i:(sttfa.etap (sttfa.p nat.nat)) => false.false) nil op (i:(sttfa.etap (sttfa.p nat.nat)) => f i)) (bigop_Sfalse.bigop_Sfalse B n1 (__:(sttfa.etap (sttfa.p nat.nat)) => false.false) nil op f (refl.refl bool.bool false.false))) n.

