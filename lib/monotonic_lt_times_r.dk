def monotonic_lt_times_r :
  sttfa.eps (sttfa.forall nat.nat (c:(sttfa.etap (sttfa.p nat.nat)) => sttfa.impl (lt.lt O.O c) (monotonic.monotonic nat.nat lt.lt (t:(sttfa.etap (sttfa.p nat.nat)) => times.times c t))))
  :=
  c:(sttfa.etap (sttfa.p nat.nat)) => posc:(sttfa.eps (lt.lt O.O c)) => n:(sttfa.etap (sttfa.p nat.nat)) => m:(sttfa.etap (sttfa.p nat.nat)) => ltnm:(sttfa.eps (lt.lt n m)) => le_ind.le_ind (S.S n) (x_417:(sttfa.etap (sttfa.p nat.nat)) => lt.lt (times.times c n) (times.times c x_417)) (eq_coerc.eq_coerc (le.le (S.S (plus.plus O.O (times.times c n))) (plus.plus c (times.times c n))) (le.le (S.S (times.times c n)) (times.times c (S.S n))) (monotonic_lt_plus_l.monotonic_lt_plus_l (times.times c n) O.O c posc) (rewrite_r.rewrite_r nat.nat (plus.plus O.O (S.S (times.times c n))) (__:(sttfa.etap (sttfa.p nat.nat)) => eq.eq sttfa.bool (le.le __ (plus.plus c (times.times c n))) (le.le (S.S (times.times c n)) (times.times c (S.S n)))) (rewrite_l.rewrite_l nat.nat (plus.plus c (times.times c n)) (__:(sttfa.etap (sttfa.p nat.nat)) => eq.eq sttfa.bool (le.le (plus.plus O.O (S.S (times.times c n))) (plus.plus c (times.times c n))) (le.le (S.S (times.times c n)) __)) (rewrite_l.rewrite_l nat.nat (S.S (times.times c n)) (__:(sttfa.etap (sttfa.p nat.nat)) => eq.eq sttfa.bool (le.le __ (plus.plus c (times.times c n))) (le.le (S.S (times.times c n)) (plus.plus c (times.times c n)))) (refl.refl sttfa.bool (le.le (S.S (times.times c n)) (plus.plus c (times.times c n)))) (plus.plus O.O (S.S (times.times c n))) (plus_O_n.plus_O_n (S.S (times.times c n)))) (times.times c (S.S n)) (times_n_Sm.times_n_Sm c n)) (S.S (plus.plus O.O (times.times c n))) (plus_n_Sm.plus_n_Sm O.O (times.times c n)))) (a:(sttfa.etap (sttfa.p nat.nat)) => __:(sttfa.eps (le.le (S.S n) a)) => lt1:(sttfa.eps (le.le (S.S (times.times c n)) (times.times c a))) => transitive_le.transitive_le (S.S (times.times c n)) (times.times c a) (times.times c (S.S a)) lt1 (eq_coerc.eq_coerc (le.le (times.times c a) (plus.plus (times.times c a) c)) (le.le (times.times c a) (times.times c (S.S a))) (le_plus_n_r.le_plus_n_r c (times.times c a)) (rewrite_l.rewrite_l nat.nat (plus.plus c (times.times c a)) (__1:(sttfa.etap (sttfa.p nat.nat)) => eq.eq sttfa.bool (le.le (times.times c a) (plus.plus (times.times c a) c)) (le.le (times.times c a) __1)) (rewrite_r.rewrite_r nat.nat (plus.plus c (times.times c a)) (__1:(sttfa.etap (sttfa.p nat.nat)) => eq.eq sttfa.bool (le.le (times.times c a) __1) (le.le (times.times c a) (plus.plus c (times.times c a)))) (refl.refl sttfa.bool (le.le (times.times c a) (plus.plus c (times.times c a)))) (plus.plus (times.times c a) c) (commutative_plus.commutative_plus (times.times c a) c)) (times.times c (S.S a)) (times_n_Sm.times_n_Sm c a)))) m ltnm.

