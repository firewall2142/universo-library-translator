def nat_case :
  sttfa.eps (sttfa.forall nat.nat (n:(sttfa.etap (sttfa.p nat.nat)) => sttfa.forall (sttfa.arrow nat.nat sttfa.bool) (P:(sttfa.etap (sttfa.p (sttfa.arrow nat.nat sttfa.bool))) => sttfa.impl (sttfa.impl (eq.eq nat.nat n O.O) (P O.O)) (sttfa.impl (sttfa.forall nat.nat (m:(sttfa.etap (sttfa.p nat.nat)) => sttfa.impl (eq.eq nat.nat n (S.S m)) (P (S.S m)))) (P n)))))
  :=
  n:(sttfa.etap (sttfa.p nat.nat)) => P:(sttfa.etap (sttfa.p (sttfa.arrow nat.nat sttfa.bool))) => nat_ind.nat_ind (_x_365:(sttfa.etap (sttfa.p nat.nat)) => sttfa.impl (sttfa.impl (eq.eq nat.nat _x_365 O.O) (P O.O)) (sttfa.impl (sttfa.forall nat.nat (m:(sttfa.etap (sttfa.p nat.nat)) => sttfa.impl (eq.eq nat.nat _x_365 (S.S m)) (P (S.S m)))) (P _x_365))) (auto:(sttfa.eps (sttfa.impl (eq.eq nat.nat O.O O.O) (P O.O))) => auto':(sttfa.eps (sttfa.forall nat.nat (m:(sttfa.etap (sttfa.p nat.nat)) => sttfa.impl (eq.eq nat.nat O.O (S.S m)) (P (S.S m))))) => auto (refl.refl nat.nat O.O)) (x_366:(sttfa.etap (sttfa.p nat.nat)) => _x_368:(sttfa.eps (sttfa.impl (sttfa.impl (eq.eq nat.nat x_366 O.O) (P O.O)) (sttfa.impl (sttfa.forall nat.nat (m:(sttfa.etap (sttfa.p nat.nat)) => sttfa.impl (eq.eq nat.nat x_366 (S.S m)) (P (S.S m)))) (P x_366)))) => auto:(sttfa.eps (sttfa.impl (eq.eq nat.nat (S.S x_366) O.O) (P O.O))) => auto':(sttfa.eps (sttfa.forall nat.nat (m:(sttfa.etap (sttfa.p nat.nat)) => sttfa.impl (eq.eq nat.nat (S.S x_366) (S.S m)) (P (S.S m))))) => auto' x_366 (refl.refl nat.nat (S.S x_366))) n.

