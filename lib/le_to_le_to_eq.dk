def le_to_le_to_eq :
  sttfa.eps (sttfa.forall nat.nat (n:(sttfa.etap (sttfa.p nat.nat)) => sttfa.forall nat.nat (m:(sttfa.etap (sttfa.p nat.nat)) => sttfa.impl (le.le n m) (sttfa.impl (le.le m n) (eq.eq nat.nat n m)))))
  :=
  nat_elim2.nat_elim2 (__:(sttfa.etap (sttfa.p nat.nat)) => _0:(sttfa.etap (sttfa.p nat.nat)) => sttfa.impl (le.le __ _0) (sttfa.impl (le.le _0 __) (eq.eq nat.nat __ _0))) (n:(sttfa.etap (sttfa.p nat.nat)) => auto:(sttfa.eps (le.le O.O n)) => auto':(sttfa.eps (le.le n O.O)) => sym_eq.sym_eq nat.nat n O.O (sym_eq.sym_eq nat.nat O.O n (eq_coerc.eq_coerc (eq.eq nat.nat O.O n) (eq.eq nat.nat O.O n) (le_n_O_to_eq.le_n_O_to_eq n auto') (refl.refl sttfa.bool (eq.eq nat.nat O.O n))))) (n:(sttfa.etap (sttfa.p nat.nat)) => auto:(sttfa.eps (le.le (S.S n) O.O)) => auto':(sttfa.eps (le.le O.O (S.S n))) => sym_eq.sym_eq nat.nat O.O (S.S n) (le_n_O_to_eq.le_n_O_to_eq (S.S n) auto)) (n:(sttfa.etap (sttfa.p nat.nat)) => m:(sttfa.etap (sttfa.p nat.nat)) => auto:(sttfa.eps (sttfa.impl (le.le n m) (sttfa.impl (le.le m n) (eq.eq nat.nat n m)))) => auto':(sttfa.eps (le.le (S.S n) (S.S m))) => auto'':(sttfa.eps (le.le (S.S m) (S.S n))) => eq_f.eq_f nat.nat nat.nat S.S n m (auto (eq_coerc.eq_coerc (le.le (pred.pred (S.S n)) (pred.pred (S.S m))) (le.le n m) (monotonic_pred.monotonic_pred (S.S n) (S.S m) auto') (rewrite_l.rewrite_l nat.nat n (__:(sttfa.etap (sttfa.p nat.nat)) => eq.eq sttfa.bool (le.le __ (pred.pred (S.S m))) (le.le n m)) (rewrite_l.rewrite_l nat.nat m (__:(sttfa.etap (sttfa.p nat.nat)) => eq.eq sttfa.bool (le.le n __) (le.le n m)) (refl.refl sttfa.bool (le.le n m)) (pred.pred (S.S m)) (pred_Sn.pred_Sn m)) (pred.pred (S.S n)) (pred_Sn.pred_Sn n))) (eq_coerc.eq_coerc (le.le (pred.pred (S.S m)) (pred.pred (S.S n))) (le.le m n) (monotonic_pred.monotonic_pred (S.S m) (S.S n) auto'') (rewrite_l.rewrite_l nat.nat m (__:(sttfa.etap (sttfa.p nat.nat)) => eq.eq sttfa.bool (le.le __ (pred.pred (S.S n))) (le.le m n)) (rewrite_l.rewrite_l nat.nat n (__:(sttfa.etap (sttfa.p nat.nat)) => eq.eq sttfa.bool (le.le m __) (le.le m n)) (refl.refl sttfa.bool (le.le m n)) (pred.pred (S.S n)) (pred_Sn.pred_Sn n)) (pred.pred (S.S m)) (pred_Sn.pred_Sn m))))).

