def div_mod :
  sttfa.eps (sttfa.forall nat.nat (n:(sttfa.etap (sttfa.p nat.nat)) => sttfa.forall nat.nat (m:(sttfa.etap (sttfa.p nat.nat)) => eq.eq nat.nat n (plus.plus (times.times (div.div n m) m) (mod.mod n m)))))
  :=
  n:(sttfa.etap (sttfa.p nat.nat)) => m:(sttfa.etap (sttfa.p nat.nat)) => match_nat_prop.match_nat_prop (__:(sttfa.etap (sttfa.p nat.nat)) => eq.eq nat.nat n (plus.plus (times.times (div.div n __) __) (mod.mod n __))) (sym_eq_times.sym_eq_times (div.div n O.O) (y:(sttfa.etap (sttfa.p (sttfa.arrow nat.nat nat.nat))) => eq.eq nat.nat n (plus.plus (y O.O) (mod.mod n O.O))) (sym_eq_match_nat_type_O.sym_eq_match_nat_type_O nat.nat (S.S n) (p:(sttfa.etap (sttfa.p nat.nat)) => div_aux.div_aux n n p) (y:(sttfa.etap (sttfa.p nat.nat)) => eq.eq nat.nat n (plus.plus (filter_nat_type.filter_nat_type (sttfa.arrow nat.nat nat.nat) times_body.times_body y O.O) (match_nat_type.match_nat_type nat.nat n (p:(sttfa.etap (sttfa.p nat.nat)) => mod_aux.mod_aux n n p) O.O))) (sym_eq_filter_nat_type_S.sym_eq_filter_nat_type_S (sttfa.arrow nat.nat nat.nat) times_body.times_body n (y:(sttfa.etap (sttfa.p (sttfa.arrow nat.nat nat.nat))) => eq.eq nat.nat n (plus.plus (y O.O) (mod.mod n O.O))) (sym_eq_times_body_S.sym_eq_times_body_S n (y:(sttfa.etap (sttfa.p (sttfa.arrow nat.nat nat.nat))) => eq.eq nat.nat n (plus.plus (y O.O) (mod.mod n O.O))) (sym_eq_match_nat_type_O.sym_eq_match_nat_type_O nat.nat n (p:(sttfa.etap (sttfa.p nat.nat)) => mod_aux.mod_aux n n p) (y:(sttfa.etap (sttfa.p nat.nat)) => eq.eq nat.nat n (plus.plus (plus.plus O.O (times.times n O.O)) y)) (sym_eq_plus.sym_eq_plus O.O (y:(sttfa.etap (sttfa.p (sttfa.arrow nat.nat nat.nat))) => eq.eq nat.nat n (plus.plus (y (times.times n O.O)) n)) (sym_eq_filter_nat_type_O.sym_eq_filter_nat_type_O (sttfa.arrow nat.nat nat.nat) plus_body.plus_body (y:(sttfa.etap (sttfa.p (sttfa.arrow nat.nat nat.nat))) => eq.eq nat.nat n (plus.plus (y (times.times n O.O)) n)) (sym_eq_plus_body_O.sym_eq_plus_body_O (y:(sttfa.etap (sttfa.p (sttfa.arrow nat.nat nat.nat))) => eq.eq nat.nat n (plus.plus (y (times.times n O.O)) n)) (rewrite_l.rewrite_l nat.nat O.O (__:(sttfa.etap (sttfa.p nat.nat)) => eq.eq nat.nat n (plus.plus __ n)) (rewrite_r.rewrite_r nat.nat (plus.plus n O.O) (__:(sttfa.etap (sttfa.p nat.nat)) => eq.eq nat.nat n __) (rewrite_l.rewrite_l nat.nat n (__:(sttfa.etap (sttfa.p nat.nat)) => eq.eq nat.nat n __) (refl.refl nat.nat n) (plus.plus n O.O) (plus_n_O.plus_n_O n)) (plus.plus O.O n) (commutative_plus.commutative_plus O.O n)) (times.times n O.O) (times_n_O.times_n_O n)))))))))) (auto:(sttfa.etap (sttfa.p nat.nat)) => sym_eq_match_nat_type_S.sym_eq_match_nat_type_S nat.nat (S.S n) (p:(sttfa.etap (sttfa.p nat.nat)) => div_aux.div_aux n n p) auto (y:(sttfa.etap (sttfa.p nat.nat)) => eq.eq nat.nat n (plus.plus (times.times y (S.S auto)) (match_nat_type.match_nat_type nat.nat n (p:(sttfa.etap (sttfa.p nat.nat)) => mod_aux.mod_aux n n p) (S.S auto)))) (sym_eq_match_nat_type_S.sym_eq_match_nat_type_S nat.nat n (p:(sttfa.etap (sttfa.p nat.nat)) => mod_aux.mod_aux n n p) auto (y:(sttfa.etap (sttfa.p nat.nat)) => eq.eq nat.nat n (plus.plus (times.times (div_aux.div_aux n n auto) (S.S auto)) y)) (rewrite_r.rewrite_r nat.nat (plus.plus (times.times (div_aux.div_aux n n auto) (S.S auto)) (mod_aux.mod_aux n n auto)) (__:(sttfa.etap (sttfa.p nat.nat)) => eq.eq nat.nat __ (plus.plus (times.times (div_aux.div_aux n n auto) (S.S auto)) (mod_aux.mod_aux n n auto))) (refl.refl nat.nat (plus.plus (times.times (div_aux.div_aux n n auto) (S.S auto)) (mod_aux.mod_aux n n auto))) n (div_aux_mod_aux.div_aux_mod_aux n n auto)))) m.

