def gcd_O_l :
  sttfa.eps (sttfa.forall nat.nat (m:(sttfa.etap (sttfa.p nat.nat)) => eq.eq nat.nat (gcd.gcd O.O m) m))
  :=
  m:(sttfa.etap (sttfa.p nat.nat)) => eq_match_bool_type_true.eq_match_bool_type_true nat.nat m (gcd_aux.gcd_aux m O.O m) (y:(sttfa.etap (sttfa.p nat.nat)) => eq.eq nat.nat (gcd.gcd O.O m) y) (eq_leb_body_O.eq_leb_body_O (y:(sttfa.etap (sttfa.p (sttfa.arrow nat.nat bool.bool))) => eq.eq nat.nat (gcd.gcd O.O m) (match_bool_type.match_bool_type nat.nat m (gcd_aux.gcd_aux m O.O m) (y m))) (eq_filter_nat_type_O.eq_filter_nat_type_O (sttfa.arrow nat.nat bool.bool) leb_body.leb_body (y:(sttfa.etap (sttfa.p (sttfa.arrow nat.nat bool.bool))) => eq.eq nat.nat (gcd.gcd O.O m) (match_bool_type.match_bool_type nat.nat m (gcd_aux.gcd_aux m O.O m) (y m))) (eq_leb.eq_leb O.O (y:(sttfa.etap (sttfa.p (sttfa.arrow nat.nat bool.bool))) => eq.eq nat.nat (gcd.gcd O.O m) (match_bool_type.match_bool_type nat.nat m (gcd_aux.gcd_aux m O.O m) (y m))) (eq_gcd_aux_body_O.eq_gcd_aux_body_O (y:(sttfa.etap (sttfa.p (sttfa.arrow nat.nat (sttfa.arrow nat.nat nat.nat)))) => eq.eq nat.nat (gcd.gcd O.O m) (match_bool_type.match_bool_type nat.nat (y m O.O) (gcd_aux.gcd_aux m O.O m) (leb.leb O.O m))) (eq_filter_nat_type_O.eq_filter_nat_type_O (sttfa.arrow nat.nat (sttfa.arrow nat.nat nat.nat)) gcd_aux_body.gcd_aux_body (y:(sttfa.etap (sttfa.p (sttfa.arrow nat.nat (sttfa.arrow nat.nat nat.nat)))) => eq.eq nat.nat (gcd.gcd O.O m) (match_bool_type.match_bool_type nat.nat (y m O.O) (gcd_aux.gcd_aux m O.O m) (leb.leb O.O m))) (eq_gcd_aux.eq_gcd_aux O.O (y:(sttfa.etap (sttfa.p (sttfa.arrow nat.nat (sttfa.arrow nat.nat nat.nat)))) => eq.eq nat.nat (gcd.gcd O.O m) (match_bool_type.match_bool_type nat.nat (y m O.O) (gcd_aux.gcd_aux m O.O m) (leb.leb O.O m))) (refl.refl nat.nat (gcd.gcd O.O m)))))))).

