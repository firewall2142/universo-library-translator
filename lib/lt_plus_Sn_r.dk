def lt_plus_Sn_r :
  sttfa.eps (sttfa.forall nat.nat (a:(sttfa.etap (sttfa.p nat.nat)) => sttfa.forall nat.nat (x:(sttfa.etap (sttfa.p nat.nat)) => sttfa.forall nat.nat (n:(sttfa.etap (sttfa.p nat.nat)) => lt.lt a (plus.plus (plus.plus a x) (S.S n))))))
  :=
  a:(sttfa.etap (sttfa.p nat.nat)) => x:(sttfa.etap (sttfa.p nat.nat)) => n:(sttfa.etap (sttfa.p nat.nat)) => eq_coerc.eq_coerc (le.le (S.S a) (S.S (plus.plus (plus.plus a x) n))) (le.le (S.S a) (plus.plus (plus.plus a x) (S.S n))) (le_S_S.le_S_S a (plus.plus (plus.plus a x) n) (eq_coerc.eq_coerc (le.le a (plus.plus a (plus.plus x n))) (le.le a (plus.plus (plus.plus a x) n)) (le_plus_n_r.le_plus_n_r (plus.plus x n) a) (rewrite_r.rewrite_r nat.nat (plus.plus n (plus.plus a x)) (__:(sttfa.etap (sttfa.p nat.nat)) => eq.eq sttfa.bool (le.le a (plus.plus a (plus.plus x n))) (le.le a __)) (rewrite_r.rewrite_r nat.nat (plus.plus a (plus.plus n x)) (__:(sttfa.etap (sttfa.p nat.nat)) => eq.eq sttfa.bool (le.le a (plus.plus a (plus.plus x n))) (le.le a __)) (rewrite_r.rewrite_r nat.nat (plus.plus x n) (__:(sttfa.etap (sttfa.p nat.nat)) => eq.eq sttfa.bool (le.le a (plus.plus a (plus.plus x n))) (le.le a (plus.plus a __))) (refl.refl sttfa.bool (le.le a (plus.plus a (plus.plus x n)))) (plus.plus n x) (commutative_plus.commutative_plus n x)) (plus.plus n (plus.plus a x)) (rewrite_l.rewrite_l nat.nat (plus.plus (plus.plus a n) x) (__:(sttfa.etap (sttfa.p nat.nat)) => eq.eq nat.nat (plus.plus n (plus.plus a x)) __) (assoc_plus1.assoc_plus1 x a n) (plus.plus a (plus.plus n x)) (associative_plus.associative_plus a n x))) (plus.plus (plus.plus a x) n) (commutative_plus.commutative_plus (plus.plus a x) n)))) (rewrite_r.rewrite_r nat.nat (plus.plus a (plus.plus x (S.S n))) (__:(sttfa.etap (sttfa.p nat.nat)) => eq.eq sttfa.bool (le.le (S.S a) (S.S (plus.plus (plus.plus a x) n))) (le.le (S.S a) __)) (rewrite_r.rewrite_r nat.nat (plus.plus (plus.plus a x) (S.S n)) (__:(sttfa.etap (sttfa.p nat.nat)) => eq.eq sttfa.bool (le.le (S.S a) __) (le.le (S.S a) (plus.plus a (plus.plus x (S.S n))))) (rewrite_r.rewrite_r nat.nat (plus.plus a (plus.plus x (S.S n))) (__:(sttfa.etap (sttfa.p nat.nat)) => eq.eq sttfa.bool (le.le (S.S a) __) (le.le (S.S a) (plus.plus a (plus.plus x (S.S n))))) (refl.refl sttfa.bool (le.le (S.S a) (plus.plus a (plus.plus x (S.S n))))) (plus.plus (plus.plus a x) (S.S n)) (associative_plus.associative_plus a x (S.S n))) (S.S (plus.plus (plus.plus a x) n)) (plus_n_Sm.plus_n_Sm (plus.plus a x) n)) (plus.plus (plus.plus a x) (S.S n)) (associative_plus.associative_plus a x (S.S n))).

