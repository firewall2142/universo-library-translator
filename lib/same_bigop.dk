def same_bigop :
  sttfa.eps (sttfa.forallP (B:sttfa.type => sttfa.forall nat.nat (k:(sttfa.etap (sttfa.p nat.nat)) => sttfa.forall (sttfa.arrow nat.nat bool.bool) (p1:(sttfa.etap (sttfa.p (sttfa.arrow nat.nat bool.bool))) => sttfa.forall (sttfa.arrow nat.nat bool.bool) (p2:(sttfa.etap (sttfa.p (sttfa.arrow nat.nat bool.bool))) => sttfa.forall B (nil:(sttfa.etap (sttfa.p B)) => sttfa.forall (sttfa.arrow B (sttfa.arrow B B)) (op:(sttfa.etap (sttfa.p (sttfa.arrow B (sttfa.arrow B B)))) => sttfa.forall (sttfa.arrow nat.nat B) (f:(sttfa.etap (sttfa.p (sttfa.arrow nat.nat B))) => sttfa.forall (sttfa.arrow nat.nat B) (g:(sttfa.etap (sttfa.p (sttfa.arrow nat.nat B))) => sttfa.impl (sameF_upto.sameF_upto bool.bool k p1 p2) (sttfa.impl (sameF_p.sameF_p B k p1 f g) (eq.eq B (bigop.bigop B k (i:(sttfa.etap (sttfa.p nat.nat)) => p1 i) nil op (i:(sttfa.etap (sttfa.p nat.nat)) => f i)) (bigop.bigop B k (i:(sttfa.etap (sttfa.p nat.nat)) => p2 i) nil op (i:(sttfa.etap (sttfa.p nat.nat)) => g i)))))))))))))
  :=
  B:sttfa.type => k:(sttfa.etap (sttfa.p nat.nat)) => p1:(sttfa.etap (sttfa.p (sttfa.arrow nat.nat bool.bool))) => p2:(sttfa.etap (sttfa.p (sttfa.arrow nat.nat bool.bool))) => nil:(sttfa.etap (sttfa.p B)) => op:(sttfa.etap (sttfa.p (sttfa.arrow B (sttfa.arrow B B)))) => f:(sttfa.etap (sttfa.p (sttfa.arrow nat.nat B))) => g:(sttfa.etap (sttfa.p (sttfa.arrow nat.nat B))) => nat_ind.nat_ind (_x_365:(sttfa.etap (sttfa.p nat.nat)) => sttfa.impl (sameF_upto.sameF_upto bool.bool _x_365 p1 p2) (sttfa.impl (sameF_p.sameF_p B _x_365 p1 f g) (eq.eq B (bigop.bigop B _x_365 (i:(sttfa.etap (sttfa.p nat.nat)) => p1 i) nil op (i:(sttfa.etap (sttfa.p nat.nat)) => f i)) (bigop.bigop B _x_365 (i:(sttfa.etap (sttfa.p nat.nat)) => p2 i) nil op (i:(sttfa.etap (sttfa.p nat.nat)) => g i))))) (sym_eq_bigop_O.sym_eq_bigop_O B (y:(sttfa.etap (sttfa.p (sttfa.arrow (sttfa.arrow nat.nat bool.bool) (sttfa.arrow B (sttfa.arrow (sttfa.arrow B (sttfa.arrow B B)) (sttfa.arrow (sttfa.arrow nat.nat B) B)))))) => sttfa.impl (sameF_upto.sameF_upto bool.bool O.O p1 p2) (sttfa.impl (sameF_p.sameF_p B O.O p1 f g) (eq.eq B (bigop.bigop B O.O (i:(sttfa.etap (sttfa.p nat.nat)) => p1 i) nil op (i:(sttfa.etap (sttfa.p nat.nat)) => f i)) (y (i:(sttfa.etap (sttfa.p nat.nat)) => p2 i) nil op (i:(sttfa.etap (sttfa.p nat.nat)) => g i))))) (sym_eq_bigop_body_O.sym_eq_bigop_body_O B (y:(sttfa.etap (sttfa.p (sttfa.arrow (sttfa.arrow nat.nat bool.bool) (sttfa.arrow B (sttfa.arrow (sttfa.arrow B (sttfa.arrow B B)) (sttfa.arrow (sttfa.arrow nat.nat B) B)))))) => sttfa.impl (sameF_upto.sameF_upto bool.bool O.O p1 p2) (sttfa.impl (sameF_p.sameF_p B O.O p1 f g) (eq.eq B (bigop.bigop B O.O (i:(sttfa.etap (sttfa.p nat.nat)) => p1 i) nil op (i:(sttfa.etap (sttfa.p nat.nat)) => f i)) (y (i:(sttfa.etap (sttfa.p nat.nat)) => p2 i) nil op (i:(sttfa.etap (sttfa.p nat.nat)) => g i))))) (eq_bigop_body_O.eq_bigop_body_O B (y:(sttfa.etap (sttfa.p (sttfa.arrow (sttfa.arrow nat.nat bool.bool) (sttfa.arrow B (sttfa.arrow (sttfa.arrow B (sttfa.arrow B B)) (sttfa.arrow (sttfa.arrow nat.nat B) B)))))) => sttfa.impl (sameF_upto.sameF_upto bool.bool O.O p1 p2) (sttfa.impl (sameF_p.sameF_p B O.O p1 f g) (eq.eq B (bigop.bigop B O.O (i:(sttfa.etap (sttfa.p nat.nat)) => p1 i) nil op (i:(sttfa.etap (sttfa.p nat.nat)) => f i)) (y (i:(sttfa.etap (sttfa.p nat.nat)) => p1 i) nil op (i:(sttfa.etap (sttfa.p nat.nat)) => f i))))) (eq_bigop_O.eq_bigop_O B (y:(sttfa.etap (sttfa.p (sttfa.arrow (sttfa.arrow nat.nat bool.bool) (sttfa.arrow B (sttfa.arrow (sttfa.arrow B (sttfa.arrow B B)) (sttfa.arrow (sttfa.arrow nat.nat B) B)))))) => sttfa.impl (sameF_upto.sameF_upto bool.bool O.O p1 p2) (sttfa.impl (sameF_p.sameF_p B O.O p1 f g) (eq.eq B (bigop.bigop B O.O (i:(sttfa.etap (sttfa.p nat.nat)) => p1 i) nil op (i:(sttfa.etap (sttfa.p nat.nat)) => f i)) (y (i:(sttfa.etap (sttfa.p nat.nat)) => p1 i) nil op (i:(sttfa.etap (sttfa.p nat.nat)) => f i))))) (auto:(sttfa.eps (sameF_upto.sameF_upto bool.bool O.O p1 p2)) => auto':(sttfa.eps (sameF_p.sameF_p B O.O p1 f g)) => refl.refl B (bigop.bigop B O.O (i:(sttfa.etap (sttfa.p nat.nat)) => p1 i) nil op (i:(sttfa.etap (sttfa.p nat.nat)) => f i))))))) (n:(sttfa.etap (sttfa.p nat.nat)) => sym_eq_bigop_S.sym_eq_bigop_S B n (y:(sttfa.etap (sttfa.p (sttfa.arrow (sttfa.arrow nat.nat bool.bool) (sttfa.arrow B (sttfa.arrow (sttfa.arrow B (sttfa.arrow B B)) (sttfa.arrow (sttfa.arrow nat.nat B) B)))))) => sttfa.impl (sttfa.impl (sameF_upto.sameF_upto bool.bool n p1 p2) (sttfa.impl (sameF_p.sameF_p B n p1 f g) (eq.eq B (bigop.bigop B n (i:(sttfa.etap (sttfa.p nat.nat)) => p1 i) nil op (i:(sttfa.etap (sttfa.p nat.nat)) => f i)) (bigop.bigop B n (i:(sttfa.etap (sttfa.p nat.nat)) => p2 i) nil op (i:(sttfa.etap (sttfa.p nat.nat)) => g i))))) (sttfa.impl (sameF_upto.sameF_upto bool.bool (S.S n) p1 p2) (sttfa.impl (sameF_p.sameF_p B (S.S n) p1 f g) (eq.eq B (bigop.bigop B (S.S n) (i:(sttfa.etap (sttfa.p nat.nat)) => p1 i) nil op (i:(sttfa.etap (sttfa.p nat.nat)) => f i)) (y (i:(sttfa.etap (sttfa.p nat.nat)) => p2 i) nil op (i:(sttfa.etap (sttfa.p nat.nat)) => g i)))))) (sym_eq_bigop_S.sym_eq_bigop_S B n (y:(sttfa.etap (sttfa.p (sttfa.arrow (sttfa.arrow nat.nat bool.bool) (sttfa.arrow B (sttfa.arrow (sttfa.arrow B (sttfa.arrow B B)) (sttfa.arrow (sttfa.arrow nat.nat B) B)))))) => sttfa.impl (sttfa.impl (sameF_upto.sameF_upto bool.bool n p1 p2) (sttfa.impl (sameF_p.sameF_p B n p1 f g) (eq.eq B (bigop.bigop B n (i:(sttfa.etap (sttfa.p nat.nat)) => p1 i) nil op (i:(sttfa.etap (sttfa.p nat.nat)) => f i)) (bigop.bigop B n (i:(sttfa.etap (sttfa.p nat.nat)) => p2 i) nil op (i:(sttfa.etap (sttfa.p nat.nat)) => g i))))) (sttfa.impl (sameF_upto.sameF_upto bool.bool (S.S n) p1 p2) (sttfa.impl (sameF_p.sameF_p B (S.S n) p1 f g) (eq.eq B (y (i:(sttfa.etap (sttfa.p nat.nat)) => p1 i) nil op (i:(sttfa.etap (sttfa.p nat.nat)) => f i)) (bigop_body.bigop_body B (S.S n) (i:(sttfa.etap (sttfa.p nat.nat)) => p2 i) nil op (i:(sttfa.etap (sttfa.p nat.nat)) => g i)))))) (sym_eq_bigop_body_S.sym_eq_bigop_body_S B n (y:(sttfa.etap (sttfa.p (sttfa.arrow (sttfa.arrow nat.nat bool.bool) (sttfa.arrow B (sttfa.arrow (sttfa.arrow B (sttfa.arrow B B)) (sttfa.arrow (sttfa.arrow nat.nat B) B)))))) => sttfa.impl (sttfa.impl (sameF_upto.sameF_upto bool.bool n p1 p2) (sttfa.impl (sameF_p.sameF_p B n p1 f g) (eq.eq B (bigop.bigop B n (i:(sttfa.etap (sttfa.p nat.nat)) => p1 i) nil op (i:(sttfa.etap (sttfa.p nat.nat)) => f i)) (bigop.bigop B n (i:(sttfa.etap (sttfa.p nat.nat)) => p2 i) nil op (i:(sttfa.etap (sttfa.p nat.nat)) => g i))))) (sttfa.impl (sameF_upto.sameF_upto bool.bool (S.S n) p1 p2) (sttfa.impl (sameF_p.sameF_p B (S.S n) p1 f g) (eq.eq B (y (i:(sttfa.etap (sttfa.p nat.nat)) => p1 i) nil op (i:(sttfa.etap (sttfa.p nat.nat)) => f i)) (bigop_body.bigop_body B (S.S n) (i:(sttfa.etap (sttfa.p nat.nat)) => p2 i) nil op (i:(sttfa.etap (sttfa.p nat.nat)) => g i)))))) (sym_eq_bigop_body_S.sym_eq_bigop_body_S B n (y:(sttfa.etap (sttfa.p (sttfa.arrow (sttfa.arrow nat.nat bool.bool) (sttfa.arrow B (sttfa.arrow (sttfa.arrow B (sttfa.arrow B B)) (sttfa.arrow (sttfa.arrow nat.nat B) B)))))) => sttfa.impl (sttfa.impl (sameF_upto.sameF_upto bool.bool n p1 p2) (sttfa.impl (sameF_p.sameF_p B n p1 f g) (eq.eq B (bigop.bigop B n (i:(sttfa.etap (sttfa.p nat.nat)) => p1 i) nil op (i:(sttfa.etap (sttfa.p nat.nat)) => f i)) (bigop.bigop B n (i:(sttfa.etap (sttfa.p nat.nat)) => p2 i) nil op (i:(sttfa.etap (sttfa.p nat.nat)) => g i))))) (sttfa.impl (sameF_upto.sameF_upto bool.bool (S.S n) p1 p2) (sttfa.impl (sameF_p.sameF_p B (S.S n) p1 f g) (eq.eq B ((p:(sttfa.etap (sttfa.p (sttfa.arrow nat.nat bool.bool))) => nil0:(sttfa.etap (sttfa.p B)) => op0:(sttfa.etap (sttfa.p (sttfa.arrow B (sttfa.arrow B B)))) => f0:(sttfa.etap (sttfa.p (sttfa.arrow nat.nat B))) => match_bool_type.match_bool_type B (op0 (f0 n) (bigop.bigop B n p nil0 op0 f0)) (bigop.bigop B n p nil0 op0 f0) (p n)) (i:(sttfa.etap (sttfa.p nat.nat)) => p1 i) nil op (i:(sttfa.etap (sttfa.p nat.nat)) => f i)) (y (i:(sttfa.etap (sttfa.p nat.nat)) => p2 i) nil op (i:(sttfa.etap (sttfa.p nat.nat)) => g i)))))) (Hind:(sttfa.eps (sttfa.impl (sameF_upto.sameF_upto bool.bool n p1 p2) (sttfa.impl (sameF_p.sameF_p B n p1 f g) (eq.eq B (bigop.bigop B n (i:(sttfa.etap (sttfa.p nat.nat)) => p1 i) nil op (i:(sttfa.etap (sttfa.p nat.nat)) => f i)) (bigop.bigop B n (i:(sttfa.etap (sttfa.p nat.nat)) => p2 i) nil op (i:(sttfa.etap (sttfa.p nat.nat)) => g i)))))) => samep:(sttfa.eps (sameF_upto.sameF_upto bool.bool (S.S n) p1 p2)) => samef:(sttfa.eps (sameF_p.sameF_p B (S.S n) p1 f g)) => eq_ind_r.eq_ind_r B (bigop.bigop B n (i:(sttfa.etap (sttfa.p nat.nat)) => p2 i) nil op (i:(sttfa.etap (sttfa.p nat.nat)) => g i)) (x:(sttfa.etap (sttfa.p B)) => eq.eq B (match_bool_type.match_bool_type B (op (f n) x) x (p1 n)) (match_bool_type.match_bool_type B (op (g n) (bigop.bigop B n (i:(sttfa.etap (sttfa.p nat.nat)) => p2 i) nil op (i:(sttfa.etap (sttfa.p nat.nat)) => g i))) (bigop.bigop B n (i:(sttfa.etap (sttfa.p nat.nat)) => p2 i) nil op (i:(sttfa.etap (sttfa.p nat.nat)) => g i)) (p2 n))) (eq_ind.eq_ind bool.bool (p1 n) (x_1:(sttfa.etap (sttfa.p bool.bool)) => eq.eq B (match_bool_type.match_bool_type B (op (f n) (bigop.bigop B n (i:(sttfa.etap (sttfa.p nat.nat)) => p2 i) nil op (i:(sttfa.etap (sttfa.p nat.nat)) => g i))) (bigop.bigop B n (i:(sttfa.etap (sttfa.p nat.nat)) => p2 i) nil op (i:(sttfa.etap (sttfa.p nat.nat)) => g i)) (p1 n)) (match_bool_type.match_bool_type B (op (g n) (bigop.bigop B n (i:(sttfa.etap (sttfa.p nat.nat)) => p2 i) nil op (i:(sttfa.etap (sttfa.p nat.nat)) => g i))) (bigop.bigop B n (i:(sttfa.etap (sttfa.p nat.nat)) => p2 i) nil op (i:(sttfa.etap (sttfa.p nat.nat)) => g i)) x_1)) (match_Or_prop.match_Or_prop (eq.eq bool.bool (p1 n) true.true) (eq.eq bool.bool (p1 n) false.false) (eq.eq B (match_bool_type.match_bool_type B (op (f n) (bigop.bigop B n (i:(sttfa.etap (sttfa.p nat.nat)) => p2 i) nil op (i:(sttfa.etap (sttfa.p nat.nat)) => g i))) (bigop.bigop B n (i:(sttfa.etap (sttfa.p nat.nat)) => p2 i) nil op (i:(sttfa.etap (sttfa.p nat.nat)) => g i)) (p1 n)) (match_bool_type.match_bool_type B (op (g n) (bigop.bigop B n (i:(sttfa.etap (sttfa.p nat.nat)) => p2 i) nil op (i:(sttfa.etap (sttfa.p nat.nat)) => g i))) (bigop.bigop B n (i:(sttfa.etap (sttfa.p nat.nat)) => p2 i) nil op (i:(sttfa.etap (sttfa.p nat.nat)) => g i)) (p1 n))) (H1:(sttfa.eps (eq.eq bool.bool (p1 n) true.true)) => eq_ind_r.eq_ind_r bool.bool true.true (x:(sttfa.etap (sttfa.p bool.bool)) => eq.eq B (match_bool_type.match_bool_type B (op (f n) (bigop.bigop B n (i:(sttfa.etap (sttfa.p nat.nat)) => p2 i) nil op (i:(sttfa.etap (sttfa.p nat.nat)) => g i))) (bigop.bigop B n (i:(sttfa.etap (sttfa.p nat.nat)) => p2 i) nil op (i:(sttfa.etap (sttfa.p nat.nat)) => g i)) x) (match_bool_type.match_bool_type B (op (g n) (bigop.bigop B n (i:(sttfa.etap (sttfa.p nat.nat)) => p2 i) nil op (i:(sttfa.etap (sttfa.p nat.nat)) => g i))) (bigop.bigop B n (i:(sttfa.etap (sttfa.p nat.nat)) => p2 i) nil op (i:(sttfa.etap (sttfa.p nat.nat)) => g i)) x)) (sym_eq_match_bool_type_true.sym_eq_match_bool_type_true B (op (f n) (bigop.bigop B n (i:(sttfa.etap (sttfa.p nat.nat)) => p2 i) nil op (i:(sttfa.etap (sttfa.p nat.nat)) => g i))) (bigop.bigop B n (i:(sttfa.etap (sttfa.p nat.nat)) => p2 i) nil op (i:(sttfa.etap (sttfa.p nat.nat)) => g i)) (y:(sttfa.etap (sttfa.p B)) => eq.eq B y (match_bool_type.match_bool_type B (op (g n) (bigop.bigop B n (i:(sttfa.etap (sttfa.p nat.nat)) => p2 i) nil op (i:(sttfa.etap (sttfa.p nat.nat)) => g i))) (bigop.bigop B n (i:(sttfa.etap (sttfa.p nat.nat)) => p2 i) nil op (i:(sttfa.etap (sttfa.p nat.nat)) => g i)) true.true)) (sym_eq_match_bool_type_true.sym_eq_match_bool_type_true B (op (g n) (bigop.bigop B n (i:(sttfa.etap (sttfa.p nat.nat)) => p2 i) nil op (i:(sttfa.etap (sttfa.p nat.nat)) => g i))) (bigop.bigop B n (i:(sttfa.etap (sttfa.p nat.nat)) => p2 i) nil op (i:(sttfa.etap (sttfa.p nat.nat)) => g i)) (y:(sttfa.etap (sttfa.p B)) => eq.eq B (op (f n) (bigop.bigop B n (i:(sttfa.etap (sttfa.p nat.nat)) => p2 i) nil op (i:(sttfa.etap (sttfa.p nat.nat)) => g i))) y) (eq_ind.eq_ind B (f n) (x_1:(sttfa.etap (sttfa.p B)) => eq.eq B (op (f n) (bigop.bigop B n (i:(sttfa.etap (sttfa.p nat.nat)) => p2 i) nil op (i:(sttfa.etap (sttfa.p nat.nat)) => g i))) (op x_1 (bigop.bigop B n (i:(sttfa.etap (sttfa.p nat.nat)) => p2 i) nil op (i:(sttfa.etap (sttfa.p nat.nat)) => g i)))) (refl.refl B (op (f n) (bigop.bigop B n (i:(sttfa.etap (sttfa.p nat.nat)) => p2 i) nil op (i:(sttfa.etap (sttfa.p nat.nat)) => g i)))) (g n) (samef n (le_n.le_n (S.S n)) H1)))) (p1 n) H1) (H1:(sttfa.eps (eq.eq bool.bool (p1 n) false.false)) => eq_ind_r.eq_ind_r bool.bool false.false (x:(sttfa.etap (sttfa.p bool.bool)) => eq.eq B (match_bool_type.match_bool_type B (op (f n) (bigop.bigop B n (i:(sttfa.etap (sttfa.p nat.nat)) => p2 i) nil op (i:(sttfa.etap (sttfa.p nat.nat)) => g i))) (bigop.bigop B n (i:(sttfa.etap (sttfa.p nat.nat)) => p2 i) nil op (i:(sttfa.etap (sttfa.p nat.nat)) => g i)) x) (match_bool_type.match_bool_type B (op (g n) (bigop.bigop B n (i:(sttfa.etap (sttfa.p nat.nat)) => p2 i) nil op (i:(sttfa.etap (sttfa.p nat.nat)) => g i))) (bigop.bigop B n (i:(sttfa.etap (sttfa.p nat.nat)) => p2 i) nil op (i:(sttfa.etap (sttfa.p nat.nat)) => g i)) x)) (sym_eq_match_bool_type_false.sym_eq_match_bool_type_false B (op (f n) (bigop.bigop B n (i:(sttfa.etap (sttfa.p nat.nat)) => p2 i) nil op (i:(sttfa.etap (sttfa.p nat.nat)) => g i))) (bigop.bigop B n (i:(sttfa.etap (sttfa.p nat.nat)) => p2 i) nil op (i:(sttfa.etap (sttfa.p nat.nat)) => g i)) (y:(sttfa.etap (sttfa.p B)) => eq.eq B y (match_bool_type.match_bool_type B (op (g n) (bigop.bigop B n (i:(sttfa.etap (sttfa.p nat.nat)) => p2 i) nil op (i:(sttfa.etap (sttfa.p nat.nat)) => g i))) (bigop.bigop B n (i:(sttfa.etap (sttfa.p nat.nat)) => p2 i) nil op (i:(sttfa.etap (sttfa.p nat.nat)) => g i)) false.false)) (sym_eq_match_bool_type_false.sym_eq_match_bool_type_false B (op (g n) (bigop.bigop B n (i:(sttfa.etap (sttfa.p nat.nat)) => p2 i) nil op (i:(sttfa.etap (sttfa.p nat.nat)) => g i))) (bigop.bigop B n (i:(sttfa.etap (sttfa.p nat.nat)) => p2 i) nil op (i:(sttfa.etap (sttfa.p nat.nat)) => g i)) (y:(sttfa.etap (sttfa.p B)) => eq.eq B (bigop.bigop B n (i:(sttfa.etap (sttfa.p nat.nat)) => p2 i) nil op (i:(sttfa.etap (sttfa.p nat.nat)) => g i)) y) (refl.refl B (bigop.bigop B n (i:(sttfa.etap (sttfa.p nat.nat)) => p2 i) nil op (i:(sttfa.etap (sttfa.p nat.nat)) => g i))))) (p1 n) H1) (true_or_false.true_or_false (p1 n))) (p2 n) (samep n (le_n.le_n (S.S n)))) (bigop.bigop B n (i:(sttfa.etap (sttfa.p nat.nat)) => p1 i) nil op (i:(sttfa.etap (sttfa.p nat.nat)) => f i)) (Hind (sameF_upto_le.sameF_upto_le bool.bool p1 p2 n (S.S n) (eq_coerc.eq_coerc (le.le (pred.pred (S.S n)) (S.S n)) (le.le n (S.S n)) (le_pred_n.le_pred_n (S.S n)) (rewrite_l.rewrite_l nat.nat n (__:(sttfa.etap (sttfa.p nat.nat)) => eq.eq sttfa.bool (le.le __ (S.S n)) (le.le n (S.S n))) (refl.refl sttfa.bool (le.le n (S.S n))) (pred.pred (S.S n)) (pred_Sn.pred_Sn n))) samep) (sameF_p_le.sameF_p_le B p1 f g n (S.S n) (eq_coerc.eq_coerc (le.le (pred.pred (S.S n)) (S.S n)) (le.le n (S.S n)) (le_pred_n.le_pred_n (S.S n)) (rewrite_l.rewrite_l nat.nat n (__:(sttfa.etap (sttfa.p nat.nat)) => eq.eq sttfa.bool (le.le __ (S.S n)) (le.le n (S.S n))) (refl.refl sttfa.bool (le.le n (S.S n))) (pred.pred (S.S n)) (pred_Sn.pred_Sn n))) samef))))))) k.

