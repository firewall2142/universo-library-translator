def minus_minus :
  sttfa.eps (sttfa.forall nat.nat (n:(sttfa.etap (sttfa.p nat.nat)) => sttfa.forall nat.nat (m:(sttfa.etap (sttfa.p nat.nat)) => sttfa.forall nat.nat (p:(sttfa.etap (sttfa.p nat.nat)) => sttfa.impl (le.le p m) (sttfa.impl (le.le m n) (eq.eq nat.nat (plus.plus p (minus.minus n m)) (minus.minus n (minus.minus m p))))))))
  :=
  n:(sttfa.etap (sttfa.p nat.nat)) => m:(sttfa.etap (sttfa.p nat.nat)) => p:(sttfa.etap (sttfa.p nat.nat)) => lepm:(sttfa.eps (le.le p m)) => lemn:(sttfa.eps (le.le m n)) => sym_eq.sym_eq nat.nat (minus.minus n (minus.minus m p)) (plus.plus p (minus.minus n m)) (plus_to_minus.plus_to_minus n (minus.minus m p) (plus.plus p (minus.minus n m)) (eq_ind.eq_ind nat.nat (plus.plus (plus.plus (minus.minus m p) p) (minus.minus n m)) (x_1:(sttfa.etap (sttfa.p nat.nat)) => eq.eq nat.nat n x_1) (eq_ind.eq_ind nat.nat m (x_1:(sttfa.etap (sttfa.p nat.nat)) => eq.eq nat.nat n (plus.plus x_1 (minus.minus n m))) (eq_ind.eq_ind nat.nat (plus.plus (minus.minus n m) m) (x_1:(sttfa.etap (sttfa.p nat.nat)) => eq.eq nat.nat n x_1) (eq_ind.eq_ind nat.nat n (x_1:(sttfa.etap (sttfa.p nat.nat)) => eq.eq nat.nat n x_1) (refl.refl nat.nat n) (plus.plus (minus.minus n m) m) (plus_minus_m_m.plus_minus_m_m n m lemn)) (plus.plus m (minus.minus n m)) (commutative_plus.commutative_plus (minus.minus n m) m)) (plus.plus (minus.minus m p) p) (plus_minus_m_m.plus_minus_m_m m p lepm)) (plus.plus (minus.minus m p) (plus.plus p (minus.minus n m))) (associative_plus.associative_plus (minus.minus m p) p (minus.minus n m)))).

