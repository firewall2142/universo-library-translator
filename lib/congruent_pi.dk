def congruent_pi :
  sttfa.eps (sttfa.forall (sttfa.arrow nat.nat nat.nat) (f:(sttfa.etap (sttfa.p (sttfa.arrow nat.nat nat.nat))) => sttfa.forall nat.nat (n:(sttfa.etap (sttfa.p nat.nat)) => sttfa.forall nat.nat (p:(sttfa.etap (sttfa.p nat.nat)) => sttfa.impl (lt.lt O.O p) (congruent.congruent (bigop.bigop nat.nat n (i:(sttfa.etap (sttfa.p nat.nat)) => true.true) (S.S O.O) times.times (i:(sttfa.etap (sttfa.p nat.nat)) => f i)) (bigop.bigop nat.nat n (i:(sttfa.etap (sttfa.p nat.nat)) => true.true) (S.S O.O) times.times (i:(sttfa.etap (sttfa.p nat.nat)) => mod.mod (f i) p)) p)))))
  :=
  f:(sttfa.etap (sttfa.p (sttfa.arrow nat.nat nat.nat))) => n:(sttfa.etap (sttfa.p nat.nat)) => nat_ind.nat_ind (_x_365:(sttfa.etap (sttfa.p nat.nat)) => sttfa.forall nat.nat (p:(sttfa.etap (sttfa.p nat.nat)) => sttfa.impl (lt.lt O.O p) (congruent.congruent (bigop.bigop nat.nat _x_365 (i:(sttfa.etap (sttfa.p nat.nat)) => true.true) (S.S O.O) times.times (i:(sttfa.etap (sttfa.p nat.nat)) => f i)) (bigop.bigop nat.nat _x_365 (i:(sttfa.etap (sttfa.p nat.nat)) => true.true) (S.S O.O) times.times (i:(sttfa.etap (sttfa.p nat.nat)) => mod.mod (f i) p)) p))) (p:(sttfa.etap (sttfa.p nat.nat)) => sym_eq_bigop_O.sym_eq_bigop_O nat.nat (y:(sttfa.etap (sttfa.p (sttfa.arrow (sttfa.arrow nat.nat bool.bool) (sttfa.arrow nat.nat (sttfa.arrow (sttfa.arrow nat.nat (sttfa.arrow nat.nat nat.nat)) (sttfa.arrow (sttfa.arrow nat.nat nat.nat) nat.nat)))))) => sttfa.impl (lt.lt O.O p) (congruent.congruent (bigop.bigop nat.nat O.O (i:(sttfa.etap (sttfa.p nat.nat)) => true.true) (S.S O.O) times.times (i:(sttfa.etap (sttfa.p nat.nat)) => f i)) (y (i:(sttfa.etap (sttfa.p nat.nat)) => true.true) (S.S O.O) times.times (i:(sttfa.etap (sttfa.p nat.nat)) => mod.mod (f i) p)) p)) (sym_eq_bigop_body_O.sym_eq_bigop_body_O nat.nat (y:(sttfa.etap (sttfa.p (sttfa.arrow (sttfa.arrow nat.nat bool.bool) (sttfa.arrow nat.nat (sttfa.arrow (sttfa.arrow nat.nat (sttfa.arrow nat.nat nat.nat)) (sttfa.arrow (sttfa.arrow nat.nat nat.nat) nat.nat)))))) => sttfa.impl (lt.lt O.O p) (congruent.congruent (bigop.bigop nat.nat O.O (i:(sttfa.etap (sttfa.p nat.nat)) => true.true) (S.S O.O) times.times (i:(sttfa.etap (sttfa.p nat.nat)) => f i)) (y (i:(sttfa.etap (sttfa.p nat.nat)) => true.true) (S.S O.O) times.times (i:(sttfa.etap (sttfa.p nat.nat)) => mod.mod (f i) p)) p)) (eq_bigop_body_O.eq_bigop_body_O nat.nat (y:(sttfa.etap (sttfa.p (sttfa.arrow (sttfa.arrow nat.nat bool.bool) (sttfa.arrow nat.nat (sttfa.arrow (sttfa.arrow nat.nat (sttfa.arrow nat.nat nat.nat)) (sttfa.arrow (sttfa.arrow nat.nat nat.nat) nat.nat)))))) => sttfa.impl (lt.lt O.O p) (congruent.congruent (bigop.bigop nat.nat O.O (i:(sttfa.etap (sttfa.p nat.nat)) => true.true) (S.S O.O) times.times (i:(sttfa.etap (sttfa.p nat.nat)) => f i)) (y (i:(sttfa.etap (sttfa.p nat.nat)) => true.true) (S.S O.O) times.times (i:(sttfa.etap (sttfa.p nat.nat)) => f i)) p)) (eq_bigop_O.eq_bigop_O nat.nat (y:(sttfa.etap (sttfa.p (sttfa.arrow (sttfa.arrow nat.nat bool.bool) (sttfa.arrow nat.nat (sttfa.arrow (sttfa.arrow nat.nat (sttfa.arrow nat.nat nat.nat)) (sttfa.arrow (sttfa.arrow nat.nat nat.nat) nat.nat)))))) => sttfa.impl (lt.lt O.O p) (congruent.congruent (bigop.bigop nat.nat O.O (i:(sttfa.etap (sttfa.p nat.nat)) => true.true) (S.S O.O) times.times (i:(sttfa.etap (sttfa.p nat.nat)) => f i)) (y (i:(sttfa.etap (sttfa.p nat.nat)) => true.true) (S.S O.O) times.times (i:(sttfa.etap (sttfa.p nat.nat)) => f i)) p)) (auto:(sttfa.eps (lt.lt O.O p)) => congruent_n_n.congruent_n_n (bigop.bigop nat.nat O.O (i:(sttfa.etap (sttfa.p nat.nat)) => true.true) (S.S O.O) times.times (i:(sttfa.etap (sttfa.p nat.nat)) => f i)) p))))) (n1:(sttfa.etap (sttfa.p nat.nat)) => Hind:(sttfa.eps (sttfa.forall nat.nat (p:(sttfa.etap (sttfa.p nat.nat)) => sttfa.impl (lt.lt O.O p) (congruent.congruent (bigop.bigop nat.nat n1 (i:(sttfa.etap (sttfa.p nat.nat)) => true.true) (S.S O.O) times.times (i:(sttfa.etap (sttfa.p nat.nat)) => f i)) (bigop.bigop nat.nat n1 (i:(sttfa.etap (sttfa.p nat.nat)) => true.true) (S.S O.O) times.times (i:(sttfa.etap (sttfa.p nat.nat)) => mod.mod (f i) p)) p)))) => p:(sttfa.etap (sttfa.p nat.nat)) => posp:(sttfa.eps (lt.lt O.O p)) => eq_ind_r.eq_ind_r nat.nat (times.times (f n1) (bigop.bigop nat.nat n1 (i:(sttfa.etap (sttfa.p nat.nat)) => true.true) (S.S O.O) times.times (i:(sttfa.etap (sttfa.p nat.nat)) => f i))) (x:(sttfa.etap (sttfa.p nat.nat)) => congruent.congruent x (bigop.bigop nat.nat (S.S n1) (i:(sttfa.etap (sttfa.p nat.nat)) => true.true) (S.S O.O) times.times (i:(sttfa.etap (sttfa.p nat.nat)) => mod.mod (f i) p)) p) (sym_eq_bigop_S.sym_eq_bigop_S nat.nat n1 (y:(sttfa.etap (sttfa.p (sttfa.arrow (sttfa.arrow nat.nat bool.bool) (sttfa.arrow nat.nat (sttfa.arrow (sttfa.arrow nat.nat (sttfa.arrow nat.nat nat.nat)) (sttfa.arrow (sttfa.arrow nat.nat nat.nat) nat.nat)))))) => congruent.congruent (times.times (f n1) (bigop.bigop nat.nat n1 (i:(sttfa.etap (sttfa.p nat.nat)) => true.true) (S.S O.O) times.times (i:(sttfa.etap (sttfa.p nat.nat)) => f i))) (y (i:(sttfa.etap (sttfa.p nat.nat)) => true.true) (S.S O.O) times.times (i:(sttfa.etap (sttfa.p nat.nat)) => mod.mod (f i) p)) p) (sym_eq_bigop_body_S.sym_eq_bigop_body_S nat.nat n1 (y:(sttfa.etap (sttfa.p (sttfa.arrow (sttfa.arrow nat.nat bool.bool) (sttfa.arrow nat.nat (sttfa.arrow (sttfa.arrow nat.nat (sttfa.arrow nat.nat nat.nat)) (sttfa.arrow (sttfa.arrow nat.nat nat.nat) nat.nat)))))) => congruent.congruent (times.times (f n1) (bigop.bigop nat.nat n1 (i:(sttfa.etap (sttfa.p nat.nat)) => true.true) (S.S O.O) times.times (i:(sttfa.etap (sttfa.p nat.nat)) => f i))) (y (i:(sttfa.etap (sttfa.p nat.nat)) => true.true) (S.S O.O) times.times (i:(sttfa.etap (sttfa.p nat.nat)) => mod.mod (f i) p)) p) (sym_eq_match_bool_type_true.sym_eq_match_bool_type_true nat.nat (times.times (mod.mod (f n1) p) (bigop.bigop nat.nat n1 (i:(sttfa.etap (sttfa.p nat.nat)) => true.true) (S.S O.O) times.times (i:(sttfa.etap (sttfa.p nat.nat)) => mod.mod (f i) p))) (bigop.bigop nat.nat n1 (i:(sttfa.etap (sttfa.p nat.nat)) => true.true) (S.S O.O) times.times (i:(sttfa.etap (sttfa.p nat.nat)) => mod.mod (f i) p)) (y:(sttfa.etap (sttfa.p nat.nat)) => congruent.congruent (times.times (f n1) (bigop.bigop nat.nat n1 (i:(sttfa.etap (sttfa.p nat.nat)) => true.true) (S.S O.O) times.times (i:(sttfa.etap (sttfa.p nat.nat)) => f i))) y p) (congruent_times.congruent_times (f n1) (bigop.bigop nat.nat n1 (i:(sttfa.etap (sttfa.p nat.nat)) => true.true) (S.S O.O) times.times (i:(sttfa.etap (sttfa.p nat.nat)) => f i)) (mod.mod (f n1) p) (bigop.bigop nat.nat n1 (i:(sttfa.etap (sttfa.p nat.nat)) => true.true) (S.S O.O) times.times (i:(sttfa.etap (sttfa.p nat.nat)) => mod.mod (f i) p)) p posp (congruent_n_mod_n.congruent_n_mod_n (f n1) p posp) (Hind p posp))))) (bigop.bigop nat.nat (S.S n1) (i:(sttfa.etap (sttfa.p nat.nat)) => true.true) (S.S O.O) times.times (i:(sttfa.etap (sttfa.p nat.nat)) => f i)) (bigop_Strue.bigop_Strue nat.nat n1 (__:(sttfa.etap (sttfa.p nat.nat)) => true.true) (S.S O.O) times.times f (refl.refl bool.bool true.true))) n.

