def le_to_lt_to_lt :
  sttfa.eps (sttfa.forall nat.nat (n:(sttfa.etap (sttfa.p nat.nat)) => sttfa.forall nat.nat (m:(sttfa.etap (sttfa.p nat.nat)) => sttfa.forall nat.nat (p:(sttfa.etap (sttfa.p nat.nat)) => sttfa.impl (le.le n m) (sttfa.impl (lt.lt m p) (lt.lt n p))))))
  :=
  n:(sttfa.etap (sttfa.p nat.nat)) => m:(sttfa.etap (sttfa.p nat.nat)) => p:(sttfa.etap (sttfa.p nat.nat)) => H:(sttfa.eps (le.le n m)) => le_ind.le_ind n (x_417:(sttfa.etap (sttfa.p nat.nat)) => sttfa.impl (lt.lt x_417 p) (lt.lt n p)) (auto:(sttfa.eps (lt.lt n p)) => auto) (m0:(sttfa.etap (sttfa.p nat.nat)) => _x_419:(sttfa.eps (le.le n m0)) => _x_421:(sttfa.eps (sttfa.impl (lt.lt m0 p) (lt.lt n p))) => auto:(sttfa.eps (lt.lt (S.S m0) p)) => _x_421 (transitive_lt.transitive_lt m0 (S.S m0) p (eq_coerc.eq_coerc (le.le (S.S m0) (plus.plus O.O (S.S m0))) (le.le (S.S m0) (S.S m0)) (le_plus_n.le_plus_n O.O (S.S m0)) (rewrite_l.rewrite_l nat.nat (S.S m0) (__:(sttfa.etap (sttfa.p nat.nat)) => eq.eq sttfa.bool (le.le (S.S m0) __) (le.le (S.S m0) (S.S m0))) (refl.refl sttfa.bool (le.le (S.S m0) (S.S m0))) (plus.plus O.O (S.S m0)) (plus_O_n.plus_O_n (S.S m0)))) auto)) m H.

