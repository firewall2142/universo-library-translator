def eq_times_div_minus_mod :
  sttfa.eps (sttfa.forall nat.nat (a:(sttfa.etap (sttfa.p nat.nat)) => sttfa.forall nat.nat (b:(sttfa.etap (sttfa.p nat.nat)) => eq.eq nat.nat (times.times (div.div a b) b) (minus.minus a (mod.mod a b)))))
  :=
  a:(sttfa.etap (sttfa.p nat.nat)) => b:(sttfa.etap (sttfa.p nat.nat)) => eq_coerc.eq_coerc (eq.eq nat.nat (times.times b (div.div a b)) (minus.minus (plus.plus (times.times b (div.div a b)) (mod.mod a b)) (mod.mod a b))) (eq.eq nat.nat (times.times (div.div a b) b) (minus.minus a (mod.mod a b))) (minus_plus_m_m.minus_plus_m_m (times.times b (div.div a b)) (mod.mod a b)) (rewrite_r.rewrite_r nat.nat (plus.plus (mod.mod a b) (times.times b (div.div a b))) (__:(sttfa.etap (sttfa.p nat.nat)) => eq.eq sttfa.bool (eq.eq nat.nat (times.times b (div.div a b)) (minus.minus __ (mod.mod a b))) (eq.eq nat.nat (times.times (div.div a b) b) (minus.minus a (mod.mod a b)))) (rewrite_r.rewrite_r nat.nat (times.times b (div.div a b)) (__:(sttfa.etap (sttfa.p nat.nat)) => eq.eq sttfa.bool (eq.eq nat.nat (times.times b (div.div a b)) (minus.minus (plus.plus (mod.mod a b) (times.times b (div.div a b))) (mod.mod a b))) (eq.eq nat.nat __ (minus.minus a (mod.mod a b)))) (rewrite_l.rewrite_l nat.nat a (__:(sttfa.etap (sttfa.p nat.nat)) => eq.eq sttfa.bool (eq.eq nat.nat (times.times b (div.div a b)) (minus.minus __ (mod.mod a b))) (eq.eq nat.nat (times.times b (div.div a b)) (minus.minus a (mod.mod a b)))) (refl.refl sttfa.bool (eq.eq nat.nat (times.times b (div.div a b)) (minus.minus a (mod.mod a b)))) (plus.plus (mod.mod a b) (times.times b (div.div a b))) (rewrite_l.rewrite_l nat.nat (plus.plus (times.times b (div.div a b)) (mod.mod a b)) (__:(sttfa.etap (sttfa.p nat.nat)) => eq.eq nat.nat a __) (rewrite_l.rewrite_l nat.nat (times.times (div.div a b) b) (__:(sttfa.etap (sttfa.p nat.nat)) => eq.eq nat.nat a (plus.plus __ (mod.mod a b))) (div_mod.div_mod a b) (times.times b (div.div a b)) (commutative_times.commutative_times (div.div a b) b)) (plus.plus (mod.mod a b) (times.times b (div.div a b))) (commutative_plus.commutative_plus (times.times b (div.div a b)) (mod.mod a b)))) (times.times (div.div a b) b) (commutative_times.commutative_times (div.div a b) b)) (plus.plus (times.times b (div.div a b)) (mod.mod a b)) (commutative_plus.commutative_plus (times.times b (div.div a b)) (mod.mod a b))).

