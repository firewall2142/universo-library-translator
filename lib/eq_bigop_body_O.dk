def eq_bigop_body_O :
  sttfa.eps (sttfa.forallP (H:sttfa.type => leibniz.leibniz (sttfa.arrow (sttfa.arrow nat.nat bool.bool) (sttfa.arrow H (sttfa.arrow (sttfa.arrow H (sttfa.arrow H H)) (sttfa.arrow (sttfa.arrow nat.nat H) H)))) (bigop_body.bigop_body H O.O) (p:(sttfa.etap (sttfa.p (sttfa.arrow nat.nat bool.bool))) => nil:(sttfa.etap (sttfa.p H)) => op:(sttfa.etap (sttfa.p (sttfa.arrow H (sttfa.arrow H H)))) => f:(sttfa.etap (sttfa.p (sttfa.arrow nat.nat H))) => nil)))
  :=
  H:sttfa.type => equal_leibniz.equal_leibniz (sttfa.arrow (sttfa.arrow nat.nat bool.bool) (sttfa.arrow H (sttfa.arrow (sttfa.arrow H (sttfa.arrow H H)) (sttfa.arrow (sttfa.arrow nat.nat H) H)))) (bigop_body.bigop_body H O.O) (p:(sttfa.etap (sttfa.p (sttfa.arrow nat.nat bool.bool))) => nil:(sttfa.etap (sttfa.p H)) => op:(sttfa.etap (sttfa.p (sttfa.arrow H (sttfa.arrow H H)))) => f:(sttfa.etap (sttfa.p (sttfa.arrow nat.nat H))) => nil) (axiom_bigop_body_O.axiom_bigop_body_O H).

