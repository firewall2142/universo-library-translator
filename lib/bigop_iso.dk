def bigop_iso :
  sttfa.eps (sttfa.forall nat.nat (n1:(sttfa.etap (sttfa.p nat.nat)) => sttfa.forall nat.nat (n2:(sttfa.etap (sttfa.p nat.nat)) => sttfa.forall (sttfa.arrow nat.nat bool.bool) (p1:(sttfa.etap (sttfa.p (sttfa.arrow nat.nat bool.bool))) => sttfa.forall (sttfa.arrow nat.nat bool.bool) (p2:(sttfa.etap (sttfa.p (sttfa.arrow nat.nat bool.bool))) => sttfa.forall (sttfa.arrow nat.nat nat.nat) (f1:(sttfa.etap (sttfa.p (sttfa.arrow nat.nat nat.nat))) => sttfa.forall (sttfa.arrow nat.nat nat.nat) (f2:(sttfa.etap (sttfa.p (sttfa.arrow nat.nat nat.nat))) => sttfa.impl (iso.iso n1 n2 p1 p2 f1 f2) (eq.eq nat.nat (bigop.bigop nat.nat n1 (i:(sttfa.etap (sttfa.p nat.nat)) => p1 i) (S.S O.O) times.times (i:(sttfa.etap (sttfa.p nat.nat)) => f1 i)) (bigop.bigop nat.nat n2 (i:(sttfa.etap (sttfa.p nat.nat)) => p2 i) (S.S O.O) times.times (i:(sttfa.etap (sttfa.p nat.nat)) => f2 i))))))))))
  :=
  n1:(sttfa.etap (sttfa.p nat.nat)) => n2:(sttfa.etap (sttfa.p nat.nat)) => p1:(sttfa.etap (sttfa.p (sttfa.arrow nat.nat bool.bool))) => p2:(sttfa.etap (sttfa.p (sttfa.arrow nat.nat bool.bool))) => f1:(sttfa.etap (sttfa.p (sttfa.arrow nat.nat nat.nat))) => f2:(sttfa.etap (sttfa.p (sttfa.arrow nat.nat nat.nat))) => _clearme:(sttfa.eps (iso.iso n1 n2 p1 p2 f1 f2)) => match_ex_prop.match_ex_prop (sttfa.arrow nat.nat nat.nat) (h:(sttfa.etap (sttfa.p (sttfa.arrow nat.nat nat.nat))) => ex.ex (sttfa.arrow nat.nat nat.nat) (k:(sttfa.etap (sttfa.p (sttfa.arrow nat.nat nat.nat))) => And.And (And.And (sttfa.forall nat.nat (i:(sttfa.etap (sttfa.p nat.nat)) => sttfa.impl (lt.lt i n1) (sttfa.impl (eq.eq bool.bool (p1 i) true.true) (eq.eq nat.nat (f1 i) (f2 (h i)))))) (sub_hk.sub_hk h k n1 n2 p1 p2 f1 f2)) (sub_hk.sub_hk k h n2 n1 p2 p1 f2 f1))) (eq.eq nat.nat (bigop.bigop nat.nat n1 (i:(sttfa.etap (sttfa.p nat.nat)) => p1 i) (S.S O.O) times.times (i:(sttfa.etap (sttfa.p nat.nat)) => f1 i)) (bigop.bigop nat.nat n2 (i:(sttfa.etap (sttfa.p nat.nat)) => p2 i) (S.S O.O) times.times (i:(sttfa.etap (sttfa.p nat.nat)) => f2 i))) (h:(sttfa.etap (sttfa.p (sttfa.arrow nat.nat nat.nat))) => _clearme0:(sttfa.eps (ex.ex (sttfa.arrow nat.nat nat.nat) (k:(sttfa.etap (sttfa.p (sttfa.arrow nat.nat nat.nat))) => And.And (And.And (sttfa.forall nat.nat (i:(sttfa.etap (sttfa.p nat.nat)) => sttfa.impl (lt.lt i n1) (sttfa.impl (eq.eq bool.bool (p1 i) true.true) (eq.eq nat.nat (f1 i) (f2 (h i)))))) (sub_hk.sub_hk h k n1 n2 p1 p2 f1 f2)) (sub_hk.sub_hk k h n2 n1 p2 p1 f2 f1)))) => match_ex_prop.match_ex_prop (sttfa.arrow nat.nat nat.nat) (k:(sttfa.etap (sttfa.p (sttfa.arrow nat.nat nat.nat))) => And.And (And.And (sttfa.forall nat.nat (i:(sttfa.etap (sttfa.p nat.nat)) => sttfa.impl (lt.lt i n1) (sttfa.impl (eq.eq bool.bool (p1 i) true.true) (eq.eq nat.nat (f1 i) (f2 (h i)))))) (sub_hk.sub_hk h k n1 n2 p1 p2 f1 f2)) (sub_hk.sub_hk k h n2 n1 p2 p1 f2 f1)) (eq.eq nat.nat (bigop.bigop nat.nat n1 (i:(sttfa.etap (sttfa.p nat.nat)) => p1 i) (S.S O.O) times.times (i:(sttfa.etap (sttfa.p nat.nat)) => f1 i)) (bigop.bigop nat.nat n2 (i:(sttfa.etap (sttfa.p nat.nat)) => p2 i) (S.S O.O) times.times (i:(sttfa.etap (sttfa.p nat.nat)) => f2 i))) (k:(sttfa.etap (sttfa.p (sttfa.arrow nat.nat nat.nat))) => _clearme1:(sttfa.eps (And.And (And.And (sttfa.forall nat.nat (i:(sttfa.etap (sttfa.p nat.nat)) => sttfa.impl (lt.lt i n1) (sttfa.impl (eq.eq bool.bool (p1 i) true.true) (eq.eq nat.nat (f1 i) (f2 (h i)))))) (sub_hk.sub_hk h k n1 n2 p1 p2 f1 f2)) (sub_hk.sub_hk k h n2 n1 p2 p1 f2 f1))) => match_And_prop.match_And_prop (And.And (sttfa.forall nat.nat (i:(sttfa.etap (sttfa.p nat.nat)) => sttfa.impl (lt.lt i n1) (sttfa.impl (eq.eq bool.bool (p1 i) true.true) (eq.eq nat.nat (f1 i) (f2 (h i)))))) (sub_hk.sub_hk h k n1 n2 p1 p2 f1 f2)) (sub_hk.sub_hk k h n2 n1 p2 p1 f2 f1) (eq.eq nat.nat (bigop.bigop nat.nat n1 (i:(sttfa.etap (sttfa.p nat.nat)) => p1 i) (S.S O.O) times.times (i:(sttfa.etap (sttfa.p nat.nat)) => f1 i)) (bigop.bigop nat.nat n2 (i:(sttfa.etap (sttfa.p nat.nat)) => p2 i) (S.S O.O) times.times (i:(sttfa.etap (sttfa.p nat.nat)) => f2 i))) (_clearme2:(sttfa.eps (And.And (sttfa.forall nat.nat (i:(sttfa.etap (sttfa.p nat.nat)) => sttfa.impl (lt.lt i n1) (sttfa.impl (eq.eq bool.bool (p1 i) true.true) (eq.eq nat.nat (f1 i) (f2 (h i)))))) (sub_hk.sub_hk h k n1 n2 p1 p2 f1 f2))) => match_And_prop.match_And_prop (sttfa.forall nat.nat (i:(sttfa.etap (sttfa.p nat.nat)) => sttfa.impl (lt.lt i n1) (sttfa.impl (eq.eq bool.bool (p1 i) true.true) (eq.eq nat.nat (f1 i) (f2 (h i)))))) (sub_hk.sub_hk h k n1 n2 p1 p2 f1 f2) (sttfa.impl (sub_hk.sub_hk k h n2 n1 p2 p1 f2 f1) (eq.eq nat.nat (bigop.bigop nat.nat n1 (i:(sttfa.etap (sttfa.p nat.nat)) => p1 i) (S.S O.O) times.times (i:(sttfa.etap (sttfa.p nat.nat)) => f1 i)) (bigop.bigop nat.nat n2 (i:(sttfa.etap (sttfa.p nat.nat)) => p2 i) (S.S O.O) times.times (i:(sttfa.etap (sttfa.p nat.nat)) => f2 i)))) (same:(sttfa.eps (sttfa.forall nat.nat (i:(sttfa.etap (sttfa.p nat.nat)) => sttfa.impl (lt.lt i n1) (sttfa.impl (eq.eq bool.bool (p1 i) true.true) (eq.eq nat.nat (f1 i) (f2 (h i))))))) => le_gen.le_gen (__:(sttfa.etap (sttfa.p nat.nat)) => sttfa.impl (sub_hk.sub_hk h k __ n2 p1 p2 f1 f2) (sttfa.impl (sub_hk.sub_hk k h n2 __ p2 p1 f2 f1) (eq.eq nat.nat (bigop.bigop nat.nat __ (i:(sttfa.etap (sttfa.p nat.nat)) => p1 i) (S.S O.O) times.times (i:(sttfa.etap (sttfa.p nat.nat)) => f1 i)) (bigop.bigop nat.nat n2 (i:(sttfa.etap (sttfa.p nat.nat)) => p2 i) (S.S O.O) times.times (i:(sttfa.etap (sttfa.p nat.nat)) => f2 i))))) n1 (i:(sttfa.etap (sttfa.p nat.nat)) => nat_ind.nat_ind (_x_365:(sttfa.etap (sttfa.p nat.nat)) => sttfa.forall (sttfa.arrow nat.nat bool.bool) (f:(sttfa.etap (sttfa.p (sttfa.arrow nat.nat bool.bool))) => sttfa.impl (le.le _x_365 n1) (sttfa.impl (sub_hk.sub_hk h k _x_365 n2 p1 f f1 f2) (sttfa.impl (sub_hk.sub_hk k h n2 _x_365 f p1 f2 f1) (eq.eq nat.nat (bigop.bigop nat.nat _x_365 (i0:(sttfa.etap (sttfa.p nat.nat)) => p1 i0) (S.S O.O) times.times (i0:(sttfa.etap (sttfa.p nat.nat)) => f1 i0)) (bigop.bigop nat.nat n2 (i0:(sttfa.etap (sttfa.p nat.nat)) => f i0) (S.S O.O) times.times (i0:(sttfa.etap (sttfa.p nat.nat)) => f2 i0))))))) (nat_ind.nat_ind (_x_365:(sttfa.etap (sttfa.p nat.nat)) => sttfa.forall (sttfa.arrow nat.nat bool.bool) (f:(sttfa.etap (sttfa.p (sttfa.arrow nat.nat bool.bool))) => sttfa.impl (le.le O.O n1) (sttfa.impl (sub_hk.sub_hk h k O.O _x_365 p1 f f1 f2) (sttfa.impl (sub_hk.sub_hk k h _x_365 O.O f p1 f2 f1) (eq.eq nat.nat (bigop.bigop nat.nat O.O (i0:(sttfa.etap (sttfa.p nat.nat)) => p1 i0) (S.S O.O) times.times (i0:(sttfa.etap (sttfa.p nat.nat)) => f1 i0)) (bigop.bigop nat.nat _x_365 (i0:(sttfa.etap (sttfa.p nat.nat)) => f i0) (S.S O.O) times.times (i0:(sttfa.etap (sttfa.p nat.nat)) => f2 i0))))))) (f:(sttfa.etap (sttfa.p (sttfa.arrow nat.nat bool.bool))) => sym_eq_bigop_O.sym_eq_bigop_O nat.nat (y:(sttfa.etap (sttfa.p (sttfa.arrow (sttfa.arrow nat.nat bool.bool) (sttfa.arrow nat.nat (sttfa.arrow (sttfa.arrow nat.nat (sttfa.arrow nat.nat nat.nat)) (sttfa.arrow (sttfa.arrow nat.nat nat.nat) nat.nat)))))) => sttfa.impl (le.le O.O n1) (sttfa.impl (sub_hk.sub_hk h k O.O O.O p1 f f1 f2) (sttfa.impl (sub_hk.sub_hk k h O.O O.O f p1 f2 f1) (eq.eq nat.nat (bigop.bigop nat.nat O.O (iO:(sttfa.etap (sttfa.p nat.nat)) => p1 iO) (S.S O.O) times.times (iO:(sttfa.etap (sttfa.p nat.nat)) => f1 iO)) (y (iO:(sttfa.etap (sttfa.p nat.nat)) => f iO) (S.S O.O) times.times (iO:(sttfa.etap (sttfa.p nat.nat)) => f2 iO)))))) (sym_eq_bigop_body_O.sym_eq_bigop_body_O nat.nat (y:(sttfa.etap (sttfa.p (sttfa.arrow (sttfa.arrow nat.nat bool.bool) (sttfa.arrow nat.nat (sttfa.arrow (sttfa.arrow nat.nat (sttfa.arrow nat.nat nat.nat)) (sttfa.arrow (sttfa.arrow nat.nat nat.nat) nat.nat)))))) => sttfa.impl (le.le O.O n1) (sttfa.impl (sub_hk.sub_hk h k O.O O.O p1 f f1 f2) (sttfa.impl (sub_hk.sub_hk k h O.O O.O f p1 f2 f1) (eq.eq nat.nat (bigop.bigop nat.nat O.O (iO:(sttfa.etap (sttfa.p nat.nat)) => p1 iO) (S.S O.O) times.times (iO:(sttfa.etap (sttfa.p nat.nat)) => f1 iO)) (y (iO:(sttfa.etap (sttfa.p nat.nat)) => f iO) (S.S O.O) times.times (iO:(sttfa.etap (sttfa.p nat.nat)) => f2 iO)))))) (eq_bigop_body_O.eq_bigop_body_O nat.nat (y:(sttfa.etap (sttfa.p (sttfa.arrow (sttfa.arrow nat.nat bool.bool) (sttfa.arrow nat.nat (sttfa.arrow (sttfa.arrow nat.nat (sttfa.arrow nat.nat nat.nat)) (sttfa.arrow (sttfa.arrow nat.nat nat.nat) nat.nat)))))) => sttfa.impl (le.le O.O n1) (sttfa.impl (sub_hk.sub_hk h k O.O O.O p1 f f1 f2) (sttfa.impl (sub_hk.sub_hk k h O.O O.O f p1 f2 f1) (eq.eq nat.nat (bigop.bigop nat.nat O.O (iO:(sttfa.etap (sttfa.p nat.nat)) => p1 iO) (S.S O.O) times.times (iO:(sttfa.etap (sttfa.p nat.nat)) => f1 iO)) (y (iO:(sttfa.etap (sttfa.p nat.nat)) => p1 iO) (S.S O.O) times.times (iO:(sttfa.etap (sttfa.p nat.nat)) => f1 iO)))))) (eq_bigop_O.eq_bigop_O nat.nat (y:(sttfa.etap (sttfa.p (sttfa.arrow (sttfa.arrow nat.nat bool.bool) (sttfa.arrow nat.nat (sttfa.arrow (sttfa.arrow nat.nat (sttfa.arrow nat.nat nat.nat)) (sttfa.arrow (sttfa.arrow nat.nat nat.nat) nat.nat)))))) => sttfa.impl (le.le O.O n1) (sttfa.impl (sub_hk.sub_hk h k O.O O.O p1 f f1 f2) (sttfa.impl (sub_hk.sub_hk k h O.O O.O f p1 f2 f1) (eq.eq nat.nat (bigop.bigop nat.nat O.O (iO:(sttfa.etap (sttfa.p nat.nat)) => p1 iO) (S.S O.O) times.times (iO:(sttfa.etap (sttfa.p nat.nat)) => f1 iO)) (y (iO:(sttfa.etap (sttfa.p nat.nat)) => p1 iO) (S.S O.O) times.times (iO:(sttfa.etap (sttfa.p nat.nat)) => f1 iO)))))) (auto:(sttfa.eps (le.le O.O n1)) => auto':(sttfa.eps (sub_hk.sub_hk h k O.O O.O p1 f f1 f2)) => auto'':(sttfa.eps (sub_hk.sub_hk k h O.O O.O f p1 f2 f1)) => refl.refl nat.nat (bigop.bigop nat.nat O.O (i0:(sttfa.etap (sttfa.p nat.nat)) => p1 i0) (S.S O.O) times.times (i0:(sttfa.etap (sttfa.p nat.nat)) => f1 i0))))))) (m:(sttfa.etap (sttfa.p nat.nat)) => Hind:(sttfa.eps (sttfa.forall (sttfa.arrow nat.nat bool.bool) (f:(sttfa.etap (sttfa.p (sttfa.arrow nat.nat bool.bool))) => sttfa.impl (le.le O.O n1) (sttfa.impl (sub_hk.sub_hk h k O.O m p1 f f1 f2) (sttfa.impl (sub_hk.sub_hk k h m O.O f p1 f2 f1) (eq.eq nat.nat (bigop.bigop nat.nat O.O (i0:(sttfa.etap (sttfa.p nat.nat)) => p1 i0) (S.S O.O) times.times (i0:(sttfa.etap (sttfa.p nat.nat)) => f1 i0)) (bigop.bigop nat.nat m (i0:(sttfa.etap (sttfa.p nat.nat)) => f i0) (S.S O.O) times.times (i0:(sttfa.etap (sttfa.p nat.nat)) => f2 i0)))))))) => p20:(sttfa.etap (sttfa.p (sttfa.arrow nat.nat bool.bool))) => __:(sttfa.eps (le.le O.O n1)) => sub1:(sttfa.eps (sub_hk.sub_hk h k O.O (S.S m) p1 p20 f1 f2)) => sub2:(sttfa.eps (sub_hk.sub_hk k h (S.S m) O.O p20 p1 f2 f1)) => eq_ind_r.eq_ind_r nat.nat (bigop.bigop nat.nat m (i0:(sttfa.etap (sttfa.p nat.nat)) => p20 i0) (S.S O.O) times.times (i0:(sttfa.etap (sttfa.p nat.nat)) => f2 i0)) (x:(sttfa.etap (sttfa.p nat.nat)) => eq.eq nat.nat (bigop.bigop nat.nat O.O (i0:(sttfa.etap (sttfa.p nat.nat)) => p1 i0) (S.S O.O) times.times (i0:(sttfa.etap (sttfa.p nat.nat)) => f1 i0)) x) (Hind p20 (le_O_n.le_O_n n1) (sub_hkO.sub_hkO h k O.O m p1 p20 f1 f2 (refl.refl nat.nat O.O)) (transitive_sub.transitive_sub (x:(sttfa.etap (sttfa.p nat.nat)) => x) (x:(sttfa.etap (sttfa.p nat.nat)) => x) k h m (S.S m) O.O p20 p20 p1 f2 f2 f1 (sub_lt.sub_lt f2 p20 m (S.S m) (le_n_Sn.le_n_Sn m)) sub2)) (bigop.bigop nat.nat (S.S m) (i0:(sttfa.etap (sttfa.p nat.nat)) => p20 i0) (S.S O.O) times.times (i0:(sttfa.etap (sttfa.p nat.nat)) => f2 i0)) (bigop_Sfalse.bigop_Sfalse nat.nat m p20 (S.S O.O) times.times f2 (sub0_to_false.sub0_to_false k h O.O (S.S m) p1 p20 f1 f2 (refl.refl nat.nat O.O) sub2 m (eq_coerc.eq_coerc (lt.lt (mod.mod m O.O) (plus.plus (plus.plus (mod.mod m O.O) (times.times O.O (div.div m O.O))) (S.S O.O))) (lt.lt m (S.S m)) (lt_plus_Sn_r.lt_plus_Sn_r (mod.mod m O.O) (times.times O.O (div.div m O.O)) O.O) (rewrite_l.rewrite_l nat.nat m (__1:(sttfa.etap (sttfa.p nat.nat)) => eq.eq sttfa.bool (lt.lt (mod.mod m O.O) (plus.plus __1 (S.S O.O))) (lt.lt m (S.S m))) (rewrite_l.rewrite_l nat.nat m (__1:(sttfa.etap (sttfa.p nat.nat)) => eq.eq sttfa.bool (lt.lt __1 (plus.plus m (S.S O.O))) (lt.lt m (S.S m))) (rewrite_l.rewrite_l nat.nat (S.S m) (__1:(sttfa.etap (sttfa.p nat.nat)) => eq.eq sttfa.bool (lt.lt m __1) (lt.lt m (S.S m))) (refl.refl sttfa.bool (lt.lt m (S.S m))) (plus.plus m (S.S O.O)) (rewrite_r.rewrite_r nat.nat (plus.plus m O.O) (__1:(sttfa.etap (sttfa.p nat.nat)) => eq.eq nat.nat (S.S __1) (plus.plus m (S.S O.O))) (plus_n_Sm.plus_n_Sm m O.O) m (plus_n_O.plus_n_O m))) (mod.mod m O.O) (rewrite_r.rewrite_r nat.nat (plus.plus O.O (mod.mod m O.O)) (__1:(sttfa.etap (sttfa.p nat.nat)) => eq.eq nat.nat m __1) (rewrite_l.rewrite_l nat.nat (plus.plus (mod.mod m O.O) O.O) (__1:(sttfa.etap (sttfa.p nat.nat)) => eq.eq nat.nat m __1) (rewrite_r.rewrite_r nat.nat (times.times O.O (div.div m O.O)) (__1:(sttfa.etap (sttfa.p nat.nat)) => eq.eq nat.nat m (plus.plus (mod.mod m O.O) __1)) (rewrite_l.rewrite_l nat.nat (plus.plus (times.times O.O (div.div m O.O)) (mod.mod m O.O)) (__1:(sttfa.etap (sttfa.p nat.nat)) => eq.eq nat.nat m __1) (let_clause_10471.let_clause_10471 n1 n2 p1 p2 f1 f2 _clearme h _clearme0 k _clearme1 _clearme2 same i m Hind p20 __ sub1 sub2 m O.O) (plus.plus (mod.mod m O.O) (times.times O.O (div.div m O.O))) (commutative_plus.commutative_plus (times.times O.O (div.div m O.O)) (mod.mod m O.O))) O.O (times_O_n.times_O_n (div.div m O.O))) (plus.plus O.O (mod.mod m O.O)) (commutative_plus.commutative_plus (mod.mod m O.O) O.O)) (mod.mod m O.O) (plus_O_n.plus_O_n (mod.mod m O.O)))) (plus.plus (mod.mod m O.O) (times.times O.O (div.div m O.O))) (rewrite_l.rewrite_l nat.nat (plus.plus (times.times O.O (div.div m O.O)) (mod.mod m O.O)) (__1:(sttfa.etap (sttfa.p nat.nat)) => eq.eq nat.nat m __1) (let_clause_10471.let_clause_10471 n1 n2 p1 p2 f1 f2 _clearme h _clearme0 k _clearme1 _clearme2 same i m Hind p20 __ sub1 sub2 m O.O) (plus.plus (mod.mod m O.O) (times.times O.O (div.div m O.O))) (commutative_plus.commutative_plus (times.times O.O (div.div m O.O)) (mod.mod m O.O)))))))) n2) (n:(sttfa.etap (sttfa.p nat.nat)) => Hind:(sttfa.eps (sttfa.forall (sttfa.arrow nat.nat bool.bool) (f:(sttfa.etap (sttfa.p (sttfa.arrow nat.nat bool.bool))) => sttfa.impl (le.le n n1) (sttfa.impl (sub_hk.sub_hk h k n n2 p1 f f1 f2) (sttfa.impl (sub_hk.sub_hk k h n2 n f p1 f2 f1) (eq.eq nat.nat (bigop.bigop nat.nat n (i0:(sttfa.etap (sttfa.p nat.nat)) => p1 i0) (S.S O.O) times.times (i0:(sttfa.etap (sttfa.p nat.nat)) => f1 i0)) (bigop.bigop nat.nat n2 (i0:(sttfa.etap (sttfa.p nat.nat)) => f i0) (S.S O.O) times.times (i0:(sttfa.etap (sttfa.p nat.nat)) => f2 i0)))))))) => p20:(sttfa.etap (sttfa.p (sttfa.arrow nat.nat bool.bool))) => ltn:(sttfa.eps (le.le (S.S n) n1)) => sub1:(sttfa.eps (sub_hk.sub_hk h k (S.S n) n2 p1 p20 f1 f2)) => sub2:(sttfa.eps (sub_hk.sub_hk k h n2 (S.S n) p20 p1 f2 f1)) => match_Or_prop.match_Or_prop (eq.eq bool.bool (p1 n) true.true) (eq.eq bool.bool (p1 n) false.false) (eq.eq nat.nat (bigop.bigop nat.nat (S.S n) (i0:(sttfa.etap (sttfa.p nat.nat)) => p1 i0) (S.S O.O) times.times (i0:(sttfa.etap (sttfa.p nat.nat)) => f1 i0)) (bigop.bigop nat.nat n2 (i0:(sttfa.etap (sttfa.p nat.nat)) => p20 i0) (S.S O.O) times.times (i0:(sttfa.etap (sttfa.p nat.nat)) => f2 i0))) (p1n:(sttfa.eps (eq.eq bool.bool (p1 n) true.true)) => eq_ind_r.eq_ind_r nat.nat (times.times (f1 n) (bigop.bigop nat.nat n (i0:(sttfa.etap (sttfa.p nat.nat)) => p1 i0) (S.S O.O) times.times (i0:(sttfa.etap (sttfa.p nat.nat)) => f1 i0))) (x:(sttfa.etap (sttfa.p nat.nat)) => eq.eq nat.nat x (bigop.bigop nat.nat n2 (i0:(sttfa.etap (sttfa.p nat.nat)) => p20 i0) (S.S O.O) times.times (i0:(sttfa.etap (sttfa.p nat.nat)) => f2 i0))) (match_And_prop.match_And_prop (And.And (lt.lt (h n) n2) (eq.eq bool.bool (p20 (h n)) true.true)) (eq.eq nat.nat (k (h n)) n) (eq.eq nat.nat (times.times (f1 n) (bigop.bigop nat.nat n (i0:(sttfa.etap (sttfa.p nat.nat)) => p1 i0) (S.S O.O) times.times (i0:(sttfa.etap (sttfa.p nat.nat)) => f1 i0))) (bigop.bigop nat.nat n2 (i0:(sttfa.etap (sttfa.p nat.nat)) => p20 i0) (S.S O.O) times.times (i0:(sttfa.etap (sttfa.p nat.nat)) => f2 i0))) (_clearme3:(sttfa.eps (And.And (lt.lt (h n) n2) (eq.eq bool.bool (p20 (h n)) true.true))) => match_And_prop.match_And_prop (lt.lt (h n) n2) (eq.eq bool.bool (p20 (h n)) true.true) (sttfa.impl (eq.eq nat.nat (k (h n)) n) (eq.eq nat.nat (times.times (f1 n) (bigop.bigop nat.nat n (i0:(sttfa.etap (sttfa.p nat.nat)) => p1 i0) (S.S O.O) times.times (i0:(sttfa.etap (sttfa.p nat.nat)) => f1 i0))) (bigop.bigop nat.nat n2 (i0:(sttfa.etap (sttfa.p nat.nat)) => p20 i0) (S.S O.O) times.times (i0:(sttfa.etap (sttfa.p nat.nat)) => f2 i0)))) (hn:(sttfa.eps (lt.lt (h n) n2)) => p2hn:(sttfa.eps (eq.eq bool.bool (p20 (h n)) true.true)) => eqn:(sttfa.eps (eq.eq nat.nat (k (h n)) n)) => eq_ind_r.eq_ind_r nat.nat (times.times (f2 (h n)) (bigop.bigop nat.nat n2 (x:(sttfa.etap (sttfa.p nat.nat)) => andb.andb (notb.notb (eqb.eqb (h n) x)) (p20 x)) (S.S O.O) times.times (x:(sttfa.etap (sttfa.p nat.nat)) => f2 x))) (x:(sttfa.etap (sttfa.p nat.nat)) => eq.eq nat.nat (times.times (f1 n) (bigop.bigop nat.nat n (i0:(sttfa.etap (sttfa.p nat.nat)) => p1 i0) (S.S O.O) times.times (i0:(sttfa.etap (sttfa.p nat.nat)) => f1 i0))) x) (eq_ind_r.eq_ind_r nat.nat (f2 (h n)) (x:(sttfa.etap (sttfa.p nat.nat)) => eq.eq nat.nat (times.times x (bigop.bigop nat.nat n (i0:(sttfa.etap (sttfa.p nat.nat)) => p1 i0) (S.S O.O) times.times (i0:(sttfa.etap (sttfa.p nat.nat)) => f1 i0))) (times.times (f2 (h n)) (bigop.bigop nat.nat n2 (x0:(sttfa.etap (sttfa.p nat.nat)) => andb.andb (notb.notb (eqb.eqb (h n) x0)) (p20 x0)) (S.S O.O) times.times (x0:(sttfa.etap (sttfa.p nat.nat)) => f2 x0)))) (eq_f.eq_f nat.nat nat.nat (times.times (f2 (h n))) (bigop.bigop nat.nat n (i0:(sttfa.etap (sttfa.p nat.nat)) => p1 i0) (S.S O.O) times.times (i0:(sttfa.etap (sttfa.p nat.nat)) => f1 i0)) (bigop.bigop nat.nat n2 (x:(sttfa.etap (sttfa.p nat.nat)) => andb.andb (notb.notb (eqb.eqb (h n) x)) (p20 x)) (S.S O.O) times.times (x:(sttfa.etap (sttfa.p nat.nat)) => f2 x)) (Hind (__:(sttfa.etap (sttfa.p nat.nat)) => andb.andb (notb.notb (eqb.eqb (h n) __)) (p20 __)) (lt_to_le.lt_to_le n n1 ltn) (i0:(sttfa.etap (sttfa.p nat.nat)) => ltin:(sttfa.eps (lt.lt i0 n)) => p1i:(sttfa.eps (eq.eq bool.bool (p1 i0) true.true)) => match_And_prop.match_And_prop (And.And (lt.lt (h i0) n2) (eq.eq bool.bool (p20 (h i0)) true.true)) (eq.eq nat.nat (k (h i0)) i0) (And.And (And.And (lt.lt (h i0) n2) (eq.eq bool.bool (andb.andb (notb.notb (eqb.eqb (h n) (h i0))) (p20 (h i0))) true.true)) (eq.eq nat.nat (k (h i0)) i0)) (_clearme4:(sttfa.eps (And.And (lt.lt (h i0) n2) (eq.eq bool.bool (p20 (h i0)) true.true))) => match_And_prop.match_And_prop (lt.lt (h i0) n2) (eq.eq bool.bool (p20 (h i0)) true.true) (sttfa.impl (eq.eq nat.nat (k (h i0)) i0) (And.And (And.And (lt.lt (h i0) n2) (eq.eq bool.bool (andb.andb (notb.notb (eqb.eqb (h n) (h i0))) (p20 (h i0))) true.true)) (eq.eq nat.nat (k (h i0)) i0))) (h1i:(sttfa.eps (lt.lt (h i0) n2)) => p2h1i:(sttfa.eps (eq.eq bool.bool (p20 (h i0)) true.true)) => eqi:(sttfa.eps (eq.eq nat.nat (k (h i0)) i0)) => conj.conj (And.And (lt.lt (h i0) n2) (eq.eq bool.bool (andb.andb (notb.notb (eqb.eqb (h n) (h i0))) (p20 (h i0))) true.true)) (eq.eq nat.nat (k (h i0)) i0) (conj.conj (lt.lt (h i0) n2) (eq.eq bool.bool (andb.andb (notb.notb (eqb.eqb (h n) (h i0))) (p20 (h i0))) true.true) h1i (eq_ind_r.eq_ind_r bool.bool false.false (x:(sttfa.etap (sttfa.p bool.bool)) => eq.eq bool.bool (andb.andb (notb.notb x) (p20 (h i0))) true.true) (sym_eq_match_bool_type_false.sym_eq_match_bool_type_false bool.bool false.false true.true (y:(sttfa.etap (sttfa.p bool.bool)) => eq.eq bool.bool (match_bool_type.match_bool_type bool.bool (p20 (h i0)) false.false y) true.true) (sym_eq_match_bool_type_true.sym_eq_match_bool_type_true bool.bool (p20 (h i0)) false.false (y:(sttfa.etap (sttfa.p bool.bool)) => eq.eq bool.bool y true.true) (rewrite_r.rewrite_r bool.bool true.true (__:(sttfa.etap (sttfa.p bool.bool)) => eq.eq bool.bool __ true.true) (refl.refl bool.bool true.true) (p20 (h i0)) p2h1i))) (eqb.eqb (h n) (h i0)) (not_eq_to_eqb_false.not_eq_to_eqb_false (h n) (h i0) (not_to_not.not_to_not (eq.eq nat.nat (h n) (h i0)) (eq.eq nat.nat i0 n) (auto:(sttfa.eps (eq.eq nat.nat (h n) (h i0))) => rewrite_r.rewrite_r nat.nat n (__:(sttfa.etap (sttfa.p nat.nat)) => eq.eq nat.nat __ n) (refl.refl nat.nat n) i0 (rewrite_l.rewrite_l nat.nat (k (h n)) (__:(sttfa.etap (sttfa.p nat.nat)) => eq.eq nat.nat __ n) eqn i0 (rewrite_r.rewrite_r nat.nat (h i0) (__:(sttfa.etap (sttfa.p nat.nat)) => eq.eq nat.nat (k __) i0) eqi (h n) auto))) (lt_to_not_eq.lt_to_not_eq i0 n ltin))))) (rewrite_r.rewrite_r nat.nat i0 (__:(sttfa.etap (sttfa.p nat.nat)) => eq.eq nat.nat __ i0) (refl.refl nat.nat i0) (k (h i0)) eqi)) _clearme4) (sub1 i0 (le_S.le_S (S.S i0) n ltin) p1i)) (j:(sttfa.etap (sttfa.p nat.nat)) => ltj:(sttfa.eps (lt.lt j n2)) => p2j:(sttfa.eps (eq.eq bool.bool (andb.andb (notb.notb (eqb.eqb (h n) j)) (p20 j)) true.true)) => match_And_prop.match_And_prop (And.And (lt.lt (k j) (S.S n)) (eq.eq bool.bool (p1 (k j)) true.true)) (eq.eq nat.nat (h (k j)) j) (And.And (And.And (lt.lt (k j) n) (eq.eq bool.bool (p1 (k j)) true.true)) (eq.eq nat.nat (h (k j)) j)) (_clearme4:(sttfa.eps (And.And (lt.lt (k j) (S.S n)) (eq.eq bool.bool (p1 (k j)) true.true))) => match_And_prop.match_And_prop (lt.lt (k j) (S.S n)) (eq.eq bool.bool (p1 (k j)) true.true) (sttfa.impl (eq.eq nat.nat (h (k j)) j) (And.And (And.And (lt.lt (k j) n) (eq.eq bool.bool (p1 (k j)) true.true)) (eq.eq nat.nat (h (k j)) j))) (ltkj:(sttfa.eps (lt.lt (k j) (S.S n))) => p1kj:(sttfa.eps (eq.eq bool.bool (p1 (k j)) true.true)) => eqj:(sttfa.eps (eq.eq nat.nat (h (k j)) j)) => conj.conj (And.And (lt.lt (k j) n) (eq.eq bool.bool (p1 (k j)) true.true)) (eq.eq nat.nat (h (k j)) j) (conj.conj (lt.lt (k j) n) (eq.eq bool.bool (p1 (k j)) true.true) (match_Or_prop.match_Or_prop (lt.lt (k j) n) (eq.eq nat.nat (k j) n) (lt.lt (k j) n) (auto:(sttfa.eps (lt.lt (k j) n)) => auto) (eqkj:(sttfa.eps (eq.eq nat.nat (k j) n)) => falsity.falsity (lt.lt (k j) n) (eqb_elim.eqb_elim (h n) j (__:(sttfa.etap (sttfa.p bool.bool)) => sttfa.impl (eq.eq bool.bool (andb.andb (notb.notb __) (p20 j)) true.true) False.False) (sym_eq_match_bool_type_true.sym_eq_match_bool_type_true bool.bool false.false true.true (y:(sttfa.etap (sttfa.p bool.bool)) => sttfa.impl (eq.eq nat.nat (h n) j) (sttfa.impl (eq.eq bool.bool (match_bool_type.match_bool_type bool.bool (p20 j) false.false y) true.true) False.False)) (sym_eq_match_bool_type_false.sym_eq_match_bool_type_false bool.bool (p20 j) false.false (y:(sttfa.etap (sttfa.p bool.bool)) => sttfa.impl (eq.eq nat.nat (h n) j) (sttfa.impl (eq.eq bool.bool y true.true) False.False)) (auto:(sttfa.eps (eq.eq nat.nat (h n) j)) => auto':(sttfa.eps (eq.eq bool.bool false.false true.true)) => absurd.absurd (eq.eq bool.bool true.true false.false) (rewrite_r.rewrite_r bool.bool true.true (__:(sttfa.etap (sttfa.p bool.bool)) => eq.eq bool.bool true.true __) (refl.refl bool.bool true.true) false.false auto') not_eq_true_false.not_eq_true_false))) (sym_eq_match_bool_type_false.sym_eq_match_bool_type_false bool.bool false.false true.true (y:(sttfa.etap (sttfa.p bool.bool)) => sttfa.impl (Not.Not (eq.eq nat.nat (h n) j)) (sttfa.impl (eq.eq bool.bool (match_bool_type.match_bool_type bool.bool (p20 j) false.false y) true.true) False.False)) (sym_eq_match_bool_type_true.sym_eq_match_bool_type_true bool.bool (p20 j) false.false (y:(sttfa.etap (sttfa.p bool.bool)) => sttfa.impl (Not.Not (eq.eq nat.nat (h n) j)) (sttfa.impl (eq.eq bool.bool y true.true) False.False)) (auto:(sttfa.eps (Not.Not (eq.eq nat.nat (h n) j))) => auto':(sttfa.eps (eq.eq bool.bool (p20 j) true.true)) => absurd.absurd (eq.eq nat.nat (h n) j) (rewrite_r.rewrite_r nat.nat j (__:(sttfa.etap (sttfa.p nat.nat)) => eq.eq nat.nat __ j) (refl.refl nat.nat j) (h n) (rewrite_l.rewrite_l nat.nat (k j) (__:(sttfa.etap (sttfa.p nat.nat)) => eq.eq nat.nat (h __) j) eqj n eqkj)) auto))) p2j)) (le_to_or_lt_eq.le_to_or_lt_eq (k j) n (le_S_S_to_le.le_S_S_to_le (k j) n ltkj))) (rewrite_r.rewrite_r bool.bool true.true (__:(sttfa.etap (sttfa.p bool.bool)) => eq.eq bool.bool __ true.true) (refl.refl bool.bool true.true) (p1 (k j)) p1kj)) (rewrite_r.rewrite_r nat.nat j (__:(sttfa.etap (sttfa.p nat.nat)) => eq.eq nat.nat __ j) (refl.refl nat.nat j) (h (k j)) eqj)) _clearme4) (sub2 j ltj (andb_true_r.andb_true_r (notb.notb (eqb.eqb (h n) j)) (p20 j) p2j))))) (f1 n) (same n ltn (rewrite_r.rewrite_r bool.bool true.true (__:(sttfa.etap (sttfa.p bool.bool)) => eq.eq bool.bool __ true.true) (refl.refl bool.bool true.true) (p1 n) p1n))) (bigop.bigop nat.nat n2 (x:(sttfa.etap (sttfa.p nat.nat)) => p20 x) (S.S O.O) times.times (x:(sttfa.etap (sttfa.p nat.nat)) => f2 x)) (bigop_diff.bigop_diff p20 f2 (h n) n2 hn (rewrite_r.rewrite_r bool.bool true.true (__:(sttfa.etap (sttfa.p bool.bool)) => eq.eq bool.bool __ true.true) (refl.refl bool.bool true.true) (p20 (h n)) p2hn))) _clearme3) (sub1 n (le_n.le_n (S.S n)) p1n)) (bigop.bigop nat.nat (S.S n) (i0:(sttfa.etap (sttfa.p nat.nat)) => p1 i0) (S.S O.O) times.times (i0:(sttfa.etap (sttfa.p nat.nat)) => f1 i0)) (bigop_Strue.bigop_Strue nat.nat n p1 (S.S O.O) times.times f1 (rewrite_r.rewrite_r bool.bool true.true (__:(sttfa.etap (sttfa.p bool.bool)) => eq.eq bool.bool __ true.true) (refl.refl bool.bool true.true) (p1 n) p1n))) (p1n:(sttfa.eps (eq.eq bool.bool (p1 n) false.false)) => eq_ind_r.eq_ind_r nat.nat (bigop.bigop nat.nat n (i0:(sttfa.etap (sttfa.p nat.nat)) => p1 i0) (S.S O.O) times.times (i0:(sttfa.etap (sttfa.p nat.nat)) => f1 i0)) (x:(sttfa.etap (sttfa.p nat.nat)) => eq.eq nat.nat x (bigop.bigop nat.nat n2 (i0:(sttfa.etap (sttfa.p nat.nat)) => p20 i0) (S.S O.O) times.times (i0:(sttfa.etap (sttfa.p nat.nat)) => f2 i0))) (Hind p20 (lt_to_le.lt_to_le n n1 ltn) (transitive_sub.transitive_sub (x:(sttfa.etap (sttfa.p nat.nat)) => x) (x:(sttfa.etap (sttfa.p nat.nat)) => x) h k n (S.S n) n2 p1 p1 p20 f1 f1 f2 (sub_lt.sub_lt f1 p1 n (S.S n) (le_n_Sn.le_n_Sn n)) sub1) (i0:(sttfa.etap (sttfa.p nat.nat)) => lti:(sttfa.eps (lt.lt i0 n2)) => p2i:(sttfa.eps (eq.eq bool.bool (p20 i0) true.true)) => match_And_prop.match_And_prop (And.And (lt.lt (k i0) (S.S n)) (eq.eq bool.bool (p1 (k i0)) true.true)) (eq.eq nat.nat (h (k i0)) i0) (And.And (And.And (lt.lt (k i0) n) (eq.eq bool.bool (p1 (k i0)) true.true)) (eq.eq nat.nat (h (k i0)) i0)) (_clearme3:(sttfa.eps (And.And (lt.lt (k i0) (S.S n)) (eq.eq bool.bool (p1 (k i0)) true.true))) => match_And_prop.match_And_prop (lt.lt (k i0) (S.S n)) (eq.eq bool.bool (p1 (k i0)) true.true) (sttfa.impl (eq.eq nat.nat (h (k i0)) i0) (And.And (And.And (lt.lt (k i0) n) (eq.eq bool.bool (p1 (k i0)) true.true)) (eq.eq nat.nat (h (k i0)) i0))) (ltki:(sttfa.eps (lt.lt (k i0) (S.S n))) => p1ki:(sttfa.eps (eq.eq bool.bool (p1 (k i0)) true.true)) => eqi:(sttfa.eps (eq.eq nat.nat (h (k i0)) i0)) => conj.conj (And.And (lt.lt (k i0) n) (eq.eq bool.bool (p1 (k i0)) true.true)) (eq.eq nat.nat (h (k i0)) i0) (conj.conj (lt.lt (k i0) n) (eq.eq bool.bool (p1 (k i0)) true.true) (match_Or_prop.match_Or_prop (lt.lt (k i0) n) (eq.eq nat.nat (k i0) n) (lt.lt (k i0) n) (auto:(sttfa.eps (lt.lt (k i0) n)) => auto) (eqki:(sttfa.eps (eq.eq nat.nat (k i0) n)) => falsity.falsity (lt.lt (k i0) n) (absurd.absurd (eq.eq bool.bool true.true false.false) (rewrite_l.rewrite_l bool.bool true.true (__:(sttfa.etap (sttfa.p bool.bool)) => eq.eq bool.bool true.true __) (refl.refl bool.bool true.true) false.false (rewrite_l.rewrite_l bool.bool (p1 n) (__:(sttfa.etap (sttfa.p bool.bool)) => eq.eq bool.bool __ false.false) p1n true.true (rewrite_l.rewrite_l nat.nat (k i0) (__:(sttfa.etap (sttfa.p nat.nat)) => eq.eq bool.bool (p1 __) true.true) p1ki n eqki))) not_eq_true_false.not_eq_true_false)) (le_to_or_lt_eq.le_to_or_lt_eq (k i0) n (le_S_S_to_le.le_S_S_to_le (k i0) n ltki))) (rewrite_r.rewrite_r bool.bool true.true (__:(sttfa.etap (sttfa.p bool.bool)) => eq.eq bool.bool __ true.true) (refl.refl bool.bool true.true) (p1 (k i0)) p1ki)) (rewrite_r.rewrite_r nat.nat i0 (__:(sttfa.etap (sttfa.p nat.nat)) => eq.eq nat.nat __ i0) (refl.refl nat.nat i0) (h (k i0)) eqi)) _clearme3) (sub2 i0 lti p2i))) (bigop.bigop nat.nat (S.S n) (i0:(sttfa.etap (sttfa.p nat.nat)) => p1 i0) (S.S O.O) times.times (i0:(sttfa.etap (sttfa.p nat.nat)) => f1 i0)) (bigop_Sfalse.bigop_Sfalse nat.nat n p1 (S.S O.O) times.times f1 (rewrite_r.rewrite_r bool.bool false.false (__:(sttfa.etap (sttfa.p bool.bool)) => eq.eq bool.bool __ false.false) (refl.refl bool.bool false.false) (p1 n) p1n))) (true_or_false.true_or_false (p1 n))) i p2)) _clearme2) _clearme1) _clearme0) _clearme.

