def monotonic_le_times_r :
  sttfa.eps (sttfa.forall nat.nat (n:(sttfa.etap (sttfa.p nat.nat)) => monotonic.monotonic nat.nat le.le (m:(sttfa.etap (sttfa.p nat.nat)) => times.times n m)))
  :=
  n:(sttfa.etap (sttfa.p nat.nat)) => x:(sttfa.etap (sttfa.p nat.nat)) => y:(sttfa.etap (sttfa.p nat.nat)) => lexy:(sttfa.eps (le.le x y)) => nat_ind.nat_ind (_x_365:(sttfa.etap (sttfa.p nat.nat)) => le.le (times.times _x_365 x) (times.times _x_365 y)) (sym_eq_times.sym_eq_times O.O (z:(sttfa.etap (sttfa.p (sttfa.arrow nat.nat nat.nat))) => le.le (times.times O.O x) (z y)) (sym_eq_times.sym_eq_times O.O (z:(sttfa.etap (sttfa.p (sttfa.arrow nat.nat nat.nat))) => le.le (z x) (filter_nat_type.filter_nat_type (sttfa.arrow nat.nat nat.nat) times_body.times_body O.O y)) (sym_eq_filter_nat_type_O.sym_eq_filter_nat_type_O (sttfa.arrow nat.nat nat.nat) times_body.times_body (z:(sttfa.etap (sttfa.p (sttfa.arrow nat.nat nat.nat))) => le.le (z x) (filter_nat_type.filter_nat_type (sttfa.arrow nat.nat nat.nat) times_body.times_body O.O y)) (sym_eq_filter_nat_type_O.sym_eq_filter_nat_type_O (sttfa.arrow nat.nat nat.nat) times_body.times_body (z:(sttfa.etap (sttfa.p (sttfa.arrow nat.nat nat.nat))) => le.le (times_body.times_body O.O x) (z y)) (sym_eq_times_body_O.sym_eq_times_body_O (z:(sttfa.etap (sttfa.p (sttfa.arrow nat.nat nat.nat))) => le.le (times_body.times_body O.O x) (z y)) (sym_eq_times_body_O.sym_eq_times_body_O (z:(sttfa.etap (sttfa.p (sttfa.arrow nat.nat nat.nat))) => le.le (z x) O.O) (le_O_n.le_O_n O.O))))))) (a:(sttfa.etap (sttfa.p nat.nat)) => lea:(sttfa.eps (le.le (times.times a x) (times.times a y))) => sym_eq_times.sym_eq_times (S.S a) (z:(sttfa.etap (sttfa.p (sttfa.arrow nat.nat nat.nat))) => le.le (times.times (S.S a) x) (z y)) (sym_eq_times.sym_eq_times (S.S a) (z:(sttfa.etap (sttfa.p (sttfa.arrow nat.nat nat.nat))) => le.le (z x) (filter_nat_type.filter_nat_type (sttfa.arrow nat.nat nat.nat) times_body.times_body (S.S a) y)) (sym_eq_filter_nat_type_S.sym_eq_filter_nat_type_S (sttfa.arrow nat.nat nat.nat) times_body.times_body a (z:(sttfa.etap (sttfa.p (sttfa.arrow nat.nat nat.nat))) => le.le (z x) (filter_nat_type.filter_nat_type (sttfa.arrow nat.nat nat.nat) times_body.times_body (S.S a) y)) (sym_eq_filter_nat_type_S.sym_eq_filter_nat_type_S (sttfa.arrow nat.nat nat.nat) times_body.times_body a (z:(sttfa.etap (sttfa.p (sttfa.arrow nat.nat nat.nat))) => le.le (times_body.times_body (S.S a) x) (z y)) (sym_eq_times_body_S.sym_eq_times_body_S a (z:(sttfa.etap (sttfa.p (sttfa.arrow nat.nat nat.nat))) => le.le (times_body.times_body (S.S a) x) (z y)) (sym_eq_times_body_S.sym_eq_times_body_S a (z:(sttfa.etap (sttfa.p (sttfa.arrow nat.nat nat.nat))) => le.le (z x) (plus.plus y (times.times a y))) (le_plus.le_plus x y (times.times a x) (times.times a y) lexy lea))))))) n.

