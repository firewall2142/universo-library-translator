def plus_minus_m_m :
  sttfa.eps (sttfa.forall nat.nat (n:(sttfa.etap (sttfa.p nat.nat)) => sttfa.forall nat.nat (m:(sttfa.etap (sttfa.p nat.nat)) => sttfa.impl (le.le m n) (eq.eq nat.nat n (plus.plus (minus.minus n m) m)))))
  :=
  n:(sttfa.etap (sttfa.p nat.nat)) => m:(sttfa.etap (sttfa.p nat.nat)) => lemn:(sttfa.eps (le.le m n)) => sym_eq.sym_eq nat.nat (plus.plus (minus.minus n m) m) n (eq_coerc.eq_coerc (eq.eq nat.nat (plus.plus (minus.minus n m) m) (minus.minus (plus.plus n m) m)) (eq.eq nat.nat (plus.plus (minus.minus n m) m) n) (plus_minus.plus_minus m n m lemn) (rewrite_r.rewrite_r nat.nat (plus.plus m (minus.minus n m)) (__:(sttfa.etap (sttfa.p nat.nat)) => eq.eq sttfa.bool (eq.eq nat.nat (plus.plus (minus.minus n m) m) (minus.minus (plus.plus n m) m)) (eq.eq nat.nat __ n)) (rewrite_r.rewrite_r nat.nat (plus.plus m (minus.minus n m)) (__:(sttfa.etap (sttfa.p nat.nat)) => eq.eq sttfa.bool (eq.eq nat.nat __ (minus.minus (plus.plus n m) m)) (eq.eq nat.nat (plus.plus m (minus.minus n m)) n)) (rewrite_l.rewrite_l nat.nat n (__:(sttfa.etap (sttfa.p nat.nat)) => eq.eq sttfa.bool (eq.eq nat.nat (plus.plus m (minus.minus n m)) __) (eq.eq nat.nat (plus.plus m (minus.minus n m)) n)) (refl.refl sttfa.bool (eq.eq nat.nat (plus.plus m (minus.minus n m)) n)) (minus.minus (plus.plus n m) m) (minus_plus_m_m.minus_plus_m_m n m)) (plus.plus (minus.minus n m) m) (commutative_plus.commutative_plus (minus.minus n m) m)) (plus.plus (minus.minus n m) m) (commutative_plus.commutative_plus (minus.minus n m) m))).

