def eq_fact_pi_p :
  sttfa.eps (sttfa.forall nat.nat (n:(sttfa.etap (sttfa.p nat.nat)) => eq.eq nat.nat (fact.fact n) (bigop.bigop nat.nat (minus.minus (S.S n) (S.S O.O)) (i:(sttfa.etap (sttfa.p nat.nat)) => true.true) (S.S O.O) times.times (i:(sttfa.etap (sttfa.p nat.nat)) => plus.plus i (S.S O.O)))))
  :=
  n:(sttfa.etap (sttfa.p nat.nat)) => nat_ind.nat_ind (_x_365:(sttfa.etap (sttfa.p nat.nat)) => eq.eq nat.nat (fact.fact _x_365) (bigop.bigop nat.nat (minus.minus (S.S _x_365) (S.S O.O)) (i:(sttfa.etap (sttfa.p nat.nat)) => true.true) (S.S O.O) times.times (i:(sttfa.etap (sttfa.p nat.nat)) => plus.plus i (S.S O.O)))) (sym_eq_minus.sym_eq_minus (S.S O.O) (y:(sttfa.etap (sttfa.p (sttfa.arrow nat.nat nat.nat))) => eq.eq nat.nat (fact.fact O.O) (bigop.bigop nat.nat (y (S.S O.O)) (i:(sttfa.etap (sttfa.p nat.nat)) => true.true) (S.S O.O) times.times (i:(sttfa.etap (sttfa.p nat.nat)) => plus.plus i (S.S O.O)))) (sym_eq_filter_nat_type_S.sym_eq_filter_nat_type_S (sttfa.arrow nat.nat nat.nat) minus_body.minus_body O.O (y:(sttfa.etap (sttfa.p (sttfa.arrow nat.nat nat.nat))) => eq.eq nat.nat (fact.fact O.O) (bigop.bigop nat.nat (y (S.S O.O)) (i:(sttfa.etap (sttfa.p nat.nat)) => true.true) (S.S O.O) times.times (i:(sttfa.etap (sttfa.p nat.nat)) => plus.plus i (S.S O.O)))) (sym_eq_minus_body_S.sym_eq_minus_body_S O.O (y:(sttfa.etap (sttfa.p (sttfa.arrow nat.nat nat.nat))) => eq.eq nat.nat (fact.fact O.O) (bigop.bigop nat.nat (y (S.S O.O)) (i:(sttfa.etap (sttfa.p nat.nat)) => true.true) (S.S O.O) times.times (i:(sttfa.etap (sttfa.p nat.nat)) => plus.plus i (S.S O.O)))) (sym_eq_match_nat_type_S.sym_eq_match_nat_type_S nat.nat (S.S O.O) (q:(sttfa.etap (sttfa.p nat.nat)) => minus.minus O.O q) O.O (y:(sttfa.etap (sttfa.p nat.nat)) => eq.eq nat.nat (fact.fact O.O) (bigop.bigop nat.nat y (i:(sttfa.etap (sttfa.p nat.nat)) => true.true) (S.S O.O) times.times (i:(sttfa.etap (sttfa.p nat.nat)) => plus.plus i (S.S O.O)))) (sym_eq_minus.sym_eq_minus O.O (y:(sttfa.etap (sttfa.p (sttfa.arrow nat.nat nat.nat))) => eq.eq nat.nat (fact.fact O.O) (bigop.bigop nat.nat (y O.O) (i:(sttfa.etap (sttfa.p nat.nat)) => true.true) (S.S O.O) times.times (i:(sttfa.etap (sttfa.p nat.nat)) => plus.plus i (S.S O.O)))) (sym_eq_filter_nat_type_O.sym_eq_filter_nat_type_O (sttfa.arrow nat.nat nat.nat) minus_body.minus_body (y:(sttfa.etap (sttfa.p (sttfa.arrow nat.nat nat.nat))) => eq.eq nat.nat (fact.fact O.O) (bigop.bigop nat.nat (y O.O) (i:(sttfa.etap (sttfa.p nat.nat)) => true.true) (S.S O.O) times.times (i:(sttfa.etap (sttfa.p nat.nat)) => plus.plus i (S.S O.O)))) (sym_eq_minus_body_O.sym_eq_minus_body_O (y:(sttfa.etap (sttfa.p (sttfa.arrow nat.nat nat.nat))) => eq.eq nat.nat (fact.fact O.O) (bigop.bigop nat.nat (y O.O) (i:(sttfa.etap (sttfa.p nat.nat)) => true.true) (S.S O.O) times.times (i:(sttfa.etap (sttfa.p nat.nat)) => plus.plus i (S.S O.O)))) (sym_eq_bigop_O.sym_eq_bigop_O nat.nat (y:(sttfa.etap (sttfa.p (sttfa.arrow (sttfa.arrow nat.nat bool.bool) (sttfa.arrow nat.nat (sttfa.arrow (sttfa.arrow nat.nat (sttfa.arrow nat.nat nat.nat)) (sttfa.arrow (sttfa.arrow nat.nat nat.nat) nat.nat)))))) => eq.eq nat.nat (fact.fact O.O) (y (i:(sttfa.etap (sttfa.p nat.nat)) => true.true) (S.S O.O) times.times (i:(sttfa.etap (sttfa.p nat.nat)) => plus.plus i (S.S O.O)))) (sym_eq_bigop_body_O.sym_eq_bigop_body_O nat.nat (y:(sttfa.etap (sttfa.p (sttfa.arrow (sttfa.arrow nat.nat bool.bool) (sttfa.arrow nat.nat (sttfa.arrow (sttfa.arrow nat.nat (sttfa.arrow nat.nat nat.nat)) (sttfa.arrow (sttfa.arrow nat.nat nat.nat) nat.nat)))))) => eq.eq nat.nat (fact.fact O.O) (y (i:(sttfa.etap (sttfa.p nat.nat)) => true.true) (S.S O.O) times.times (i:(sttfa.etap (sttfa.p nat.nat)) => plus.plus i (S.S O.O)))) (eq_fact_body_O.eq_fact_body_O (y:(sttfa.etap (sttfa.p nat.nat)) => eq.eq nat.nat (fact.fact O.O) y) (eq_filter_nat_type_O.eq_filter_nat_type_O nat.nat fact_body.fact_body (y:(sttfa.etap (sttfa.p nat.nat)) => eq.eq nat.nat (fact.fact O.O) y) (eq_fact.eq_fact O.O (y:(sttfa.etap (sttfa.p nat.nat)) => eq.eq nat.nat (fact.fact O.O) y) (refl.refl nat.nat (fact.fact O.O)))))))))))))) (n1:(sttfa.etap (sttfa.p nat.nat)) => sym_eq_fact.sym_eq_fact (S.S n1) (y:(sttfa.etap (sttfa.p nat.nat)) => sttfa.impl (eq.eq nat.nat (fact.fact n1) (bigop.bigop nat.nat (minus.minus (S.S n1) (S.S O.O)) (i:(sttfa.etap (sttfa.p nat.nat)) => true.true) (S.S O.O) times.times (i:(sttfa.etap (sttfa.p nat.nat)) => plus.plus i (S.S O.O)))) (eq.eq nat.nat y (bigop.bigop nat.nat (minus.minus (S.S (S.S n1)) (S.S O.O)) (i:(sttfa.etap (sttfa.p nat.nat)) => true.true) (S.S O.O) times.times (i:(sttfa.etap (sttfa.p nat.nat)) => plus.plus i (S.S O.O))))) (sym_eq_filter_nat_type_S.sym_eq_filter_nat_type_S nat.nat fact_body.fact_body n1 (y:(sttfa.etap (sttfa.p nat.nat)) => sttfa.impl (eq.eq nat.nat (fact.fact n1) (bigop.bigop nat.nat (minus.minus (S.S n1) (S.S O.O)) (i:(sttfa.etap (sttfa.p nat.nat)) => true.true) (S.S O.O) times.times (i:(sttfa.etap (sttfa.p nat.nat)) => plus.plus i (S.S O.O)))) (eq.eq nat.nat y (bigop.bigop nat.nat (minus.minus (S.S (S.S n1)) (S.S O.O)) (i:(sttfa.etap (sttfa.p nat.nat)) => true.true) (S.S O.O) times.times (i:(sttfa.etap (sttfa.p nat.nat)) => plus.plus i (S.S O.O))))) (sym_eq_fact_body_S.sym_eq_fact_body_S n1 (y:(sttfa.etap (sttfa.p nat.nat)) => sttfa.impl (eq.eq nat.nat (fact.fact n1) (bigop.bigop nat.nat (minus.minus (S.S n1) (S.S O.O)) (i:(sttfa.etap (sttfa.p nat.nat)) => true.true) (S.S O.O) times.times (i:(sttfa.etap (sttfa.p nat.nat)) => plus.plus i (S.S O.O)))) (eq.eq nat.nat y (bigop.bigop nat.nat (minus.minus (S.S (S.S n1)) (S.S O.O)) (i:(sttfa.etap (sttfa.p nat.nat)) => true.true) (S.S O.O) times.times (i:(sttfa.etap (sttfa.p nat.nat)) => plus.plus i (S.S O.O))))) (Hind:(sttfa.eps (eq.eq nat.nat (fact.fact n1) (bigop.bigop nat.nat (minus.minus (S.S n1) (S.S O.O)) (i:(sttfa.etap (sttfa.p nat.nat)) => true.true) (S.S O.O) times.times (i:(sttfa.etap (sttfa.p nat.nat)) => plus.plus i (S.S O.O))))) => eq_ind_r.eq_ind_r nat.nat (times.times (S.S n1) (fact.fact n1)) (x:(sttfa.etap (sttfa.p nat.nat)) => eq.eq nat.nat x (bigop.bigop nat.nat (minus.minus (S.S (S.S n1)) (S.S O.O)) (i:(sttfa.etap (sttfa.p nat.nat)) => true.true) (S.S O.O) times.times (i:(sttfa.etap (sttfa.p nat.nat)) => plus.plus i (S.S O.O)))) (sym_eq_minus.sym_eq_minus (S.S (S.S n1)) (y:(sttfa.etap (sttfa.p (sttfa.arrow nat.nat nat.nat))) => eq.eq nat.nat (times.times (S.S n1) (fact.fact n1)) (bigop.bigop nat.nat (y (S.S O.O)) (i:(sttfa.etap (sttfa.p nat.nat)) => true.true) (S.S O.O) times.times (i:(sttfa.etap (sttfa.p nat.nat)) => plus.plus i (S.S O.O)))) (sym_eq_filter_nat_type_S.sym_eq_filter_nat_type_S (sttfa.arrow nat.nat nat.nat) minus_body.minus_body (S.S n1) (y:(sttfa.etap (sttfa.p (sttfa.arrow nat.nat nat.nat))) => eq.eq nat.nat (times.times (S.S n1) (fact.fact n1)) (bigop.bigop nat.nat (y (S.S O.O)) (i:(sttfa.etap (sttfa.p nat.nat)) => true.true) (S.S O.O) times.times (i:(sttfa.etap (sttfa.p nat.nat)) => plus.plus i (S.S O.O)))) (sym_eq_minus_body_S.sym_eq_minus_body_S (S.S n1) (y:(sttfa.etap (sttfa.p (sttfa.arrow nat.nat nat.nat))) => eq.eq nat.nat (times.times (S.S n1) (fact.fact n1)) (bigop.bigop nat.nat (y (S.S O.O)) (i:(sttfa.etap (sttfa.p nat.nat)) => true.true) (S.S O.O) times.times (i:(sttfa.etap (sttfa.p nat.nat)) => plus.plus i (S.S O.O)))) (sym_eq_match_nat_type_S.sym_eq_match_nat_type_S nat.nat (S.S (S.S n1)) (q:(sttfa.etap (sttfa.p nat.nat)) => minus.minus (S.S n1) q) O.O (y:(sttfa.etap (sttfa.p nat.nat)) => eq.eq nat.nat (times.times (S.S n1) (fact.fact n1)) (bigop.bigop nat.nat y (i:(sttfa.etap (sttfa.p nat.nat)) => true.true) (S.S O.O) times.times (i:(sttfa.etap (sttfa.p nat.nat)) => plus.plus i (S.S O.O)))) (sym_eq_minus.sym_eq_minus (S.S n1) (y:(sttfa.etap (sttfa.p (sttfa.arrow nat.nat nat.nat))) => eq.eq nat.nat (times.times (S.S n1) (fact.fact n1)) (bigop.bigop nat.nat (y O.O) (i:(sttfa.etap (sttfa.p nat.nat)) => true.true) (S.S O.O) times.times (i:(sttfa.etap (sttfa.p nat.nat)) => plus.plus i (S.S O.O)))) (sym_eq_filter_nat_type_S.sym_eq_filter_nat_type_S (sttfa.arrow nat.nat nat.nat) minus_body.minus_body n1 (y:(sttfa.etap (sttfa.p (sttfa.arrow nat.nat nat.nat))) => eq.eq nat.nat (times.times (S.S n1) (fact.fact n1)) (bigop.bigop nat.nat (y O.O) (i:(sttfa.etap (sttfa.p nat.nat)) => true.true) (S.S O.O) times.times (i:(sttfa.etap (sttfa.p nat.nat)) => plus.plus i (S.S O.O)))) (sym_eq_minus_body_S.sym_eq_minus_body_S n1 (y:(sttfa.etap (sttfa.p (sttfa.arrow nat.nat nat.nat))) => eq.eq nat.nat (times.times (S.S n1) (fact.fact n1)) (bigop.bigop nat.nat (y O.O) (i:(sttfa.etap (sttfa.p nat.nat)) => true.true) (S.S O.O) times.times (i:(sttfa.etap (sttfa.p nat.nat)) => plus.plus i (S.S O.O)))) (sym_eq_match_nat_type_O.sym_eq_match_nat_type_O nat.nat (S.S n1) (q:(sttfa.etap (sttfa.p nat.nat)) => minus.minus n1 q) (y:(sttfa.etap (sttfa.p nat.nat)) => eq.eq nat.nat (times.times (S.S n1) (fact.fact n1)) (bigop.bigop nat.nat y (i:(sttfa.etap (sttfa.p nat.nat)) => true.true) (S.S O.O) times.times (i:(sttfa.etap (sttfa.p nat.nat)) => plus.plus i (S.S O.O)))) (eq_ind_r.eq_ind_r nat.nat (times.times (plus.plus n1 (S.S O.O)) (bigop.bigop nat.nat n1 (i:(sttfa.etap (sttfa.p nat.nat)) => true.true) (S.S O.O) times.times (i:(sttfa.etap (sttfa.p nat.nat)) => plus.plus i (S.S O.O)))) (x:(sttfa.etap (sttfa.p nat.nat)) => eq.eq nat.nat (times.times (S.S n1) (fact.fact n1)) x) (eq_ind.eq_ind nat.nat (S.S (plus.plus n1 O.O)) (x_1:(sttfa.etap (sttfa.p nat.nat)) => eq.eq nat.nat (times.times (S.S n1) (fact.fact n1)) (times.times x_1 (bigop.bigop nat.nat n1 (i:(sttfa.etap (sttfa.p nat.nat)) => true.true) (S.S O.O) times.times (i:(sttfa.etap (sttfa.p nat.nat)) => plus.plus i (S.S O.O))))) (eq_ind.eq_ind nat.nat n1 (x_1:(sttfa.etap (sttfa.p nat.nat)) => eq.eq nat.nat (times.times (S.S n1) (fact.fact n1)) (times.times (S.S x_1) (bigop.bigop nat.nat n1 (i:(sttfa.etap (sttfa.p nat.nat)) => true.true) (S.S O.O) times.times (i:(sttfa.etap (sttfa.p nat.nat)) => plus.plus i (S.S O.O))))) (eq_f.eq_f nat.nat nat.nat (times.times (S.S n1)) (fact.fact n1) (bigop.bigop nat.nat n1 (i:(sttfa.etap (sttfa.p nat.nat)) => true.true) (S.S O.O) times.times (i:(sttfa.etap (sttfa.p nat.nat)) => plus.plus i (S.S O.O))) (eq_ind.eq_ind nat.nat (minus.minus (S.S n1) (S.S O.O)) (x_1:(sttfa.etap (sttfa.p nat.nat)) => eq.eq nat.nat (fact.fact n1) (bigop.bigop nat.nat x_1 (i:(sttfa.etap (sttfa.p nat.nat)) => true.true) (S.S O.O) times.times (i:(sttfa.etap (sttfa.p nat.nat)) => plus.plus i (S.S O.O)))) Hind n1 (sym_eq_minus.sym_eq_minus (S.S n1) (y:(sttfa.etap (sttfa.p (sttfa.arrow nat.nat nat.nat))) => eq.eq nat.nat (y (S.S O.O)) n1) (sym_eq_filter_nat_type_S.sym_eq_filter_nat_type_S (sttfa.arrow nat.nat nat.nat) minus_body.minus_body n1 (y:(sttfa.etap (sttfa.p (sttfa.arrow nat.nat nat.nat))) => eq.eq nat.nat (y (S.S O.O)) n1) (sym_eq_minus_body_S.sym_eq_minus_body_S n1 (y:(sttfa.etap (sttfa.p (sttfa.arrow nat.nat nat.nat))) => eq.eq nat.nat (y (S.S O.O)) n1) (sym_eq_match_nat_type_S.sym_eq_match_nat_type_S nat.nat (S.S n1) (q:(sttfa.etap (sttfa.p nat.nat)) => minus.minus n1 q) O.O (y:(sttfa.etap (sttfa.p nat.nat)) => eq.eq nat.nat y n1) (rewrite_l.rewrite_l nat.nat n1 (__:(sttfa.etap (sttfa.p nat.nat)) => eq.eq nat.nat __ n1) (refl.refl nat.nat n1) (minus.minus n1 O.O) (minus_n_O.minus_n_O n1)))))))) (plus.plus n1 O.O) (plus_n_O.plus_n_O n1)) (plus.plus n1 (S.S O.O)) (plus_n_Sm.plus_n_Sm n1 O.O)) (bigop.bigop nat.nat (S.S n1) (i:(sttfa.etap (sttfa.p nat.nat)) => true.true) (S.S O.O) times.times (i:(sttfa.etap (sttfa.p nat.nat)) => plus.plus i (S.S O.O))) (bigop_Strue.bigop_Strue nat.nat n1 (__:(sttfa.etap (sttfa.p nat.nat)) => true.true) (S.S O.O) times.times (__:(sttfa.etap (sttfa.p nat.nat)) => plus.plus __ (S.S O.O)) (refl.refl bool.bool true.true))))))))))) (times.times (fact.fact n1) (S.S n1)) (commutative_times.commutative_times (fact.fact n1) (S.S n1)))))) n.

