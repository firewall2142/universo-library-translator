def bigop_I_gen :
  sttfa.eps (sttfa.forall nat.nat (a:(sttfa.etap (sttfa.p nat.nat)) => sttfa.forall nat.nat (b:(sttfa.etap (sttfa.p nat.nat)) => sttfa.forall (sttfa.arrow nat.nat bool.bool) (p:(sttfa.etap (sttfa.p (sttfa.arrow nat.nat bool.bool))) => sttfa.forall (sttfa.arrow nat.nat nat.nat) (f:(sttfa.etap (sttfa.p (sttfa.arrow nat.nat nat.nat))) => sttfa.impl (le.le a b) (eq.eq nat.nat (bigop.bigop nat.nat (minus.minus b a) (i:(sttfa.etap (sttfa.p nat.nat)) => p (plus.plus i a)) (S.S O.O) times.times (i:(sttfa.etap (sttfa.p nat.nat)) => f (plus.plus i a))) (bigop.bigop nat.nat b (i:(sttfa.etap (sttfa.p nat.nat)) => andb.andb (leb.leb a i) (p i)) (S.S O.O) times.times (i:(sttfa.etap (sttfa.p nat.nat)) => f i))))))))
  :=
  a:(sttfa.etap (sttfa.p nat.nat)) => b:(sttfa.etap (sttfa.p nat.nat)) => nat_ind.nat_ind (_x_365:(sttfa.etap (sttfa.p nat.nat)) => sttfa.forall (sttfa.arrow nat.nat bool.bool) (p:(sttfa.etap (sttfa.p (sttfa.arrow nat.nat bool.bool))) => sttfa.forall (sttfa.arrow nat.nat nat.nat) (f:(sttfa.etap (sttfa.p (sttfa.arrow nat.nat nat.nat))) => sttfa.impl (le.le a _x_365) (eq.eq nat.nat (bigop.bigop nat.nat (minus.minus _x_365 a) (i:(sttfa.etap (sttfa.p nat.nat)) => p (plus.plus i a)) (S.S O.O) times.times (i:(sttfa.etap (sttfa.p nat.nat)) => f (plus.plus i a))) (bigop.bigop nat.nat _x_365 (i:(sttfa.etap (sttfa.p nat.nat)) => andb.andb (leb.leb a i) (p i)) (S.S O.O) times.times (i:(sttfa.etap (sttfa.p nat.nat)) => f i)))))) (p:(sttfa.etap (sttfa.p (sttfa.arrow nat.nat bool.bool))) => f:(sttfa.etap (sttfa.p (sttfa.arrow nat.nat nat.nat))) => sym_eq_bigop_O.sym_eq_bigop_O nat.nat (y:(sttfa.etap (sttfa.p (sttfa.arrow (sttfa.arrow nat.nat bool.bool) (sttfa.arrow nat.nat (sttfa.arrow (sttfa.arrow nat.nat (sttfa.arrow nat.nat nat.nat)) (sttfa.arrow (sttfa.arrow nat.nat nat.nat) nat.nat)))))) => sttfa.impl (le.le a O.O) (eq.eq nat.nat (bigop.bigop nat.nat (minus.minus O.O a) (i:(sttfa.etap (sttfa.p nat.nat)) => p (plus.plus i a)) (S.S O.O) times.times (i:(sttfa.etap (sttfa.p nat.nat)) => f (plus.plus i a))) (y (i:(sttfa.etap (sttfa.p nat.nat)) => andb.andb (leb.leb a i) (p i)) (S.S O.O) times.times (i:(sttfa.etap (sttfa.p nat.nat)) => f i)))) (sym_eq_bigop_body_O.sym_eq_bigop_body_O nat.nat (y:(sttfa.etap (sttfa.p (sttfa.arrow (sttfa.arrow nat.nat bool.bool) (sttfa.arrow nat.nat (sttfa.arrow (sttfa.arrow nat.nat (sttfa.arrow nat.nat nat.nat)) (sttfa.arrow (sttfa.arrow nat.nat nat.nat) nat.nat)))))) => sttfa.impl (le.le a O.O) (eq.eq nat.nat (bigop.bigop nat.nat (minus.minus O.O a) (i:(sttfa.etap (sttfa.p nat.nat)) => p (plus.plus i a)) (S.S O.O) times.times (i:(sttfa.etap (sttfa.p nat.nat)) => f (plus.plus i a))) (y (i:(sttfa.etap (sttfa.p nat.nat)) => andb.andb (leb.leb a i) (p i)) (S.S O.O) times.times (i:(sttfa.etap (sttfa.p nat.nat)) => f i)))) (eq_bigop_body_O.eq_bigop_body_O nat.nat (y:(sttfa.etap (sttfa.p (sttfa.arrow (sttfa.arrow nat.nat bool.bool) (sttfa.arrow nat.nat (sttfa.arrow (sttfa.arrow nat.nat (sttfa.arrow nat.nat nat.nat)) (sttfa.arrow (sttfa.arrow nat.nat nat.nat) nat.nat)))))) => sttfa.impl (le.le a O.O) (eq.eq nat.nat (bigop.bigop nat.nat (minus.minus O.O a) (i:(sttfa.etap (sttfa.p nat.nat)) => p (plus.plus i a)) (S.S O.O) times.times (i:(sttfa.etap (sttfa.p nat.nat)) => f (plus.plus i a))) (y (i:(sttfa.etap (sttfa.p nat.nat)) => p (plus.plus i a)) (S.S O.O) times.times (i:(sttfa.etap (sttfa.p nat.nat)) => f (plus.plus i a))))) (eq_bigop_O.eq_bigop_O nat.nat (y:(sttfa.etap (sttfa.p (sttfa.arrow (sttfa.arrow nat.nat bool.bool) (sttfa.arrow nat.nat (sttfa.arrow (sttfa.arrow nat.nat (sttfa.arrow nat.nat nat.nat)) (sttfa.arrow (sttfa.arrow nat.nat nat.nat) nat.nat)))))) => sttfa.impl (le.le a O.O) (eq.eq nat.nat (bigop.bigop nat.nat (minus.minus O.O a) (i:(sttfa.etap (sttfa.p nat.nat)) => p (plus.plus i a)) (S.S O.O) times.times (i:(sttfa.etap (sttfa.p nat.nat)) => f (plus.plus i a))) (y (i:(sttfa.etap (sttfa.p nat.nat)) => p (plus.plus i a)) (S.S O.O) times.times (i:(sttfa.etap (sttfa.p nat.nat)) => f (plus.plus i a))))) (eq_minus_body_O.eq_minus_body_O (y:(sttfa.etap (sttfa.p (sttfa.arrow nat.nat nat.nat))) => sttfa.impl (le.le a O.O) (eq.eq nat.nat (bigop.bigop nat.nat (minus.minus O.O a) (i:(sttfa.etap (sttfa.p nat.nat)) => p (plus.plus i a)) (S.S O.O) times.times (i:(sttfa.etap (sttfa.p nat.nat)) => f (plus.plus i a))) (bigop.bigop nat.nat (y a) (i:(sttfa.etap (sttfa.p nat.nat)) => p (plus.plus i a)) (S.S O.O) times.times (i:(sttfa.etap (sttfa.p nat.nat)) => f (plus.plus i a))))) (eq_filter_nat_type_O.eq_filter_nat_type_O (sttfa.arrow nat.nat nat.nat) minus_body.minus_body (y:(sttfa.etap (sttfa.p (sttfa.arrow nat.nat nat.nat))) => sttfa.impl (le.le a O.O) (eq.eq nat.nat (bigop.bigop nat.nat (minus.minus O.O a) (i:(sttfa.etap (sttfa.p nat.nat)) => p (plus.plus i a)) (S.S O.O) times.times (i:(sttfa.etap (sttfa.p nat.nat)) => f (plus.plus i a))) (bigop.bigop nat.nat (y a) (i:(sttfa.etap (sttfa.p nat.nat)) => p (plus.plus i a)) (S.S O.O) times.times (i:(sttfa.etap (sttfa.p nat.nat)) => f (plus.plus i a))))) (eq_minus.eq_minus O.O (y:(sttfa.etap (sttfa.p (sttfa.arrow nat.nat nat.nat))) => sttfa.impl (le.le a O.O) (eq.eq nat.nat (bigop.bigop nat.nat (minus.minus O.O a) (i:(sttfa.etap (sttfa.p nat.nat)) => p (plus.plus i a)) (S.S O.O) times.times (i:(sttfa.etap (sttfa.p nat.nat)) => f (plus.plus i a))) (bigop.bigop nat.nat (y a) (i:(sttfa.etap (sttfa.p nat.nat)) => p (plus.plus i a)) (S.S O.O) times.times (i:(sttfa.etap (sttfa.p nat.nat)) => f (plus.plus i a))))) (auto:(sttfa.eps (le.le a O.O)) => refl.refl nat.nat (bigop.bigop nat.nat (minus.minus O.O a) (i:(sttfa.etap (sttfa.p nat.nat)) => p (plus.plus i a)) (S.S O.O) times.times (i:(sttfa.etap (sttfa.p nat.nat)) => f (plus.plus i a))))))))))) (b0:(sttfa.etap (sttfa.p nat.nat)) => Hind:(sttfa.eps (sttfa.forall (sttfa.arrow nat.nat bool.bool) (p:(sttfa.etap (sttfa.p (sttfa.arrow nat.nat bool.bool))) => sttfa.forall (sttfa.arrow nat.nat nat.nat) (f:(sttfa.etap (sttfa.p (sttfa.arrow nat.nat nat.nat))) => sttfa.impl (le.le a b0) (eq.eq nat.nat (bigop.bigop nat.nat (minus.minus b0 a) (i:(sttfa.etap (sttfa.p nat.nat)) => p (plus.plus i a)) (S.S O.O) times.times (i:(sttfa.etap (sttfa.p nat.nat)) => f (plus.plus i a))) (bigop.bigop nat.nat b0 (i:(sttfa.etap (sttfa.p nat.nat)) => andb.andb (leb.leb a i) (p i)) (S.S O.O) times.times (i:(sttfa.etap (sttfa.p nat.nat)) => f i))))))) => p:(sttfa.etap (sttfa.p (sttfa.arrow nat.nat bool.bool))) => f:(sttfa.etap (sttfa.p (sttfa.arrow nat.nat nat.nat))) => lea:(sttfa.eps (le.le a (S.S b0))) => match_Or_prop.match_Or_prop (lt.lt a (S.S b0)) (eq.eq nat.nat a (S.S b0)) (eq.eq nat.nat (bigop.bigop nat.nat (minus.minus (S.S b0) a) (i:(sttfa.etap (sttfa.p nat.nat)) => p (plus.plus i a)) (S.S O.O) times.times (i:(sttfa.etap (sttfa.p nat.nat)) => f (plus.plus i a))) (bigop.bigop nat.nat (S.S b0) (i:(sttfa.etap (sttfa.p nat.nat)) => andb.andb (leb.leb a i) (p i)) (S.S O.O) times.times (i:(sttfa.etap (sttfa.p nat.nat)) => f i))) (Ha:(sttfa.eps (lt.lt a (S.S b0))) => match_Or_prop.match_Or_prop (eq.eq bool.bool (p b0) true.true) (eq.eq bool.bool (p b0) false.false) (eq.eq nat.nat (bigop.bigop nat.nat (minus.minus (S.S b0) a) (i:(sttfa.etap (sttfa.p nat.nat)) => p (plus.plus i a)) (S.S O.O) times.times (i:(sttfa.etap (sttfa.p nat.nat)) => f (plus.plus i a))) (bigop.bigop nat.nat (S.S b0) (i:(sttfa.etap (sttfa.p nat.nat)) => andb.andb (leb.leb a i) (p i)) (S.S O.O) times.times (i:(sttfa.etap (sttfa.p nat.nat)) => f i))) (Hcase:(sttfa.eps (eq.eq bool.bool (p b0) true.true)) => eq_ind_r.eq_ind_r nat.nat (times.times (f b0) (bigop.bigop nat.nat b0 (i:(sttfa.etap (sttfa.p nat.nat)) => andb.andb (leb.leb a i) (p i)) (S.S O.O) times.times (i:(sttfa.etap (sttfa.p nat.nat)) => f i))) (x:(sttfa.etap (sttfa.p nat.nat)) => eq.eq nat.nat (bigop.bigop nat.nat (minus.minus (S.S b0) a) (i:(sttfa.etap (sttfa.p nat.nat)) => p (plus.plus i a)) (S.S O.O) times.times (i:(sttfa.etap (sttfa.p nat.nat)) => f (plus.plus i a))) x) (eq_ind_r.eq_ind_r nat.nat (S.S (minus.minus b0 a)) (x:(sttfa.etap (sttfa.p nat.nat)) => eq.eq nat.nat (bigop.bigop nat.nat x (i:(sttfa.etap (sttfa.p nat.nat)) => p (plus.plus i a)) (S.S O.O) times.times (i:(sttfa.etap (sttfa.p nat.nat)) => f (plus.plus i a))) (times.times (f b0) (bigop.bigop nat.nat b0 (i:(sttfa.etap (sttfa.p nat.nat)) => andb.andb (leb.leb a i) (p i)) (S.S O.O) times.times (i:(sttfa.etap (sttfa.p nat.nat)) => f i)))) (eq_ind_r.eq_ind_r nat.nat (times.times (f (plus.plus (minus.minus b0 a) a)) (bigop.bigop nat.nat (minus.minus b0 a) (i:(sttfa.etap (sttfa.p nat.nat)) => p (plus.plus i a)) (S.S O.O) times.times (i:(sttfa.etap (sttfa.p nat.nat)) => f (plus.plus i a)))) (x:(sttfa.etap (sttfa.p nat.nat)) => eq.eq nat.nat x (times.times (f b0) (bigop.bigop nat.nat b0 (i:(sttfa.etap (sttfa.p nat.nat)) => andb.andb (leb.leb a i) (p i)) (S.S O.O) times.times (i:(sttfa.etap (sttfa.p nat.nat)) => f i)))) (eq_f2.eq_f2 nat.nat nat.nat nat.nat times.times (f (plus.plus (minus.minus b0 a) a)) (f b0) (bigop.bigop nat.nat (minus.minus b0 a) (i:(sttfa.etap (sttfa.p nat.nat)) => p (plus.plus i a)) (S.S O.O) times.times (i:(sttfa.etap (sttfa.p nat.nat)) => f (plus.plus i a))) (bigop.bigop nat.nat b0 (i:(sttfa.etap (sttfa.p nat.nat)) => andb.andb (leb.leb a i) (p i)) (S.S O.O) times.times (i:(sttfa.etap (sttfa.p nat.nat)) => f i)) (eq_f.eq_f nat.nat nat.nat f (plus.plus (minus.minus b0 a) a) b0 (eq_ind.eq_ind nat.nat b0 (x_1:(sttfa.etap (sttfa.p nat.nat)) => eq.eq nat.nat x_1 b0) (refl.refl nat.nat b0) (plus.plus (minus.minus b0 a) a) (plus_minus_m_m.plus_minus_m_m b0 a (le_S_S_to_le.le_S_S_to_le a b0 Ha)))) (Hind p f (le_S_S_to_le.le_S_S_to_le a b0 Ha))) (bigop.bigop nat.nat (S.S (minus.minus b0 a)) (i:(sttfa.etap (sttfa.p nat.nat)) => p (plus.plus i a)) (S.S O.O) times.times (i:(sttfa.etap (sttfa.p nat.nat)) => f (plus.plus i a))) (bigop_Strue.bigop_Strue nat.nat (minus.minus b0 a) (__:(sttfa.etap (sttfa.p nat.nat)) => p (plus.plus __ a)) (S.S O.O) times.times (__:(sttfa.etap (sttfa.p nat.nat)) => f (plus.plus __ a)) (eq_ind.eq_ind nat.nat b0 (x_1:(sttfa.etap (sttfa.p nat.nat)) => eq.eq bool.bool (p x_1) true.true) (rewrite_r.rewrite_r bool.bool true.true (__:(sttfa.etap (sttfa.p bool.bool)) => eq.eq bool.bool __ true.true) (refl.refl bool.bool true.true) (p b0) Hcase) (plus.plus (minus.minus b0 a) a) (plus_minus_m_m.plus_minus_m_m b0 a (le_S_S_to_le.le_S_S_to_le a b0 Ha))))) (minus.minus (S.S b0) a) (match_nat_prop.match_nat_prop (__:(sttfa.etap (sttfa.p nat.nat)) => sttfa.impl (le.le __ b0) (eq.eq nat.nat (minus.minus (S.S b0) __) (S.S (minus.minus b0 __)))) (auto:(sttfa.eps (le.le O.O b0)) => rewrite_l.rewrite_l nat.nat (S.S b0) (__:(sttfa.etap (sttfa.p nat.nat)) => eq.eq nat.nat __ (S.S (minus.minus b0 O.O))) (rewrite_l.rewrite_l nat.nat b0 (__:(sttfa.etap (sttfa.p nat.nat)) => eq.eq nat.nat (S.S b0) (S.S __)) (refl.refl nat.nat (S.S b0)) (minus.minus b0 O.O) (minus_n_O.minus_n_O b0)) (minus.minus (S.S b0) O.O) (minus_n_O.minus_n_O (S.S b0))) (sym_eq_minus.sym_eq_minus (S.S b0) (y:(sttfa.etap (sttfa.p (sttfa.arrow nat.nat nat.nat))) => sttfa.forall nat.nat (n:(sttfa.etap (sttfa.p nat.nat)) => sttfa.impl (le.le (S.S n) b0) (eq.eq nat.nat (y (S.S n)) (S.S (minus.minus b0 (S.S n)))))) (sym_eq_filter_nat_type_S.sym_eq_filter_nat_type_S (sttfa.arrow nat.nat nat.nat) minus_body.minus_body b0 (y:(sttfa.etap (sttfa.p (sttfa.arrow nat.nat nat.nat))) => sttfa.forall nat.nat (n:(sttfa.etap (sttfa.p nat.nat)) => sttfa.impl (le.le (S.S n) b0) (eq.eq nat.nat (y (S.S n)) (S.S (minus.minus b0 (S.S n)))))) (a1:(sttfa.etap (sttfa.p nat.nat)) => sym_eq_minus_body_S.sym_eq_minus_body_S b0 (y:(sttfa.etap (sttfa.p (sttfa.arrow nat.nat nat.nat))) => sttfa.impl (le.le (S.S a1) b0) (eq.eq nat.nat (y (S.S a1)) (S.S (minus.minus b0 (S.S a1))))) (sym_eq_match_nat_type_S.sym_eq_match_nat_type_S nat.nat (S.S b0) (q:(sttfa.etap (sttfa.p nat.nat)) => minus.minus b0 q) a1 (y:(sttfa.etap (sttfa.p nat.nat)) => sttfa.impl (le.le (S.S a1) b0) (eq.eq nat.nat y (S.S (minus.minus b0 (S.S a1))))) (lta1:(sttfa.eps (le.le (S.S a1) b0)) => eq_ind_r.eq_ind_r nat.nat (pred.pred (minus.minus b0 a1)) (x:(sttfa.etap (sttfa.p nat.nat)) => eq.eq nat.nat (minus.minus b0 a1) (S.S x)) (eq_ind_r.eq_ind_r nat.nat (minus.minus b0 a1) (x:(sttfa.etap (sttfa.p nat.nat)) => eq.eq nat.nat (minus.minus b0 a1) x) (refl.refl nat.nat (minus.minus b0 a1)) (S.S (pred.pred (minus.minus b0 a1))) (S_pred.S_pred (minus.minus b0 a1) (lt_plus_to_minus_r.lt_plus_to_minus_r O.O a1 b0 (sym_eq_plus.sym_eq_plus O.O (y:(sttfa.etap (sttfa.p (sttfa.arrow nat.nat nat.nat))) => le.le (S.S (y a1)) b0) (sym_eq_filter_nat_type_O.sym_eq_filter_nat_type_O (sttfa.arrow nat.nat nat.nat) plus_body.plus_body (y:(sttfa.etap (sttfa.p (sttfa.arrow nat.nat nat.nat))) => le.le (S.S (y a1)) b0) (sym_eq_plus_body_O.sym_eq_plus_body_O (y:(sttfa.etap (sttfa.p (sttfa.arrow nat.nat nat.nat))) => le.le (S.S (y a1)) b0) lta1)))))) (minus.minus b0 (S.S a1)) (eq_minus_S_pred.eq_minus_S_pred b0 a1)))))) a (le_S_S_to_le.le_S_S_to_le a b0 Ha))) (bigop.bigop nat.nat (S.S b0) (i:(sttfa.etap (sttfa.p nat.nat)) => andb.andb (leb.leb a i) (p i)) (S.S O.O) times.times (i:(sttfa.etap (sttfa.p nat.nat)) => f i)) (bigop_Strue.bigop_Strue nat.nat b0 (__:(sttfa.etap (sttfa.p nat.nat)) => andb.andb (leb.leb a __) (p __)) (S.S O.O) times.times f (eq_ind_r.eq_ind_r bool.bool true.true (x:(sttfa.etap (sttfa.p bool.bool)) => eq.eq bool.bool (andb.andb (leb.leb a b0) x) true.true) (eq_ind_r.eq_ind_r bool.bool true.true (x:(sttfa.etap (sttfa.p bool.bool)) => eq.eq bool.bool (andb.andb x true.true) true.true) (eq_match_bool_type_true.eq_match_bool_type_true bool.bool true.true false.false (y:(sttfa.etap (sttfa.p bool.bool)) => eq.eq bool.bool (match_bool_type.match_bool_type bool.bool true.true false.false true.true) y) (refl.refl bool.bool (andb.andb true.true true.true))) (leb.leb a b0) (le_to_leb_true.le_to_leb_true a b0 (le_S_S_to_le.le_S_S_to_le a b0 Ha))) (p b0) Hcase))) (Hcase:(sttfa.eps (eq.eq bool.bool (p b0) false.false)) => eq_ind_r.eq_ind_r nat.nat (bigop.bigop nat.nat b0 (i:(sttfa.etap (sttfa.p nat.nat)) => andb.andb (leb.leb a i) (p i)) (S.S O.O) times.times (i:(sttfa.etap (sttfa.p nat.nat)) => f i)) (x:(sttfa.etap (sttfa.p nat.nat)) => eq.eq nat.nat (bigop.bigop nat.nat (minus.minus (S.S b0) a) (i:(sttfa.etap (sttfa.p nat.nat)) => p (plus.plus i a)) (S.S O.O) times.times (i:(sttfa.etap (sttfa.p nat.nat)) => f (plus.plus i a))) x) (eq_ind_r.eq_ind_r nat.nat (S.S (minus.minus b0 a)) (x:(sttfa.etap (sttfa.p nat.nat)) => eq.eq nat.nat (bigop.bigop nat.nat x (i:(sttfa.etap (sttfa.p nat.nat)) => p (plus.plus i a)) (S.S O.O) times.times (i:(sttfa.etap (sttfa.p nat.nat)) => f (plus.plus i a))) (bigop.bigop nat.nat b0 (i:(sttfa.etap (sttfa.p nat.nat)) => andb.andb (leb.leb a i) (p i)) (S.S O.O) times.times (i:(sttfa.etap (sttfa.p nat.nat)) => f i))) (eq_ind_r.eq_ind_r nat.nat (bigop.bigop nat.nat (minus.minus b0 a) (i:(sttfa.etap (sttfa.p nat.nat)) => p (plus.plus i a)) (S.S O.O) times.times (i:(sttfa.etap (sttfa.p nat.nat)) => f (plus.plus i a))) (x:(sttfa.etap (sttfa.p nat.nat)) => eq.eq nat.nat x (bigop.bigop nat.nat b0 (i:(sttfa.etap (sttfa.p nat.nat)) => andb.andb (leb.leb a i) (p i)) (S.S O.O) times.times (i:(sttfa.etap (sttfa.p nat.nat)) => f i))) (Hind p f (le_S_S_to_le.le_S_S_to_le a b0 Ha)) (bigop.bigop nat.nat (S.S (minus.minus b0 a)) (i:(sttfa.etap (sttfa.p nat.nat)) => p (plus.plus i a)) (S.S O.O) times.times (i:(sttfa.etap (sttfa.p nat.nat)) => f (plus.plus i a))) (bigop_Sfalse.bigop_Sfalse nat.nat (minus.minus b0 a) (__:(sttfa.etap (sttfa.p nat.nat)) => p (plus.plus __ a)) (S.S O.O) times.times (__:(sttfa.etap (sttfa.p nat.nat)) => f (plus.plus __ a)) (eq_ind.eq_ind nat.nat b0 (x_1:(sttfa.etap (sttfa.p nat.nat)) => eq.eq bool.bool (p x_1) false.false) (rewrite_r.rewrite_r bool.bool false.false (__:(sttfa.etap (sttfa.p bool.bool)) => eq.eq bool.bool __ false.false) (refl.refl bool.bool false.false) (p b0) Hcase) (plus.plus (minus.minus b0 a) a) (plus_minus_m_m.plus_minus_m_m b0 a (le_S_S_to_le.le_S_S_to_le a b0 Ha))))) (minus.minus (S.S b0) a) (match_nat_prop.match_nat_prop (__:(sttfa.etap (sttfa.p nat.nat)) => sttfa.impl (le.le __ b0) (eq.eq nat.nat (minus.minus (S.S b0) __) (S.S (minus.minus b0 __)))) (auto:(sttfa.eps (le.le O.O b0)) => rewrite_l.rewrite_l nat.nat (S.S b0) (__:(sttfa.etap (sttfa.p nat.nat)) => eq.eq nat.nat __ (S.S (minus.minus b0 O.O))) (rewrite_l.rewrite_l nat.nat b0 (__:(sttfa.etap (sttfa.p nat.nat)) => eq.eq nat.nat (S.S b0) (S.S __)) (refl.refl nat.nat (S.S b0)) (minus.minus b0 O.O) (minus_n_O.minus_n_O b0)) (minus.minus (S.S b0) O.O) (minus_n_O.minus_n_O (S.S b0))) (sym_eq_minus.sym_eq_minus (S.S b0) (y:(sttfa.etap (sttfa.p (sttfa.arrow nat.nat nat.nat))) => sttfa.forall nat.nat (n:(sttfa.etap (sttfa.p nat.nat)) => sttfa.impl (le.le (S.S n) b0) (eq.eq nat.nat (y (S.S n)) (S.S (minus.minus b0 (S.S n)))))) (sym_eq_filter_nat_type_S.sym_eq_filter_nat_type_S (sttfa.arrow nat.nat nat.nat) minus_body.minus_body b0 (y:(sttfa.etap (sttfa.p (sttfa.arrow nat.nat nat.nat))) => sttfa.forall nat.nat (n:(sttfa.etap (sttfa.p nat.nat)) => sttfa.impl (le.le (S.S n) b0) (eq.eq nat.nat (y (S.S n)) (S.S (minus.minus b0 (S.S n)))))) (a1:(sttfa.etap (sttfa.p nat.nat)) => sym_eq_minus_body_S.sym_eq_minus_body_S b0 (y:(sttfa.etap (sttfa.p (sttfa.arrow nat.nat nat.nat))) => sttfa.impl (le.le (S.S a1) b0) (eq.eq nat.nat (y (S.S a1)) (S.S (minus.minus b0 (S.S a1))))) (sym_eq_match_nat_type_S.sym_eq_match_nat_type_S nat.nat (S.S b0) (q:(sttfa.etap (sttfa.p nat.nat)) => minus.minus b0 q) a1 (y:(sttfa.etap (sttfa.p nat.nat)) => sttfa.impl (le.le (S.S a1) b0) (eq.eq nat.nat y (S.S (minus.minus b0 (S.S a1))))) (lta1:(sttfa.eps (le.le (S.S a1) b0)) => eq_ind_r.eq_ind_r nat.nat (pred.pred (minus.minus b0 a1)) (x:(sttfa.etap (sttfa.p nat.nat)) => eq.eq nat.nat (minus.minus b0 a1) (S.S x)) (eq_ind_r.eq_ind_r nat.nat (minus.minus b0 a1) (x:(sttfa.etap (sttfa.p nat.nat)) => eq.eq nat.nat (minus.minus b0 a1) x) (refl.refl nat.nat (minus.minus b0 a1)) (S.S (pred.pred (minus.minus b0 a1))) (S_pred.S_pred (minus.minus b0 a1) (lt_plus_to_minus_r.lt_plus_to_minus_r O.O a1 b0 (sym_eq_plus.sym_eq_plus O.O (y:(sttfa.etap (sttfa.p (sttfa.arrow nat.nat nat.nat))) => le.le (S.S (y a1)) b0) (sym_eq_filter_nat_type_O.sym_eq_filter_nat_type_O (sttfa.arrow nat.nat nat.nat) plus_body.plus_body (y:(sttfa.etap (sttfa.p (sttfa.arrow nat.nat nat.nat))) => le.le (S.S (y a1)) b0) (sym_eq_plus_body_O.sym_eq_plus_body_O (y:(sttfa.etap (sttfa.p (sttfa.arrow nat.nat nat.nat))) => le.le (S.S (y a1)) b0) lta1)))))) (minus.minus b0 (S.S a1)) (eq_minus_S_pred.eq_minus_S_pred b0 a1)))))) a (le_S_S_to_le.le_S_S_to_le a b0 Ha))) (bigop.bigop nat.nat (S.S b0) (i:(sttfa.etap (sttfa.p nat.nat)) => andb.andb (leb.leb a i) (p i)) (S.S O.O) times.times (i:(sttfa.etap (sttfa.p nat.nat)) => f i)) (bigop_Sfalse.bigop_Sfalse nat.nat b0 (__:(sttfa.etap (sttfa.p nat.nat)) => andb.andb (leb.leb a __) (p __)) (S.S O.O) times.times f (eq_ind_r.eq_ind_r bool.bool false.false (x:(sttfa.etap (sttfa.p bool.bool)) => eq.eq bool.bool (andb.andb (leb.leb a b0) x) false.false) (match_bool_prop.match_bool_prop (__:(sttfa.etap (sttfa.p bool.bool)) => eq.eq bool.bool (andb.andb __ false.false) false.false) (eq_match_bool_type_true.eq_match_bool_type_true bool.bool false.false false.false (y:(sttfa.etap (sttfa.p bool.bool)) => eq.eq bool.bool (match_bool_type.match_bool_type bool.bool false.false false.false true.true) y) (refl.refl bool.bool (andb.andb true.true false.false))) (eq_match_bool_type_false.eq_match_bool_type_false bool.bool false.false false.false (y:(sttfa.etap (sttfa.p bool.bool)) => eq.eq bool.bool (match_bool_type.match_bool_type bool.bool false.false false.false false.false) y) (refl.refl bool.bool (andb.andb false.false false.false))) (leb.leb a b0)) (p b0) Hcase))) (true_or_false.true_or_false (p b0))) (Ha:(sttfa.eps (eq.eq nat.nat a (S.S b0))) => eq_ind.eq_ind nat.nat a (x_1:(sttfa.etap (sttfa.p nat.nat)) => eq.eq nat.nat (bigop.bigop nat.nat (minus.minus x_1 a) (i:(sttfa.etap (sttfa.p nat.nat)) => p (plus.plus i a)) (S.S O.O) times.times (i:(sttfa.etap (sttfa.p nat.nat)) => f (plus.plus i a))) (bigop.bigop nat.nat x_1 (i:(sttfa.etap (sttfa.p nat.nat)) => andb.andb (leb.leb a i) (p i)) (S.S O.O) times.times (i:(sttfa.etap (sttfa.p nat.nat)) => f i))) (eq_ind.eq_ind nat.nat O.O (x_1:(sttfa.etap (sttfa.p nat.nat)) => eq.eq nat.nat (bigop.bigop nat.nat x_1 (i:(sttfa.etap (sttfa.p nat.nat)) => p (plus.plus i a)) (S.S O.O) times.times (i:(sttfa.etap (sttfa.p nat.nat)) => f (plus.plus i a))) (bigop.bigop nat.nat a (i:(sttfa.etap (sttfa.p nat.nat)) => andb.andb (leb.leb a i) (p i)) (S.S O.O) times.times (i:(sttfa.etap (sttfa.p nat.nat)) => f i))) (sym_eq_bigop_O.sym_eq_bigop_O nat.nat (y:(sttfa.etap (sttfa.p (sttfa.arrow (sttfa.arrow nat.nat bool.bool) (sttfa.arrow nat.nat (sttfa.arrow (sttfa.arrow nat.nat (sttfa.arrow nat.nat nat.nat)) (sttfa.arrow (sttfa.arrow nat.nat nat.nat) nat.nat)))))) => eq.eq nat.nat (y (i:(sttfa.etap (sttfa.p nat.nat)) => p (plus.plus i a)) (S.S O.O) times.times (i:(sttfa.etap (sttfa.p nat.nat)) => f (plus.plus i a))) (bigop.bigop nat.nat a (i:(sttfa.etap (sttfa.p nat.nat)) => andb.andb (leb.leb a i) (p i)) (S.S O.O) times.times (i:(sttfa.etap (sttfa.p nat.nat)) => f i))) (sym_eq_bigop_body_O.sym_eq_bigop_body_O nat.nat (y:(sttfa.etap (sttfa.p (sttfa.arrow (sttfa.arrow nat.nat bool.bool) (sttfa.arrow nat.nat (sttfa.arrow (sttfa.arrow nat.nat (sttfa.arrow nat.nat nat.nat)) (sttfa.arrow (sttfa.arrow nat.nat nat.nat) nat.nat)))))) => eq.eq nat.nat (y (i:(sttfa.etap (sttfa.p nat.nat)) => p (plus.plus i a)) (S.S O.O) times.times (i:(sttfa.etap (sttfa.p nat.nat)) => f (plus.plus i a))) (bigop.bigop nat.nat a (i:(sttfa.etap (sttfa.p nat.nat)) => andb.andb (leb.leb a i) (p i)) (S.S O.O) times.times (i:(sttfa.etap (sttfa.p nat.nat)) => f i))) (eq_ind.eq_ind nat.nat (bigop.bigop nat.nat a (i:(sttfa.etap (sttfa.p nat.nat)) => false.false) (S.S O.O) times.times (i:(sttfa.etap (sttfa.p nat.nat)) => f i)) (x_1:(sttfa.etap (sttfa.p nat.nat)) => eq.eq nat.nat x_1 (bigop.bigop nat.nat a (i:(sttfa.etap (sttfa.p nat.nat)) => andb.andb (leb.leb a i) (p i)) (S.S O.O) times.times (i:(sttfa.etap (sttfa.p nat.nat)) => f i))) (same_bigop.same_bigop nat.nat a (__:(sttfa.etap (sttfa.p nat.nat)) => false.false) (__:(sttfa.etap (sttfa.p nat.nat)) => andb.andb (leb.leb a __) (p __)) (S.S O.O) times.times f f (i:(sttfa.etap (sttfa.p nat.nat)) => ltia:(sttfa.eps (lt.lt i a)) => eq_ind_r.eq_ind_r bool.bool false.false (x:(sttfa.etap (sttfa.p bool.bool)) => eq.eq bool.bool false.false (andb.andb x (p i))) (sym_eq_match_bool_type_false.sym_eq_match_bool_type_false bool.bool (p i) false.false (y:(sttfa.etap (sttfa.p bool.bool)) => eq.eq bool.bool false.false y) (refl.refl bool.bool false.false)) (leb.leb a i) (not_le_to_leb_false.not_le_to_leb_false a i (lt_to_not_le.lt_to_not_le i a ltia))) (i:(sttfa.etap (sttfa.p nat.nat)) => auto:(sttfa.eps (lt.lt i a)) => auto':(sttfa.eps (eq.eq bool.bool false.false true.true)) => refl.refl nat.nat (f i))) (S.S O.O) (bigop_false.bigop_false nat.nat a (S.S O.O) times.times f)))) (minus.minus a a) (minus_n_n.minus_n_n a)) (S.S b0) Ha) (le_to_or_lt_eq.le_to_or_lt_eq a (S.S b0) lea)) b.

