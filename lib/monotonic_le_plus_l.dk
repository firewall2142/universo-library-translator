def monotonic_le_plus_l :
  sttfa.eps (sttfa.forall nat.nat (m:(sttfa.etap (sttfa.p nat.nat)) => monotonic.monotonic nat.nat le.le (n:(sttfa.etap (sttfa.p nat.nat)) => plus.plus n m)))
  :=
  m:(sttfa.etap (sttfa.p nat.nat)) => x:(sttfa.etap (sttfa.p nat.nat)) => y:(sttfa.etap (sttfa.p nat.nat)) => auto:(sttfa.eps (le.le x y)) => eq_coerc.eq_coerc (le.le (plus.plus m x) (plus.plus m y)) (le.le (plus.plus x m) (plus.plus y m)) (monotonic_le_plus_r.monotonic_le_plus_r m x y auto) (rewrite_r.rewrite_r nat.nat (plus.plus m x) (__:(sttfa.etap (sttfa.p nat.nat)) => eq.eq sttfa.bool (le.le (plus.plus m x) (plus.plus m y)) (le.le __ (plus.plus y m))) (rewrite_r.rewrite_r nat.nat (plus.plus m y) (__:(sttfa.etap (sttfa.p nat.nat)) => eq.eq sttfa.bool (le.le (plus.plus m x) (plus.plus m y)) (le.le (plus.plus m x) __)) (refl.refl sttfa.bool (le.le (plus.plus m x) (plus.plus m y))) (plus.plus y m) (commutative_plus.commutative_plus y m)) (plus.plus x m) (commutative_plus.commutative_plus x m)).

