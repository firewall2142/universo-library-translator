def exp_pi_l :
  sttfa.eps (sttfa.forall nat.nat (n:(sttfa.etap (sttfa.p nat.nat)) => sttfa.forall nat.nat (a:(sttfa.etap (sttfa.p nat.nat)) => sttfa.forall (sttfa.arrow nat.nat nat.nat) (f:(sttfa.etap (sttfa.p (sttfa.arrow nat.nat nat.nat))) => eq.eq nat.nat (times.times (exp.exp a n) (bigop.bigop nat.nat n (i:(sttfa.etap (sttfa.p nat.nat)) => true.true) (S.S O.O) times.times (i:(sttfa.etap (sttfa.p nat.nat)) => f i))) (bigop.bigop nat.nat n (i:(sttfa.etap (sttfa.p nat.nat)) => true.true) (S.S O.O) times.times (i:(sttfa.etap (sttfa.p nat.nat)) => times.times a (f i)))))))
  :=
  n:(sttfa.etap (sttfa.p nat.nat)) => a:(sttfa.etap (sttfa.p nat.nat)) => f:(sttfa.etap (sttfa.p (sttfa.arrow nat.nat nat.nat))) => nat_ind.nat_ind (_x_365:(sttfa.etap (sttfa.p nat.nat)) => eq.eq nat.nat (times.times (exp.exp a _x_365) (bigop.bigop nat.nat _x_365 (i:(sttfa.etap (sttfa.p nat.nat)) => true.true) (S.S O.O) times.times (i:(sttfa.etap (sttfa.p nat.nat)) => f i))) (bigop.bigop nat.nat _x_365 (i:(sttfa.etap (sttfa.p nat.nat)) => true.true) (S.S O.O) times.times (i:(sttfa.etap (sttfa.p nat.nat)) => times.times a (f i)))) (sym_eq_bigop_O.sym_eq_bigop_O nat.nat (y:(sttfa.etap (sttfa.p (sttfa.arrow (sttfa.arrow nat.nat bool.bool) (sttfa.arrow nat.nat (sttfa.arrow (sttfa.arrow nat.nat (sttfa.arrow nat.nat nat.nat)) (sttfa.arrow (sttfa.arrow nat.nat nat.nat) nat.nat)))))) => eq.eq nat.nat (times.times (exp.exp a O.O) (bigop.bigop nat.nat O.O (i:(sttfa.etap (sttfa.p nat.nat)) => true.true) (S.S O.O) times.times (i:(sttfa.etap (sttfa.p nat.nat)) => f i))) (y (i:(sttfa.etap (sttfa.p nat.nat)) => true.true) (S.S O.O) times.times (i:(sttfa.etap (sttfa.p nat.nat)) => times.times a (f i)))) (sym_eq_bigop_body_O.sym_eq_bigop_body_O nat.nat (y:(sttfa.etap (sttfa.p (sttfa.arrow (sttfa.arrow nat.nat bool.bool) (sttfa.arrow nat.nat (sttfa.arrow (sttfa.arrow nat.nat (sttfa.arrow nat.nat nat.nat)) (sttfa.arrow (sttfa.arrow nat.nat nat.nat) nat.nat)))))) => eq.eq nat.nat (times.times (exp.exp a O.O) (bigop.bigop nat.nat O.O (i:(sttfa.etap (sttfa.p nat.nat)) => true.true) (S.S O.O) times.times (i:(sttfa.etap (sttfa.p nat.nat)) => f i))) (y (i:(sttfa.etap (sttfa.p nat.nat)) => true.true) (S.S O.O) times.times (i:(sttfa.etap (sttfa.p nat.nat)) => times.times a (f i)))) (eq_times_body_O.eq_times_body_O (y:(sttfa.etap (sttfa.p (sttfa.arrow nat.nat nat.nat))) => eq.eq nat.nat (times.times (exp.exp a O.O) (bigop.bigop nat.nat O.O (i:(sttfa.etap (sttfa.p nat.nat)) => true.true) (S.S O.O) times.times (i:(sttfa.etap (sttfa.p nat.nat)) => f i))) (S.S (y (S.S O.O)))) (eq_filter_nat_type_O.eq_filter_nat_type_O (sttfa.arrow nat.nat nat.nat) times_body.times_body (y:(sttfa.etap (sttfa.p (sttfa.arrow nat.nat nat.nat))) => eq.eq nat.nat (times.times (exp.exp a O.O) (bigop.bigop nat.nat O.O (i:(sttfa.etap (sttfa.p nat.nat)) => true.true) (S.S O.O) times.times (i:(sttfa.etap (sttfa.p nat.nat)) => f i))) (S.S (y (S.S O.O)))) (eq_times.eq_times O.O (y:(sttfa.etap (sttfa.p (sttfa.arrow nat.nat nat.nat))) => eq.eq nat.nat (times.times (exp.exp a O.O) (bigop.bigop nat.nat O.O (i:(sttfa.etap (sttfa.p nat.nat)) => true.true) (S.S O.O) times.times (i:(sttfa.etap (sttfa.p nat.nat)) => f i))) (S.S (y (S.S O.O)))) (eq_plus_body_O.eq_plus_body_O (y:(sttfa.etap (sttfa.p (sttfa.arrow nat.nat nat.nat))) => eq.eq nat.nat (times.times (exp.exp a O.O) (bigop.bigop nat.nat O.O (i:(sttfa.etap (sttfa.p nat.nat)) => true.true) (S.S O.O) times.times (i:(sttfa.etap (sttfa.p nat.nat)) => f i))) (S.S (y (times.times O.O (S.S O.O))))) (eq_filter_nat_type_O.eq_filter_nat_type_O (sttfa.arrow nat.nat nat.nat) plus_body.plus_body (y:(sttfa.etap (sttfa.p (sttfa.arrow nat.nat nat.nat))) => eq.eq nat.nat (times.times (exp.exp a O.O) (bigop.bigop nat.nat O.O (i:(sttfa.etap (sttfa.p nat.nat)) => true.true) (S.S O.O) times.times (i:(sttfa.etap (sttfa.p nat.nat)) => f i))) (S.S (y (times.times O.O (S.S O.O))))) (eq_plus.eq_plus O.O (y:(sttfa.etap (sttfa.p (sttfa.arrow nat.nat nat.nat))) => eq.eq nat.nat (times.times (exp.exp a O.O) (bigop.bigop nat.nat O.O (i:(sttfa.etap (sttfa.p nat.nat)) => true.true) (S.S O.O) times.times (i:(sttfa.etap (sttfa.p nat.nat)) => f i))) (S.S (y (times.times O.O (S.S O.O))))) (eq_plus_body_S.eq_plus_body_S O.O (y:(sttfa.etap (sttfa.p (sttfa.arrow nat.nat nat.nat))) => eq.eq nat.nat (times.times (exp.exp a O.O) (bigop.bigop nat.nat O.O (i:(sttfa.etap (sttfa.p nat.nat)) => true.true) (S.S O.O) times.times (i:(sttfa.etap (sttfa.p nat.nat)) => f i))) (y (times.times O.O (S.S O.O)))) (eq_filter_nat_type_S.eq_filter_nat_type_S (sttfa.arrow nat.nat nat.nat) plus_body.plus_body O.O (y:(sttfa.etap (sttfa.p (sttfa.arrow nat.nat nat.nat))) => eq.eq nat.nat (times.times (exp.exp a O.O) (bigop.bigop nat.nat O.O (i:(sttfa.etap (sttfa.p nat.nat)) => true.true) (S.S O.O) times.times (i:(sttfa.etap (sttfa.p nat.nat)) => f i))) (y (times.times O.O (S.S O.O)))) (eq_plus.eq_plus (S.S O.O) (y:(sttfa.etap (sttfa.p (sttfa.arrow nat.nat nat.nat))) => eq.eq nat.nat (times.times (exp.exp a O.O) (bigop.bigop nat.nat O.O (i:(sttfa.etap (sttfa.p nat.nat)) => true.true) (S.S O.O) times.times (i:(sttfa.etap (sttfa.p nat.nat)) => f i))) (y (times.times O.O (S.S O.O)))) (eq_times_body_S.eq_times_body_S O.O (y:(sttfa.etap (sttfa.p (sttfa.arrow nat.nat nat.nat))) => eq.eq nat.nat (times.times (exp.exp a O.O) (bigop.bigop nat.nat O.O (i:(sttfa.etap (sttfa.p nat.nat)) => true.true) (S.S O.O) times.times (i:(sttfa.etap (sttfa.p nat.nat)) => f i))) (y (S.S O.O))) (eq_filter_nat_type_S.eq_filter_nat_type_S (sttfa.arrow nat.nat nat.nat) times_body.times_body O.O (y:(sttfa.etap (sttfa.p (sttfa.arrow nat.nat nat.nat))) => eq.eq nat.nat (times.times (exp.exp a O.O) (bigop.bigop nat.nat O.O (i:(sttfa.etap (sttfa.p nat.nat)) => true.true) (S.S O.O) times.times (i:(sttfa.etap (sttfa.p nat.nat)) => f i))) (y (S.S O.O))) (eq_times.eq_times (S.S O.O) (y:(sttfa.etap (sttfa.p (sttfa.arrow nat.nat nat.nat))) => eq.eq nat.nat (times.times (exp.exp a O.O) (bigop.bigop nat.nat O.O (i:(sttfa.etap (sttfa.p nat.nat)) => true.true) (S.S O.O) times.times (i:(sttfa.etap (sttfa.p nat.nat)) => f i))) (y (S.S O.O))) (eq_match_nat_type_O.eq_match_nat_type_O nat.nat (S.S O.O) (k:(sttfa.etap (sttfa.p nat.nat)) => match_bool_type.match_bool_type nat.nat (times.times (times.times a (f k)) (bigop.bigop nat.nat k (i:(sttfa.etap (sttfa.p nat.nat)) => true.true) (S.S O.O) times.times (i:(sttfa.etap (sttfa.p nat.nat)) => times.times a (f i)))) (bigop.bigop nat.nat k (i:(sttfa.etap (sttfa.p nat.nat)) => true.true) (S.S O.O) times.times (i:(sttfa.etap (sttfa.p nat.nat)) => times.times a (f i))) true.true) (y:(sttfa.etap (sttfa.p nat.nat)) => eq.eq nat.nat (times.times (exp.exp a O.O) (bigop.bigop nat.nat O.O (i:(sttfa.etap (sttfa.p nat.nat)) => true.true) (S.S O.O) times.times (i:(sttfa.etap (sttfa.p nat.nat)) => f i))) (times.times (S.S O.O) y)) (eq_exp_body_O.eq_exp_body_O a (y:(sttfa.etap (sttfa.p nat.nat)) => eq.eq nat.nat (times.times (exp.exp a O.O) (bigop.bigop nat.nat O.O (i:(sttfa.etap (sttfa.p nat.nat)) => true.true) (S.S O.O) times.times (i:(sttfa.etap (sttfa.p nat.nat)) => f i))) (times.times y ((p:(sttfa.etap (sttfa.p (sttfa.arrow nat.nat bool.bool))) => nil:(sttfa.etap (sttfa.p nat.nat)) => op:(sttfa.etap (sttfa.p (sttfa.arrow nat.nat (sttfa.arrow nat.nat nat.nat)))) => f0:(sttfa.etap (sttfa.p (sttfa.arrow nat.nat nat.nat))) => match_nat_type.match_nat_type nat.nat nil (k:(sttfa.etap (sttfa.p nat.nat)) => match_bool_type.match_bool_type nat.nat (op (f0 k) (bigop.bigop nat.nat k p nil op f0)) (bigop.bigop nat.nat k p nil op f0) (p k)) O.O) (i:(sttfa.etap (sttfa.p nat.nat)) => true.true) (S.S O.O) times.times (i:(sttfa.etap (sttfa.p nat.nat)) => times.times a (f i))))) (eq_filter_nat_type_O.eq_filter_nat_type_O nat.nat (exp_body.exp_body a) (y:(sttfa.etap (sttfa.p nat.nat)) => eq.eq nat.nat (times.times (exp.exp a O.O) (bigop.bigop nat.nat O.O (i:(sttfa.etap (sttfa.p nat.nat)) => true.true) (S.S O.O) times.times (i:(sttfa.etap (sttfa.p nat.nat)) => f i))) (times.times y ((p:(sttfa.etap (sttfa.p (sttfa.arrow nat.nat bool.bool))) => nil:(sttfa.etap (sttfa.p nat.nat)) => op:(sttfa.etap (sttfa.p (sttfa.arrow nat.nat (sttfa.arrow nat.nat nat.nat)))) => f0:(sttfa.etap (sttfa.p (sttfa.arrow nat.nat nat.nat))) => match_nat_type.match_nat_type nat.nat nil (k:(sttfa.etap (sttfa.p nat.nat)) => match_bool_type.match_bool_type nat.nat (op (f0 k) (bigop.bigop nat.nat k p nil op f0)) (bigop.bigop nat.nat k p nil op f0) (p k)) O.O) (i:(sttfa.etap (sttfa.p nat.nat)) => true.true) (S.S O.O) times.times (i:(sttfa.etap (sttfa.p nat.nat)) => times.times a (f i))))) (eq_exp.eq_exp a O.O (y:(sttfa.etap (sttfa.p nat.nat)) => eq.eq nat.nat (times.times (exp.exp a O.O) (bigop.bigop nat.nat O.O (i:(sttfa.etap (sttfa.p nat.nat)) => true.true) (S.S O.O) times.times (i:(sttfa.etap (sttfa.p nat.nat)) => f i))) (times.times y ((p:(sttfa.etap (sttfa.p (sttfa.arrow nat.nat bool.bool))) => nil:(sttfa.etap (sttfa.p nat.nat)) => op:(sttfa.etap (sttfa.p (sttfa.arrow nat.nat (sttfa.arrow nat.nat nat.nat)))) => f0:(sttfa.etap (sttfa.p (sttfa.arrow nat.nat nat.nat))) => match_nat_type.match_nat_type nat.nat nil (k:(sttfa.etap (sttfa.p nat.nat)) => match_bool_type.match_bool_type nat.nat (op (f0 k) (bigop.bigop nat.nat k p nil op f0)) (bigop.bigop nat.nat k p nil op f0) (p k)) O.O) (i:(sttfa.etap (sttfa.p nat.nat)) => true.true) (S.S O.O) times.times (i:(sttfa.etap (sttfa.p nat.nat)) => times.times a (f i))))) (sym_eq_match_nat_type_O.sym_eq_match_nat_type_O nat.nat (S.S O.O) (k:(sttfa.etap (sttfa.p nat.nat)) => match_bool_type.match_bool_type nat.nat (times.times (times.times a (f k)) (bigop.bigop nat.nat k (i:(sttfa.etap (sttfa.p nat.nat)) => true.true) (S.S O.O) times.times (i:(sttfa.etap (sttfa.p nat.nat)) => times.times a (f i)))) (bigop.bigop nat.nat k (i:(sttfa.etap (sttfa.p nat.nat)) => true.true) (S.S O.O) times.times (i:(sttfa.etap (sttfa.p nat.nat)) => times.times a (f i))) true.true) (y:(sttfa.etap (sttfa.p nat.nat)) => eq.eq nat.nat (times.times (exp.exp a O.O) (bigop.bigop nat.nat O.O (i:(sttfa.etap (sttfa.p nat.nat)) => true.true) (S.S O.O) times.times (i:(sttfa.etap (sttfa.p nat.nat)) => f i))) (times.times (exp.exp a O.O) y)) (eq_bigop_body_O.eq_bigop_body_O nat.nat (y:(sttfa.etap (sttfa.p (sttfa.arrow (sttfa.arrow nat.nat bool.bool) (sttfa.arrow nat.nat (sttfa.arrow (sttfa.arrow nat.nat (sttfa.arrow nat.nat nat.nat)) (sttfa.arrow (sttfa.arrow nat.nat nat.nat) nat.nat)))))) => eq.eq nat.nat (times.times (exp.exp a O.O) (bigop.bigop nat.nat O.O (i:(sttfa.etap (sttfa.p nat.nat)) => true.true) (S.S O.O) times.times (i:(sttfa.etap (sttfa.p nat.nat)) => f i))) (times.times (exp.exp a O.O) (y (i:(sttfa.etap (sttfa.p nat.nat)) => true.true) (S.S O.O) times.times (i:(sttfa.etap (sttfa.p nat.nat)) => f i)))) (eq_bigop_O.eq_bigop_O nat.nat (y:(sttfa.etap (sttfa.p (sttfa.arrow (sttfa.arrow nat.nat bool.bool) (sttfa.arrow nat.nat (sttfa.arrow (sttfa.arrow nat.nat (sttfa.arrow nat.nat nat.nat)) (sttfa.arrow (sttfa.arrow nat.nat nat.nat) nat.nat)))))) => eq.eq nat.nat (times.times (exp.exp a O.O) (bigop.bigop nat.nat O.O (i:(sttfa.etap (sttfa.p nat.nat)) => true.true) (S.S O.O) times.times (i:(sttfa.etap (sttfa.p nat.nat)) => f i))) (times.times (exp.exp a O.O) (y (i:(sttfa.etap (sttfa.p nat.nat)) => true.true) (S.S O.O) times.times (i:(sttfa.etap (sttfa.p nat.nat)) => f i)))) (refl.refl nat.nat (times.times (exp.exp a O.O) (bigop.bigop nat.nat O.O (i:(sttfa.etap (sttfa.p nat.nat)) => true.true) (S.S O.O) times.times (i:(sttfa.etap (sttfa.p nat.nat)) => f i))))))))))))))))))))))))) (i:(sttfa.etap (sttfa.p nat.nat)) => Hind:(sttfa.eps (eq.eq nat.nat (times.times (exp.exp a i) (bigop.bigop nat.nat i (i0:(sttfa.etap (sttfa.p nat.nat)) => true.true) (S.S O.O) times.times (i0:(sttfa.etap (sttfa.p nat.nat)) => f i0))) (bigop.bigop nat.nat i (i0:(sttfa.etap (sttfa.p nat.nat)) => true.true) (S.S O.O) times.times (i0:(sttfa.etap (sttfa.p nat.nat)) => times.times a (f i0))))) => eq_ind_r.eq_ind_r nat.nat (times.times (f i) (bigop.bigop nat.nat i (i0:(sttfa.etap (sttfa.p nat.nat)) => true.true) (S.S O.O) times.times (i0:(sttfa.etap (sttfa.p nat.nat)) => f i0))) (x:(sttfa.etap (sttfa.p nat.nat)) => eq.eq nat.nat (times.times (exp.exp a (S.S i)) x) (bigop.bigop nat.nat (S.S i) (i0:(sttfa.etap (sttfa.p nat.nat)) => true.true) (S.S O.O) times.times (i0:(sttfa.etap (sttfa.p nat.nat)) => times.times a (f i0)))) (eq_ind_r.eq_ind_r nat.nat (times.times (times.times a (f i)) (bigop.bigop nat.nat i (i0:(sttfa.etap (sttfa.p nat.nat)) => true.true) (S.S O.O) times.times (i0:(sttfa.etap (sttfa.p nat.nat)) => times.times a (f i0)))) (x:(sttfa.etap (sttfa.p nat.nat)) => eq.eq nat.nat (times.times (exp.exp a (S.S i)) (times.times (f i) (bigop.bigop nat.nat i (i0:(sttfa.etap (sttfa.p nat.nat)) => true.true) (S.S O.O) times.times (i0:(sttfa.etap (sttfa.p nat.nat)) => f i0)))) x) (eq_ind.eq_ind nat.nat (times.times (exp.exp a i) (bigop.bigop nat.nat i (i0:(sttfa.etap (sttfa.p nat.nat)) => true.true) (S.S O.O) times.times (i0:(sttfa.etap (sttfa.p nat.nat)) => f i0))) (x_1:(sttfa.etap (sttfa.p nat.nat)) => eq.eq nat.nat (times.times (exp.exp a (S.S i)) (times.times (f i) (bigop.bigop nat.nat i (i0:(sttfa.etap (sttfa.p nat.nat)) => true.true) (S.S O.O) times.times (i0:(sttfa.etap (sttfa.p nat.nat)) => f i0)))) (times.times (times.times a (f i)) x_1)) (eq_ind.eq_ind nat.nat (times.times (times.times (exp.exp a (S.S i)) (f i)) (bigop.bigop nat.nat i (i0:(sttfa.etap (sttfa.p nat.nat)) => true.true) (S.S O.O) times.times (i0:(sttfa.etap (sttfa.p nat.nat)) => f i0))) (x_1:(sttfa.etap (sttfa.p nat.nat)) => eq.eq nat.nat x_1 (times.times (times.times a (f i)) (times.times (exp.exp a i) (bigop.bigop nat.nat i (i0:(sttfa.etap (sttfa.p nat.nat)) => true.true) (S.S O.O) times.times (i0:(sttfa.etap (sttfa.p nat.nat)) => f i0))))) (eq_ind.eq_ind nat.nat (times.times (times.times (times.times a (f i)) (exp.exp a i)) (bigop.bigop nat.nat i (i0:(sttfa.etap (sttfa.p nat.nat)) => true.true) (S.S O.O) times.times (i0:(sttfa.etap (sttfa.p nat.nat)) => f i0))) (x_1:(sttfa.etap (sttfa.p nat.nat)) => eq.eq nat.nat (times.times (times.times (exp.exp a (S.S i)) (f i)) (bigop.bigop nat.nat i (i0:(sttfa.etap (sttfa.p nat.nat)) => true.true) (S.S O.O) times.times (i0:(sttfa.etap (sttfa.p nat.nat)) => f i0))) x_1) (eq_f2.eq_f2 nat.nat nat.nat nat.nat times.times (times.times (exp.exp a (S.S i)) (f i)) (times.times (times.times a (f i)) (exp.exp a i)) (bigop.bigop nat.nat i (i0:(sttfa.etap (sttfa.p nat.nat)) => true.true) (S.S O.O) times.times (i0:(sttfa.etap (sttfa.p nat.nat)) => f i0)) (bigop.bigop nat.nat i (i0:(sttfa.etap (sttfa.p nat.nat)) => true.true) (S.S O.O) times.times (i0:(sttfa.etap (sttfa.p nat.nat)) => f i0)) (sym_eq_exp.sym_eq_exp a (S.S i) (y:(sttfa.etap (sttfa.p nat.nat)) => eq.eq nat.nat (times.times y (f i)) (times.times (times.times a (f i)) (exp.exp a i))) (sym_eq_filter_nat_type_S.sym_eq_filter_nat_type_S nat.nat (exp_body.exp_body a) i (y:(sttfa.etap (sttfa.p nat.nat)) => eq.eq nat.nat (times.times y (f i)) (times.times (times.times a (f i)) (exp.exp a i))) (sym_eq_exp_body_S.sym_eq_exp_body_S a i (y:(sttfa.etap (sttfa.p nat.nat)) => eq.eq nat.nat (times.times y (f i)) (times.times (times.times a (f i)) (exp.exp a i))) (rewrite_r.rewrite_r nat.nat (times.times a (exp.exp a i)) (__:(sttfa.etap (sttfa.p nat.nat)) => eq.eq nat.nat (times.times __ (f i)) (times.times (times.times a (f i)) (exp.exp a i))) (rewrite_r.rewrite_r nat.nat (times.times (f i) (times.times a (exp.exp a i))) (__:(sttfa.etap (sttfa.p nat.nat)) => eq.eq nat.nat __ (times.times (times.times a (f i)) (exp.exp a i))) (rewrite_r.rewrite_r nat.nat (times.times a (times.times (f i) (exp.exp a i))) (__:(sttfa.etap (sttfa.p nat.nat)) => eq.eq nat.nat __ (times.times (times.times a (f i)) (exp.exp a i))) (rewrite_r.rewrite_r nat.nat (times.times (exp.exp a i) (times.times a (f i))) (__:(sttfa.etap (sttfa.p nat.nat)) => eq.eq nat.nat (times.times a (times.times (f i) (exp.exp a i))) __) (rewrite_r.rewrite_r nat.nat (times.times a (times.times (exp.exp a i) (f i))) (__:(sttfa.etap (sttfa.p nat.nat)) => eq.eq nat.nat (times.times a (times.times (f i) (exp.exp a i))) __) (rewrite_r.rewrite_r nat.nat (times.times (f i) (exp.exp a i)) (__:(sttfa.etap (sttfa.p nat.nat)) => eq.eq nat.nat (times.times a (times.times (f i) (exp.exp a i))) (times.times a __)) (refl.refl nat.nat (times.times a (times.times (f i) (exp.exp a i)))) (times.times (exp.exp a i) (f i)) (commutative_times.commutative_times (exp.exp a i) (f i))) (times.times (exp.exp a i) (times.times a (f i))) (times_times.times_times (exp.exp a i) a (f i))) (times.times (times.times a (f i)) (exp.exp a i)) (commutative_times.commutative_times (times.times a (f i)) (exp.exp a i))) (times.times (f i) (times.times a (exp.exp a i))) (times_times.times_times (f i) a (exp.exp a i))) (times.times (times.times a (exp.exp a i)) (f i)) (commutative_times.commutative_times (times.times a (exp.exp a i)) (f i))) (times.times (exp.exp a i) a) (commutative_times.commutative_times (exp.exp a i) a))))) (refl.refl nat.nat (bigop.bigop nat.nat i (i0:(sttfa.etap (sttfa.p nat.nat)) => true.true) (S.S O.O) times.times (i0:(sttfa.etap (sttfa.p nat.nat)) => f i0)))) (times.times (times.times a (f i)) (times.times (exp.exp a i) (bigop.bigop nat.nat i (i0:(sttfa.etap (sttfa.p nat.nat)) => true.true) (S.S O.O) times.times (i0:(sttfa.etap (sttfa.p nat.nat)) => f i0)))) (associative_times.associative_times (times.times a (f i)) (exp.exp a i) (bigop.bigop nat.nat i (i0:(sttfa.etap (sttfa.p nat.nat)) => true.true) (S.S O.O) times.times (i0:(sttfa.etap (sttfa.p nat.nat)) => f i0)))) (times.times (exp.exp a (S.S i)) (times.times (f i) (bigop.bigop nat.nat i (i0:(sttfa.etap (sttfa.p nat.nat)) => true.true) (S.S O.O) times.times (i0:(sttfa.etap (sttfa.p nat.nat)) => f i0)))) (associative_times.associative_times (exp.exp a (S.S i)) (f i) (bigop.bigop nat.nat i (i0:(sttfa.etap (sttfa.p nat.nat)) => true.true) (S.S O.O) times.times (i0:(sttfa.etap (sttfa.p nat.nat)) => f i0)))) (bigop.bigop nat.nat i (i0:(sttfa.etap (sttfa.p nat.nat)) => true.true) (S.S O.O) times.times (i0:(sttfa.etap (sttfa.p nat.nat)) => times.times a (f i0))) Hind) (bigop.bigop nat.nat (S.S i) (i0:(sttfa.etap (sttfa.p nat.nat)) => true.true) (S.S O.O) times.times (i0:(sttfa.etap (sttfa.p nat.nat)) => times.times a (f i0))) (bigop_Strue.bigop_Strue nat.nat i (__:(sttfa.etap (sttfa.p nat.nat)) => true.true) (S.S O.O) times.times (__:(sttfa.etap (sttfa.p nat.nat)) => times.times a (f __)) (refl.refl bool.bool true.true))) (bigop.bigop nat.nat (S.S i) (i0:(sttfa.etap (sttfa.p nat.nat)) => true.true) (S.S O.O) times.times (i0:(sttfa.etap (sttfa.p nat.nat)) => f i0)) (bigop_Strue.bigop_Strue nat.nat i (__:(sttfa.etap (sttfa.p nat.nat)) => true.true) (S.S O.O) times.times f (refl.refl bool.bool true.true))) n.

