def div_mod_spec_div_mod :
  sttfa.eps (sttfa.forall nat.nat (n:(sttfa.etap (sttfa.p nat.nat)) => sttfa.forall nat.nat (m:(sttfa.etap (sttfa.p nat.nat)) => sttfa.impl (lt.lt O.O m) (div_mod_spec.div_mod_spec n m (div.div n m) (mod.mod n m)))))
  :=
  n:(sttfa.etap (sttfa.p nat.nat)) => m:(sttfa.etap (sttfa.p nat.nat)) => posm:(sttfa.eps (lt.lt O.O m)) => div_mod_spec_intro.div_mod_spec_intro n m (div.div n m) (mod.mod n m) (lt_mod_m_m.lt_mod_m_m n m posm) (rewrite_r.rewrite_r nat.nat (times.times m (div.div n m)) (__:(sttfa.etap (sttfa.p nat.nat)) => eq.eq nat.nat n (plus.plus __ (mod.mod n m))) (rewrite_r.rewrite_r nat.nat (plus.plus (mod.mod n m) (times.times m (div.div n m))) (__:(sttfa.etap (sttfa.p nat.nat)) => eq.eq nat.nat n __) (rewrite_l.rewrite_l nat.nat n (__:(sttfa.etap (sttfa.p nat.nat)) => eq.eq nat.nat n __) (refl.refl nat.nat n) (plus.plus (mod.mod n m) (times.times m (div.div n m))) (rewrite_l.rewrite_l nat.nat (plus.plus (times.times m (div.div n m)) (mod.mod n m)) (__:(sttfa.etap (sttfa.p nat.nat)) => eq.eq nat.nat n __) (rewrite_l.rewrite_l nat.nat (times.times (div.div n m) m) (__:(sttfa.etap (sttfa.p nat.nat)) => eq.eq nat.nat n (plus.plus __ (mod.mod n m))) (div_mod.div_mod n m) (times.times m (div.div n m)) (commutative_times.commutative_times (div.div n m) m)) (plus.plus (mod.mod n m) (times.times m (div.div n m))) (commutative_plus.commutative_plus (times.times m (div.div n m)) (mod.mod n m)))) (plus.plus (times.times m (div.div n m)) (mod.mod n m)) (commutative_plus.commutative_plus (times.times m (div.div n m)) (mod.mod n m))) (times.times (div.div n m) m) (commutative_times.commutative_times (div.div n m) m)).

