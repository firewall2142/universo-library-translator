def bijn_fg :
  sttfa.eps (sttfa.forall (sttfa.arrow nat.nat nat.nat) (f:(sttfa.etap (sttfa.p (sttfa.arrow nat.nat nat.nat))) => sttfa.forall (sttfa.arrow nat.nat nat.nat) (g:(sttfa.etap (sttfa.p (sttfa.arrow nat.nat nat.nat))) => sttfa.forall nat.nat (n:(sttfa.etap (sttfa.p nat.nat)) => sttfa.impl (bijn.bijn f n) (sttfa.impl (bijn.bijn g n) (bijn.bijn (p:(sttfa.etap (sttfa.p nat.nat)) => f (g p)) n))))))
  :=
  f:(sttfa.etap (sttfa.p (sttfa.arrow nat.nat nat.nat))) => g:(sttfa.etap (sttfa.p (sttfa.arrow nat.nat nat.nat))) => n:(sttfa.etap (sttfa.p nat.nat)) => bijf:(sttfa.eps (bijn.bijn f n)) => bijg:(sttfa.eps (bijn.bijn g n)) => i:(sttfa.etap (sttfa.p nat.nat)) => lein:(sttfa.eps (le.le i n)) => match_ex_prop.match_ex_prop nat.nat (p:(sttfa.etap (sttfa.p nat.nat)) => And.And (le.le p n) (eq.eq nat.nat (f p) i)) (ex.ex nat.nat (p:(sttfa.etap (sttfa.p nat.nat)) => And.And (le.le p n) (eq.eq nat.nat (f (g p)) i))) (a:(sttfa.etap (sttfa.p nat.nat)) => _clearme:(sttfa.eps (And.And (le.le a n) (eq.eq nat.nat (f a) i))) => match_And_prop.match_And_prop (le.le a n) (eq.eq nat.nat (f a) i) (ex.ex nat.nat (p:(sttfa.etap (sttfa.p nat.nat)) => And.And (le.le p n) (eq.eq nat.nat (f (g p)) i))) (lean:(sttfa.eps (le.le a n)) => ga:(sttfa.eps (eq.eq nat.nat (f a) i)) => match_ex_prop.match_ex_prop nat.nat (p:(sttfa.etap (sttfa.p nat.nat)) => And.And (le.le p n) (eq.eq nat.nat (g p) a)) (ex.ex nat.nat (p:(sttfa.etap (sttfa.p nat.nat)) => And.And (le.le p n) (eq.eq nat.nat (f (g p)) i))) (b:(sttfa.etap (sttfa.p nat.nat)) => _clearme0:(sttfa.eps (And.And (le.le b n) (eq.eq nat.nat (g b) a))) => match_And_prop.match_And_prop (le.le b n) (eq.eq nat.nat (g b) a) (ex.ex nat.nat (p:(sttfa.etap (sttfa.p nat.nat)) => And.And (le.le p n) (eq.eq nat.nat (f (g p)) i))) (lebn:(sttfa.eps (le.le b n)) => gb:(sttfa.eps (eq.eq nat.nat (g b) a)) => ex_intro.ex_intro nat.nat (x:(sttfa.etap (sttfa.p nat.nat)) => And.And (le.le x n) (eq.eq nat.nat (f (g x)) i)) b (conj.conj (le.le b n) (eq.eq nat.nat (f (g b)) i) lebn (rewrite_r.rewrite_r nat.nat a (__:(sttfa.etap (sttfa.p nat.nat)) => eq.eq nat.nat (f __) i) (rewrite_r.rewrite_r nat.nat i (__:(sttfa.etap (sttfa.p nat.nat)) => eq.eq nat.nat __ i) (refl.refl nat.nat i) (f a) ga) (g b) gb))) _clearme0) (bijg a lean)) _clearme) (bijf i lein).

