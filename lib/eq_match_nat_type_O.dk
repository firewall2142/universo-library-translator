def eq_match_nat_type_O :
  sttfa.eps (sttfa.forallP (return_type:sttfa.type => sttfa.forall return_type (case_O:(sttfa.etap (sttfa.p return_type)) => sttfa.forall (sttfa.arrow nat.nat return_type) (case_S:(sttfa.etap (sttfa.p (sttfa.arrow nat.nat return_type))) => leibniz.leibniz return_type (match_nat_type.match_nat_type return_type case_O case_S O.O) case_O))))
  :=
  return_type:sttfa.type => case_O:(sttfa.etap (sttfa.p return_type)) => case_S:(sttfa.etap (sttfa.p (sttfa.arrow nat.nat return_type))) => equal_leibniz.equal_leibniz return_type (match_nat_type.match_nat_type return_type case_O case_S O.O) case_O (axiom_match_nat_type_O.axiom_match_nat_type_O return_type case_O case_S).

