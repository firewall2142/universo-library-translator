def sameF_upto_le :
  sttfa.eps (sttfa.forallP (A:sttfa.type => sttfa.forall (sttfa.arrow nat.nat A) (f:(sttfa.etap (sttfa.p (sttfa.arrow nat.nat A))) => sttfa.forall (sttfa.arrow nat.nat A) (g:(sttfa.etap (sttfa.p (sttfa.arrow nat.nat A))) => sttfa.forall nat.nat (n:(sttfa.etap (sttfa.p nat.nat)) => sttfa.forall nat.nat (m:(sttfa.etap (sttfa.p nat.nat)) => sttfa.impl (le.le n m) (sttfa.impl (sameF_upto.sameF_upto A m f g) (sameF_upto.sameF_upto A n f g))))))))
  :=
  A:sttfa.type => f:(sttfa.etap (sttfa.p (sttfa.arrow nat.nat A))) => g:(sttfa.etap (sttfa.p (sttfa.arrow nat.nat A))) => n:(sttfa.etap (sttfa.p nat.nat)) => m:(sttfa.etap (sttfa.p nat.nat)) => lenm:(sttfa.eps (le.le n m)) => samef:(sttfa.eps (sameF_upto.sameF_upto A m f g)) => i:(sttfa.etap (sttfa.p nat.nat)) => ltin:(sttfa.eps (lt.lt i n)) => samef i (lt_to_le_to_lt.lt_to_le_to_lt i n m ltin lenm).

