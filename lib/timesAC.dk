def timesAC :
  sttfa.eps (ACop.ACop nat.nat (S.S O.O))
  :=
  mk_ACop.mk_ACop nat.nat (S.S O.O) times.times (a:(sttfa.etap (sttfa.p nat.nat)) => sym_eq_times.sym_eq_times (S.S O.O) (y:(sttfa.etap (sttfa.p (sttfa.arrow nat.nat nat.nat))) => eq.eq nat.nat (y a) a) (sym_eq_filter_nat_type_S.sym_eq_filter_nat_type_S (sttfa.arrow nat.nat nat.nat) times_body.times_body O.O (y:(sttfa.etap (sttfa.p (sttfa.arrow nat.nat nat.nat))) => eq.eq nat.nat (y a) a) (sym_eq_times_body_S.sym_eq_times_body_S O.O (y:(sttfa.etap (sttfa.p (sttfa.arrow nat.nat nat.nat))) => eq.eq nat.nat (y a) a) (sym_eq_times.sym_eq_times O.O (y:(sttfa.etap (sttfa.p (sttfa.arrow nat.nat nat.nat))) => eq.eq nat.nat (plus.plus a (y a)) a) (sym_eq_filter_nat_type_O.sym_eq_filter_nat_type_O (sttfa.arrow nat.nat nat.nat) times_body.times_body (y:(sttfa.etap (sttfa.p (sttfa.arrow nat.nat nat.nat))) => eq.eq nat.nat (plus.plus a (y a)) a) (sym_eq_times_body_O.sym_eq_times_body_O (y:(sttfa.etap (sttfa.p (sttfa.arrow nat.nat nat.nat))) => eq.eq nat.nat (plus.plus a (y a)) a) (sym_eq.sym_eq nat.nat a (plus.plus a O.O) (plus_n_O.plus_n_O a)))))))) (n:(sttfa.etap (sttfa.p nat.nat)) => sym_eq.sym_eq nat.nat n (times.times n (S.S O.O)) (times_n_1.times_n_1 n)) (a:(sttfa.etap (sttfa.p nat.nat)) => b:(sttfa.etap (sttfa.p nat.nat)) => c:(sttfa.etap (sttfa.p nat.nat)) => sym_eq.sym_eq nat.nat (times.times (times.times a b) c) (times.times a (times.times b c)) (associative_times.associative_times a b c)) commutative_times.commutative_times.

